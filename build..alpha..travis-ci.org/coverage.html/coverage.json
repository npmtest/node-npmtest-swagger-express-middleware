{"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_swagger_express_middleware */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/lib.npmtest_swagger_express_middleware.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/lib.npmtest_swagger_express_middleware.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":71}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":77}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_swagger_express_middleware */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_swagger_express_middleware = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_swagger_express_middleware = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":70}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":84},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-swagger-express-middleware && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_swagger_express_middleware */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_swagger_express_middleware","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_swagger_express_middleware.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_swagger_express_middleware.rollup.js'] =","            local.assetsDict['/assets.npmtest_swagger_express_middleware.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_swagger_express_middleware.__dirname + '/lib.npmtest_swagger_express_middleware.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1},"b":{"1":[0,1],"2":[0,1],"3":[1,0]},"f":{"1":1},"fnMap":{"1":{"name":"createMiddleware","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":75}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"8":{"start":{"line":30,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":32,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"11":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"12":{"start":{"line":36,"column":7},"end":{"line":39,"column":3}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":22}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":57}},"16":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"18":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":7}},{"start":{"line":36,"column":7},"end":{"line":36,"column":7}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]}},"code":["'use strict';","","module.exports = createMiddleware;","module.exports.Middleware = require('./middleware');","module.exports.Resource = require('./data-store/resource');","module.exports.DataStore = require('./data-store');","module.exports.MemoryDataStore = require('./data-store/memory-data-store');","module.exports.FileDataStore = require('./data-store/file-data-store');","","var util = require('./helpers/util');","","/**"," * Creates Express middleware for the given Swagger API."," *"," * @param   {string|object}     [swagger]"," * The file path or URL of a Swagger 2.0 API spec, in YAML or JSON format."," * Or a valid Swagger API object (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#swagger-object)."," *"," * @param   {express#Router}    [router]"," * An Express Application or Router that will be used to determine settings (such as case-sensitivity and strict routing)"," * and to register path-parsing middleware."," *"," * @param   {function}          [callback]"," * It will be called when the API has been parsed, validated, and dereferenced, or when an error occurs."," *"," * @returns {Middleware}"," * The {@link Middleware} object is returned immediately, but it isn't ready to handle requests until"," * the callback function is called.  The same {@link Middleware} object will be passed to the callback function."," */","function createMiddleware(swagger, router, callback) {","  // Shift args if needed","  if (util.isExpressRouter(swagger)) {","    router = swagger;","    swagger = callback = undefined;","  }","  else if (!util.isExpressRouter(router)) {","    callback = router;","    router = undefined;","  }","","  var middleware = new module.exports.Middleware(router);","","  if (swagger) {","    middleware.init(swagger, callback);","  }","","  return middleware;","}",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"30":1,"32":1,"33":0,"34":0,"36":1,"37":0,"38":0,"41":1,"43":1,"44":1,"47":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/middleware.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/middleware.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":0,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":1,"29":1,"30":2,"31":2,"32":2,"33":2,"34":2,"35":1,"36":1,"37":2},"b":{"1":[2,0],"2":[2,0],"3":[2,0],"4":[0,2],"5":[2,0,0],"6":[1,1],"7":[2,1,1],"8":[1,1],"9":[2,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2},"fnMap":{"1":{"name":"Middleware","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":42}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":33},"end":{"line":47,"column":62}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":15},"end":{"line":76,"column":41}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":96,"column":18},"end":{"line":96,"column":35}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":14},"end":{"line":106,"column":25}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":22},"end":{"line":125,"column":48}}},"8":{"name":"(anonymous_8)","line":143,"loc":{"start":{"line":143,"column":25},"end":{"line":143,"column":36}}},"9":{"name":"(anonymous_9)","line":161,"loc":{"start":{"line":161,"column":14},"end":{"line":161,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":17,"column":42}},"3":{"start":{"line":29,"column":0},"end":{"line":171,"column":1}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":79}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":52}},"7":{"start":{"line":46,"column":2},"end":{"line":61,"column":4}},"8":{"start":{"line":47,"column":4},"end":{"line":60,"column":7}},"9":{"start":{"line":48,"column":6},"end":{"line":50,"column":7}},"10":{"start":{"line":49,"column":8},"end":{"line":49,"column":23}},"11":{"start":{"line":52,"column":6},"end":{"line":52,"column":26}},"12":{"start":{"line":53,"column":6},"end":{"line":53,"column":24}},"13":{"start":{"line":54,"column":6},"end":{"line":54,"column":34}},"14":{"start":{"line":55,"column":6},"end":{"line":55,"column":29}},"15":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"16":{"start":{"line":58,"column":8},"end":{"line":58,"column":43}},"17":{"start":{"line":76,"column":2},"end":{"line":84,"column":4}},"18":{"start":{"line":77,"column":4},"end":{"line":81,"column":5}},"19":{"start":{"line":79,"column":6},"end":{"line":79,"column":23}},"20":{"start":{"line":80,"column":6},"end":{"line":80,"column":28}},"21":{"start":{"line":83,"column":4},"end":{"line":83,"column":48}},"22":{"start":{"line":96,"column":2},"end":{"line":98,"column":4}},"23":{"start":{"line":97,"column":4},"end":{"line":97,"column":44}},"24":{"start":{"line":106,"column":2},"end":{"line":108,"column":4}},"25":{"start":{"line":107,"column":4},"end":{"line":107,"column":18}},"26":{"start":{"line":125,"column":2},"end":{"line":135,"column":4}},"27":{"start":{"line":126,"column":4},"end":{"line":130,"column":5}},"28":{"start":{"line":128,"column":6},"end":{"line":128,"column":23}},"29":{"start":{"line":129,"column":6},"end":{"line":129,"column":28}},"30":{"start":{"line":132,"column":4},"end":{"line":134,"column":43}},"31":{"start":{"line":143,"column":2},"end":{"line":145,"column":4}},"32":{"start":{"line":144,"column":4},"end":{"line":144,"column":37}},"33":{"start":{"line":161,"column":2},"end":{"line":170,"column":4}},"34":{"start":{"line":162,"column":4},"end":{"line":167,"column":5}},"35":{"start":{"line":165,"column":6},"end":{"line":165,"column":25}},"36":{"start":{"line":166,"column":6},"end":{"line":166,"column":25}},"37":{"start":{"line":169,"column":4},"end":{"line":169,"column":44}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":54},"end":{"line":30,"column":66}},{"start":{"line":30,"column":69},"end":{"line":30,"column":78}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":6}},{"start":{"line":48,"column":6},"end":{"line":48,"column":6}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"5":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":30}},{"start":{"line":77,"column":34},"end":{"line":77,"column":63}},{"start":{"line":77,"column":67},"end":{"line":77,"column":104}}]},"6":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":4}},{"start":{"line":126,"column":4},"end":{"line":126,"column":4}}]},"7":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":30}},{"start":{"line":126,"column":34},"end":{"line":126,"column":63}},{"start":{"line":126,"column":67},"end":{"line":126,"column":104}}]},"8":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"9":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":30}},{"start":{"line":163,"column":6},"end":{"line":163,"column":33}}]}},"code":["'use strict';","","module.exports = Middleware;","","var _                 = require('lodash'),","    swaggerParser     = require('swagger-parser'),","    util              = require('./helpers/util'),","    MiddlewareContext = require('./context'),","    DataStore         = require('./data-store'),","    requestMetadata   = require('./request-metadata'),","    fileServer        = require('./file-server'),","    CORS              = require('./cors'),","    requestParser     = require('./request-parser'),","    paramParser       = require('./param-parser'),","    pathParser        = require('./path-parser'),","    requestValidator  = require('./request-validator'),","    mock              = require('./mock');","","/**"," * Express middleware for the given Swagger API."," *"," * @param   {express#Router}    [sharedRouter]"," * An Express Application or Router. If provided, this will be used to determine routing settings"," * (case sensitivity, strictness), and to register path-param middleware via {@link Router#param}"," * (see http://expressjs.com/4x/api.html#router.param)."," *"," * @constructor"," */","function Middleware(sharedRouter) {","  sharedRouter = util.isExpressRouter(sharedRouter) ? sharedRouter : undefined;","","  var self = this;","  var context = new MiddlewareContext(sharedRouter);","","  /**","   * Initializes the middleware with the given Swagger API.","   * This method can be called again to re-initialize with a new or modified API.","   *","   * @param   {string|object}     [swagger]","   * The file path or URL of a Swagger 2.0 API spec, in YAML or JSON format.","   * Or a valid Swagger API object (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#swagger-object).","   *","   * @param   {function}          [callback]","   * It will be called when the API has been parsed, validated, and dereferenced, or when an error occurs.","   */","  this.init = function(swagger, callback) {","    swaggerParser.parse(swagger, function(err, api, metadata) {","      if (err) {","        util.warn(err);","      }","","      context.error = err;","      context.api = api;","      context.metadata = metadata;","      context.emit('change');","","      if (_.isFunction(callback)) {","        callback(err, self, api, metadata);","      }","    });","  };","","  /**","   * Serves the Swagger API file(s) in JSON and YAML formats,","   * so they can be used with third-party front-end tools like Swagger UI and Swagger Editor.","   *","   * @param   {express#Router}    [router]","   * Express routing options (e.g. `caseSensitive`, `strict`).","   * If an Express Application or Router is passed, then its routing settings will be used.","   *","   * @param   {fileServer.defaultOptions}  [options]","   * Options for how the files are served (see {@link fileServer.defaultOptions})","   *","   * @returns {function[]}","   */","  this.files = function(router, options) {","    if (arguments.length === 1 && !util.isExpressRouter(router) && !util.isExpressRoutingOptions(router)) {","      // Shift arguments","      options = router;","      router = sharedRouter;","    }","","    return fileServer(context, router, options);","  };","","  /**","   * Annotates the HTTP request (the `req` object) with Swagger metadata.","   * This middleware populates {@link Request#swagger}.","   *","   * @param   {express#Router}    [router]","   * Express routing options (e.g. `caseSensitive`, `strict`).","   * If an Express Application or Router is passed, then its routing settings will be used.","   *","   * @returns {function[]}","   */","  this.metadata = function(router) {","    return requestMetadata(context, router);","  };","","  /**","   * Handles CORS preflight requests and sets CORS headers for all requests","   * according the Swagger API definition.","   *","   * @returns {function[]}","   */","  this.CORS = function() {","    return CORS();","  };","","  /**","   * Parses the HTTP request into typed values.","   * This middleware populates {@link Request#params}, {@link Request#headers}, {@link Request#cookies},","   * {@link Request#signedCookies}, {@link Request#query}, {@link Request#body}, and {@link Request#files}.","   *","   * @param   {express#Router}    [router]","   * An Express Application or Router. If provided, this will be used to register path-param middleware","   * via {@link Router#param} (see http://expressjs.com/4x/api.html#router.param).","   * If not provided, then path parameters will always be parsed as strings.","   *","   * @param   {requestParser.defaultOptions}  [options]","   * Options for each of the request-parsing middleware (see {@link requestParser.defaultOptions})","   *","   * @returns {function[]}","   */","  this.parseRequest = function(router, options) {","    if (arguments.length === 1 && !util.isExpressRouter(router) && !util.isExpressRoutingOptions(router)) {","      // Shift arguments","      options = router;","      router = sharedRouter;","    }","","    return requestParser(options)","      .concat(paramParser())","      .concat(pathParser(context, router));","  };","","  /**","   * Validates the HTTP request against the Swagger API.","   * An error is sent downstream if the request is invalid for any reason.","   *","   * @returns {function[]}","   */","  this.validateRequest = function() {","    return requestValidator(context);","  };","","  /**","   * Implements mock behavior for HTTP requests, based on the Swagger API.","   *","   * @param   {express#Router}    [router]","   * Express routing options (e.g. `caseSensitive`, `strict`).","   * If an Express Application or Router is passed, then its routing settings will be used.","   *","   * @param   {DataStore}         [dataStore]","   * The data store that will be used to persist REST resources.","   * If `router` is an Express Application, then you can set/get the data store","   * using `router.get(\"mock data store\")`.","   *","   * @returns {function[]}","   */","  this.mock = function(router, dataStore) {","    if (arguments.length === 1 &&","      router instanceof DataStore) {","      // Shift arguments","      dataStore = router;","      router = undefined;","    }","","    return mock(context, router, dataStore);","  };","}",""],"l":{"3":1,"5":1,"29":1,"30":2,"32":2,"33":2,"46":2,"47":2,"48":2,"49":2,"52":2,"53":2,"54":2,"55":2,"57":2,"58":2,"76":2,"77":2,"79":0,"80":0,"83":2,"96":2,"97":2,"106":2,"107":2,"125":2,"126":2,"128":1,"129":1,"132":2,"143":2,"144":2,"161":2,"162":2,"165":1,"166":1,"169":2}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/helpers/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/helpers/util.js","s":{"1":1,"2":1,"3":2,"4":2,"5":0,"6":2,"7":0,"8":2,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":22,"29":31,"30":1,"31":20,"32":20,"33":0,"34":20,"35":0,"36":0,"37":20,"38":20,"39":20,"40":20,"41":20,"42":0,"43":20,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"b":{"1":[2,0],"2":[0,2],"3":[0,2],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[22,2,2,2,2],"10":[31,8],"11":[1,1,1,1],"12":[0,20],"13":[0,20],"14":[20,0],"15":[0,20],"16":[20,20],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":0,"3":22,"4":31,"5":1,"6":20,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":39}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":51}}},"3":{"name":"(anonymous_3)","line":91,"loc":{"start":{"line":91,"column":16},"end":{"line":91,"column":33}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":19},"end":{"line":106,"column":36}}},"5":{"name":"(anonymous_5)","line":117,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":44}}},"6":{"name":"(anonymous_6)","line":129,"loc":{"start":{"line":129,"column":17},"end":{"line":129,"column":40}}},"7":{"name":"(anonymous_7)","line":162,"loc":{"start":{"line":162,"column":11},"end":{"line":162,"column":26}}},"8":{"name":"(anonymous_8)","line":190,"loc":{"start":{"line":190,"column":20},"end":{"line":190,"column":34}}},"9":{"name":"(anonymous_9)","line":202,"loc":{"start":{"line":202,"column":21},"end":{"line":202,"column":36}}},"10":{"name":"(anonymous_10)","line":204,"loc":{"start":{"line":204,"column":14},"end":{"line":204,"column":31}}},"11":{"name":"(anonymous_11)","line":221,"loc":{"start":{"line":221,"column":23},"end":{"line":221,"column":53}}},"12":{"name":"(anonymous_12)","line":223,"loc":{"start":{"line":223,"column":6},"end":{"line":223,"column":39}}},"13":{"name":"(anonymous_13)","line":229,"loc":{"start":{"line":229,"column":12},"end":{"line":229,"column":27}}},"14":{"name":"(anonymous_14)","line":235,"loc":{"start":{"line":235,"column":14},"end":{"line":235,"column":33}}},"15":{"name":"(anonymous_15)","line":247,"loc":{"start":{"line":247,"column":17},"end":{"line":247,"column":43}}},"16":{"name":"(anonymous_16)","line":260,"loc":{"start":{"line":260,"column":56},"end":{"line":260,"column":72}}},"17":{"name":"(anonymous_17)","line":272,"loc":{"start":{"line":272,"column":20},"end":{"line":272,"column":46}}},"18":{"name":"(anonymous_18)","line":289,"loc":{"start":{"line":289,"column":48},"end":{"line":289,"column":64}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":53}},"2":{"start":{"line":8,"column":0},"end":{"line":299,"column":2}},"3":{"start":{"line":28,"column":4},"end":{"line":38,"column":5}},"4":{"start":{"line":29,"column":6},"end":{"line":37,"column":7}},"5":{"start":{"line":30,"column":8},"end":{"line":30,"column":52}},"6":{"start":{"line":32,"column":11},"end":{"line":37,"column":7}},"7":{"start":{"line":33,"column":8},"end":{"line":33,"column":83}},"8":{"start":{"line":36,"column":8},"end":{"line":36,"column":32}},"9":{"start":{"line":51,"column":4},"end":{"line":67,"column":5}},"10":{"start":{"line":52,"column":6},"end":{"line":52,"column":46}},"11":{"start":{"line":53,"column":6},"end":{"line":53,"column":19}},"12":{"start":{"line":54,"column":6},"end":{"line":54,"column":22}},"13":{"start":{"line":56,"column":9},"end":{"line":67,"column":5}},"14":{"start":{"line":57,"column":6},"end":{"line":57,"column":57}},"15":{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},"16":{"start":{"line":59,"column":6},"end":{"line":59,"column":19}},"17":{"start":{"line":61,"column":9},"end":{"line":67,"column":5}},"18":{"start":{"line":62,"column":6},"end":{"line":62,"column":57}},"19":{"start":{"line":63,"column":6},"end":{"line":63,"column":22}},"20":{"start":{"line":66,"column":6},"end":{"line":66,"column":57}},"21":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"22":{"start":{"line":70,"column":6},"end":{"line":70,"column":37}},"23":{"start":{"line":73,"column":4},"end":{"line":73,"column":58}},"24":{"start":{"line":74,"column":4},"end":{"line":74,"column":27}},"25":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"26":{"start":{"line":78,"column":6},"end":{"line":78,"column":56}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":18}},"28":{"start":{"line":92,"column":4},"end":{"line":96,"column":36}},"29":{"start":{"line":107,"column":4},"end":{"line":108,"column":33}},"30":{"start":{"line":118,"column":4},"end":{"line":119,"column":83}},"31":{"start":{"line":130,"column":4},"end":{"line":130,"column":30}},"32":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"33":{"start":{"line":133,"column":6},"end":{"line":133,"column":16}},"34":{"start":{"line":136,"column":4},"end":{"line":144,"column":5}},"35":{"start":{"line":137,"column":6},"end":{"line":137,"column":63}},"36":{"start":{"line":138,"column":6},"end":{"line":138,"column":48}},"37":{"start":{"line":142,"column":6},"end":{"line":142,"column":45}},"38":{"start":{"line":143,"column":6},"end":{"line":143,"column":31}},"39":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"40":{"start":{"line":147,"column":6},"end":{"line":147,"column":32}},"41":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"42":{"start":{"line":151,"column":6},"end":{"line":151,"column":45}},"43":{"start":{"line":154,"column":4},"end":{"line":154,"column":16}},"44":{"start":{"line":164,"column":4},"end":{"line":164,"column":86}},"45":{"start":{"line":165,"column":4},"end":{"line":165,"column":125}},"46":{"start":{"line":166,"column":4},"end":{"line":169,"column":15}},"47":{"start":{"line":192,"column":4},"end":{"line":192,"column":48}},"48":{"start":{"line":203,"column":4},"end":{"line":206,"column":21}},"49":{"start":{"line":204,"column":33},"end":{"line":204,"column":55}},"50":{"start":{"line":222,"column":4},"end":{"line":237,"column":9}},"51":{"start":{"line":224,"column":8},"end":{"line":227,"column":10}},"52":{"start":{"line":231,"column":8},"end":{"line":231,"column":46}},"53":{"start":{"line":232,"column":8},"end":{"line":232,"column":46}},"54":{"start":{"line":233,"column":8},"end":{"line":233,"column":21}},"55":{"start":{"line":236,"column":8},"end":{"line":236,"column":91}},"56":{"start":{"line":248,"column":4},"end":{"line":248,"column":46}},"57":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"58":{"start":{"line":252,"column":6},"end":{"line":252,"column":35}},"59":{"start":{"line":254,"column":4},"end":{"line":256,"column":5}},"60":{"start":{"line":255,"column":6},"end":{"line":255,"column":45}},"61":{"start":{"line":260,"column":4},"end":{"line":262,"column":7}},"62":{"start":{"line":261,"column":6},"end":{"line":261,"column":35}},"63":{"start":{"line":273,"column":4},"end":{"line":273,"column":53}},"64":{"start":{"line":276,"column":4},"end":{"line":276,"column":49}},"65":{"start":{"line":277,"column":4},"end":{"line":297,"column":5}},"66":{"start":{"line":278,"column":6},"end":{"line":283,"column":7}},"67":{"start":{"line":279,"column":8},"end":{"line":279,"column":38}},"68":{"start":{"line":282,"column":8},"end":{"line":282,"column":32}},"69":{"start":{"line":286,"column":6},"end":{"line":286,"column":66}},"70":{"start":{"line":289,"column":6},"end":{"line":294,"column":9}},"71":{"start":{"line":290,"column":8},"end":{"line":290,"column":46}},"72":{"start":{"line":291,"column":8},"end":{"line":293,"column":9}},"73":{"start":{"line":292,"column":10},"end":{"line":292,"column":43}},"74":{"start":{"line":296,"column":6},"end":{"line":296,"column":20}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":11},"end":{"line":32,"column":11}},{"start":{"line":32,"column":11},"end":{"line":32,"column":11}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":9},"end":{"line":56,"column":9}},{"start":{"line":56,"column":9},"end":{"line":56,"column":9}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":9},"end":{"line":61,"column":9}},{"start":{"line":61,"column":9},"end":{"line":61,"column":9}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":39}},{"start":{"line":93,"column":6},"end":{"line":93,"column":30}},{"start":{"line":94,"column":6},"end":{"line":94,"column":30}},{"start":{"line":95,"column":6},"end":{"line":95,"column":34}},{"start":{"line":96,"column":6},"end":{"line":96,"column":35}}]},"10":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":11},"end":{"line":107,"column":31}},{"start":{"line":108,"column":6},"end":{"line":108,"column":32}}]},"11":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":11},"end":{"line":118,"column":29}},{"start":{"line":119,"column":7},"end":{"line":119,"column":32}},{"start":{"line":119,"column":36},"end":{"line":119,"column":54}},{"start":{"line":119,"column":58},"end":{"line":119,"column":81}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"14":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"15":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"16":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":15}},{"start":{"line":150,"column":19},"end":{"line":150,"column":40}}]},"17":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":11},"end":{"line":192,"column":22}},{"start":{"line":192,"column":26},"end":{"line":192,"column":47}}]},"18":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":16},"end":{"line":225,"column":38}},{"start":{"line":225,"column":42},"end":{"line":225,"column":54}}]},"19":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":33},"end":{"line":231,"column":39}},{"start":{"line":231,"column":42},"end":{"line":231,"column":45}}]},"20":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":33},"end":{"line":232,"column":39}},{"start":{"line":232,"column":42},"end":{"line":232,"column":45}}]},"21":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":16},"end":{"line":236,"column":36}},{"start":{"line":236,"column":40},"end":{"line":236,"column":60}},{"start":{"line":236,"column":65},"end":{"line":236,"column":90}}]},"22":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"23":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":12}},{"start":{"line":251,"column":16},"end":{"line":251,"column":31}}]},"24":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":254,"column":4}},{"start":{"line":254,"column":4},"end":{"line":254,"column":4}}]},"25":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":17}},{"start":{"line":254,"column":21},"end":{"line":254,"column":41}}]},"26":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"27":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":6}},{"start":{"line":278,"column":6},"end":{"line":278,"column":6}}]},"28":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]}},"code":["'use strict';","","var debug       = require('debug'),","    format      = require('util').format,","    _           = require('lodash'),","    swaggerUtil = require('swagger-parser/lib/util');","","var util = module.exports = {","  /**","   * Writes messages to stdout.","   * Log messages are suppressed by default, but can be enabled by setting the DEBUG variable.","   *","   * @param   {string}    message     The error message.  May include format strings (%s, %d, %j)","   * @param   {...*}      [params]    One or more params to be passed to {@link util#format}","   * @type {function}","   */","  debug: debug('swagger:middleware'),","","  /**","   * Writes messages to stderr.","   * Warning messages are enabled by default, but can be suppressed by setting the WARN variable to \"off\".","   *","   * @param   {Error}     [err]       The error, if any","   * @param   {string}    message     The warning message.  May include format strings (%s, %d, %j)","   * @param   {...*}      [params]    One or more params to be passed to {@link util#format}","   */","  warn: function(err, message, params) {","    if (process.env.WARN !== 'off') {","      if (_.isString(err)) {","        console.warn(format.apply(null, arguments));","      }","      else if (arguments.length > 1) {","        console.warn(format.apply(null, _.drop(arguments, 1)) + ' \\n' + err.stack);","      }","      else {","        console.warn(err.stack);","      }","    }","  },","","  /**","   * Creates an Error object with a formatted message and an HTTP status code.","   *","   * @param   {number}    [status]    The HTTP status code (defaults to 500)","   * @param   {Error}     [err]       The original error, if any","   * @param   {string}    message     The error message.  May include format strings (%s, %d, %j)","   * @param   {...*}      [params]    One or more params to be passed to {@link util#format}","   * @returns {Error}","   */","  newError: function(status, err, message, params) {","    if (_.isString(status)) {","      message = format.apply(null, arguments);","      status = 500;","      err = undefined;","    }","    else if (status instanceof Error) {","      message = format.apply(null, _.drop(arguments, 1));","      err = status;","      status = 500;","    }","    else if (_.isString(err)) {","      message = format.apply(null, _.drop(arguments, 1));","      err = undefined;","    }","    else {","      message = format.apply(null, _.drop(arguments, 2));","    }","","    if (err) {","      message += ' \\n' + err.message;","    }","","    var newErr = new Error(status + ' Error: ' + message);","    newErr.status = status;","","    if (err) {","      // Keep the stack trace of the original error","      newErr.stack = newErr.message + ' \\n' + err.stack;","    }","","    return newErr;","  },","","  /**","   * Determines whether the given value is an Express Application.","   * Note: An Express Application is also an Express Router.","   *","   * @param   {*} router","   * @returns {boolean}","   */","  isExpressApp: function(router) {","    return util.isExpressRouter(router) &&","      _.isFunction(router.get) &&","      _.isFunction(router.set) &&","      _.isFunction(router.enabled) &&","      _.isFunction(router.disabled);","  },","","  /**","   * Determines whether the given value is an Express Router.","   * Note: An Express Application is also an Express Router.","   *","   * @param   {*} router","   * @returns {boolean}","   */","  isExpressRouter: function(router) {","    return _.isFunction(router) &&","      _.isFunction(router.param);","  },","","  /**","   * Determines whether the given value is an Express routing-options object.","   *","   * @param   {*} router","   * @returns {boolean}","   */","  isExpressRoutingOptions: function(router) {","    return _.isObject(router) &&","      ('caseSensitive' in router || 'strict' in router || 'mergeParams' in router);","  },","","  /**","   * Normalizes a path according to the given router's case-sensitivity and strict-routing settings.","   *","   * @param   {string}             path","   * @param   {express#Router}     router","   * @returns {string}","   */","  normalizePath: function(path, router) {","    var caseSensitive, strict;","","    if (!path) {","      return '';","    }","","    if (util.isExpressApp(router)) {","      caseSensitive = router.enabled('case sensitive routing');","      strict = router.enabled('strict routing');","    }","    else {","      // This could be an Express Router, or a POJO","      caseSensitive = !!router.caseSensitive;","      strict = !!router.strict;","    }","","    if (!caseSensitive) {","      path = path.toLowerCase();","    }","","    if (!strict && _.endsWith(path, '/')) {","      path = path.substr(0, path.length - 1);","    }","","    return path;","  },","","  /**","   * Formats a date as RFC 1123 (e.g. \"Tue, 05 Nov 1994 02:09:26 GMT\")","   * @param date","   * @returns {string}","   */","  rfc1123: function(date) {","    // jscs:disable maximumLineLength","    var dayName = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][date.getUTCDay()];","    var monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][date.getUTCMonth()];","    return [","      dayName, ', ', _.padLeft(date.getUTCDate(), 2, '0'), ' ', monthName, ' ', date.getUTCFullYear(), ' ',","      _.padLeft(date.getUTCHours(), 2, '0'), ':', _.padLeft(date.getUTCMinutes(), 2, '0'), ':', _.padLeft(date.getUTCSeconds(), 2, '0'), ' GMT'","    ].join('');","    // jscs:enable maximumLineLength","  },","","  /**","   * Regular Expression that matches Swagger path params.","   */","  swaggerParamRegExp: swaggerUtil.swaggerParamRegExp,","","  /**","   * The HTTP methods that Swagger supports","   * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#pathItemObject)","   */","  swaggerMethods: swaggerUtil.swaggerMethods,","","  /**","   * Determines whether the given HTTP request is a valid Swagger request.","   * That is, its `req.swagger.api`, `req.swagger.path`, and `req.swagger.operation` properties are set.","   * @param   {Request}   req","   * @returns {boolean}","   */","  isSwaggerRequest: function(req) {","    // If req.swagger.operation is set, then so are req.swagger.api and req.swagger.path","    return req.swagger && req.swagger.operation;","  },","","  /**","   * Returns a comma-delimited list of allowed HTTP methods for the given Swagger path.","   * This is useful for setting HTTP headers such as Allow and Access-Control-Allow-Methods.","   *","   * @param   {object}    path    A Path object, from the Swagger API.","   * @returns {string}","   */","  getAllowedMethods: function(path) {","    return util.swaggerMethods","      .filter(function(method) { return !!path[method]; })","      .join(', ')","      .toUpperCase();","  },","","  /**","   * Returns the given operation's Response objects that have HTTP response codes between","   * the given min and max (inclusive).","   *","   * @param   {object}    operation   An Operation object, from the Swagger API.","   * @param   {integer}   min         The minimum HTTP response code to include","   * @param   {integer}   max         The maximum HTTP response code to include","   *","   * @returns {{code: integer, api: object}[]}","   * An array of HTTP response codes and their corresponding Response objects,","   * sorted by response code (\"default\" comes last).","   */","  getResponsesBetween: function(operation, min, max) {","    return _.map(operation.responses,","      function(response, responseCode) {","        return {","          code: parseInt(responseCode) || responseCode,","          api: response","        };","      })","      .sort(function(a, b) {","        // Sort by response code.  \"default\" comes last.","        a = _.isNumber(a.code) ? a.code : 999;","        b = _.isNumber(b.code) ? b.code : 999;","        return a - b;","      })","      .filter(function(response) {","        return (response.code >= min && response.code <= max) || _.isString(response.code);","      });","  },","","  /**","   * Returns the combined parameters for the given path and operation.","   *","   * @param   {object}    path        A Path object, from the Swagger API","   * @param   {object}    operation   An Operation object, from the Swagger API","   * @returns {object[]}              An array of Parameter objects","   */","  getParameters: function(path, operation) {","    var pathParams = [], operationParams = [];","","    // Get the path and operation parameters","    if (path && path.parameters) {","      pathParams = path.parameters;","    }","    if (operation && operation.parameters) {","      operationParams = operation.parameters;","    }","","    // Combine the path and operation parameters,","    // with the operation params taking precedence over the path params","    return _.unique(operationParams.concat(pathParams), function(param) {","      return param.name + param.in;","    });","  },","","  /**","   * Gets the JSON schema for the given operation, based on its \"body\" or \"formData\" parameters.","   *","   * @param   {object}    path        A Path object, from the Swagger API","   * @param   {object}    operation   An Operation object, from the Swagger API","   * @returns {object}                A JSON schema object","   */","  getRequestSchema: function(path, operation) {","    var params = util.getParameters(path, operation);","","    // If there's a \"body\" parameter, then use its schema","    var bodyParam = _.find(params, {in: 'body'});","    if (bodyParam) {","      if (bodyParam.schema.type === 'array') {","        return bodyParam.schema.items;","      }","      else {","        return bodyParam.schema;","      }","    }","    else {","      var schema = {type: 'object', required: [], properties: {}};","","      // If there are \"formData\" parameters, then concatenate them into a single JSON schema","      _.where(params, {in: 'formData'}).forEach(function(param) {","        schema.properties[param.name] = param;","        if (param.required) {","          schema.required.push(param.name);","        }","      });","","      return schema;","    }","  }","};",""],"l":{"3":1,"8":1,"28":2,"29":2,"30":0,"32":2,"33":0,"36":2,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"66":0,"69":0,"70":0,"73":0,"74":0,"76":0,"78":0,"81":0,"92":22,"107":31,"118":1,"130":20,"132":20,"133":0,"136":20,"137":0,"138":0,"142":20,"143":20,"146":20,"147":20,"150":20,"151":0,"154":20,"164":0,"165":0,"166":0,"192":0,"203":0,"204":0,"222":0,"224":0,"231":0,"232":0,"233":0,"236":0,"248":0,"251":0,"252":0,"254":0,"255":0,"260":0,"261":0,"273":0,"276":0,"277":0,"278":0,"279":0,"282":0,"286":0,"289":0,"290":0,"291":0,"292":0,"296":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/context.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/context.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2},"b":{"1":[2,0]},"f":{"1":2},"fnMap":{"1":{"name":"MiddlewareContext","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":69}},"4":{"start":{"line":17,"column":0},"end":{"line":38,"column":1}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":29}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":18}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":16},"end":{"line":25,"column":22}},{"start":{"line":25,"column":26},"end":{"line":25,"column":28}}]}},"code":["'use strict';","","module.exports = MiddlewareContext;","","var _      = require('lodash'),","    events = require('events');","","// Inheritance","_.extend(MiddlewareContext.prototype, events.EventEmitter.prototype);","","/**"," * A context object that is shared by all middleware functions of a {@link Middleware} instance."," *"," * @extends EventEmitter"," * @constructor"," */","function MiddlewareContext(router) {","  events.EventEmitter.call(this);","","  /**","   * Express routing options (e.g. `caseSensitive`, `strict`).","   * If set to an Express Application or Router, then its routing settings will be used.","   * @type {express#Router}","   */","  this.router = router || {};","","  /**","   * The parsed Swagger API","   * @type {SwaggerObject}","   */","  this.api = null;","","  /**","   * If the Swagger API contains errors, this will be set","   * @type {Error}","   */","  this.error = null;","}","",""],"l":{"3":1,"5":1,"9":1,"17":1,"18":2,"25":2,"31":2,"37":2}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":1,"43":1,"44":0,"45":1,"46":5,"47":5,"48":5,"49":5,"50":5,"51":0,"52":0,"53":0,"54":5,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":1,"83":1,"84":1,"85":1,"86":0,"87":0,"88":1,"89":1,"90":1,"91":1,"92":5,"93":5,"94":0,"95":5,"96":5,"97":5,"98":1,"99":1,"100":1,"101":1,"102":2,"103":0,"104":0,"105":2,"106":1,"107":2,"108":1,"109":1,"110":1,"111":1,"112":1,"113":0,"114":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,1],"8":[0,5],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[1,1,1],"16":[0,1],"17":[0,5],"18":[5,1],"19":[0,2],"20":[1,1],"21":[1,1],"22":[0,1],"23":[0,1]},"f":{"1":2,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":5,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":2,"26":1},"fnMap":{"1":{"name":"DataStore","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":55}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":33},"end":{"line":41,"column":70}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":27},"end":{"line":65,"column":57}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":58},"end":{"line":79,"column":88}}},"6":{"name":"(anonymous_6)","line":93,"loc":{"start":{"line":93,"column":36},"end":{"line":93,"column":67}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":35},"end":{"line":96,"column":72}}},"8":{"name":"(anonymous_8)","line":118,"loc":{"start":{"line":118,"column":78},"end":{"line":118,"column":109}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":35},"end":{"line":121,"column":72}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":56},"end":{"line":134,"column":70}}},"11":{"name":"(anonymous_11)","line":165,"loc":{"start":{"line":165,"column":38},"end":{"line":165,"column":69}},"skip":true},"12":{"name":"(anonymous_12)","line":184,"loc":{"start":{"line":184,"column":38},"end":{"line":184,"column":80}},"skip":true},"13":{"name":"save","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":62}}},"14":{"name":"(anonymous_14)","line":197,"loc":{"start":{"line":197,"column":44},"end":{"line":197,"column":77}}},"15":{"name":"(anonymous_15)","line":202,"loc":{"start":{"line":202,"column":22},"end":{"line":202,"column":41}}},"16":{"name":"(anonymous_16)","line":224,"loc":{"start":{"line":224,"column":65},"end":{"line":224,"column":79}}},"17":{"name":"remove","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":64}}},"18":{"name":"(anonymous_18)","line":240,"loc":{"start":{"line":240,"column":44},"end":{"line":240,"column":77}}},"19":{"name":"(anonymous_19)","line":247,"loc":{"start":{"line":247,"column":22},"end":{"line":247,"column":41}}},"20":{"name":"(anonymous_20)","line":254,"loc":{"start":{"line":254,"column":67},"end":{"line":254,"column":81}}},"21":{"name":"openCollection","line":276,"loc":{"start":{"line":276,"column":0},"end":{"line":276,"column":57}}},"22":{"name":"(anonymous_22)","line":288,"loc":{"start":{"line":288,"column":44},"end":{"line":288,"column":69}}},"23":{"name":"doCallback","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":300,"column":40}}},"24":{"name":"call","line":317,"loc":{"start":{"line":317,"column":0},"end":{"line":317,"column":35}}},"25":{"name":"processNextCollection","line":351,"loc":{"start":{"line":351,"column":2},"end":{"line":351,"column":49}}},"26":{"name":"finished","line":374,"loc":{"start":{"line":374,"column":2},"end":{"line":374,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":37}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"4":{"start":{"line":14,"column":0},"end":{"line":23,"column":1}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":21}},"6":{"start":{"line":34,"column":0},"end":{"line":51,"column":2}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"8":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":38}},"10":{"start":{"line":41,"column":2},"end":{"line":50,"column":5}},"11":{"start":{"line":42,"column":4},"end":{"line":49,"column":5}},"12":{"start":{"line":43,"column":6},"end":{"line":43,"column":32}},"13":{"start":{"line":47,"column":6},"end":{"line":47,"column":67}},"14":{"start":{"line":48,"column":6},"end":{"line":48,"column":43}},"15":{"start":{"line":65,"column":0},"end":{"line":67,"column":2}},"16":{"start":{"line":66,"column":2},"end":{"line":66,"column":30}},"17":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"18":{"start":{"line":80,"column":2},"end":{"line":80,"column":32}},"19":{"start":{"line":93,"column":0},"end":{"line":106,"column":2}},"20":{"start":{"line":94,"column":2},"end":{"line":94,"column":18}},"21":{"start":{"line":96,"column":2},"end":{"line":105,"column":5}},"22":{"start":{"line":97,"column":4},"end":{"line":104,"column":5}},"23":{"start":{"line":98,"column":6},"end":{"line":98,"column":32}},"24":{"start":{"line":102,"column":6},"end":{"line":102,"column":78}},"25":{"start":{"line":103,"column":6},"end":{"line":103,"column":44}},"26":{"start":{"line":118,"column":0},"end":{"line":148,"column":2}},"27":{"start":{"line":119,"column":2},"end":{"line":119,"column":18}},"28":{"start":{"line":121,"column":2},"end":{"line":147,"column":5}},"29":{"start":{"line":122,"column":4},"end":{"line":146,"column":5}},"30":{"start":{"line":123,"column":6},"end":{"line":123,"column":32}},"31":{"start":{"line":127,"column":6},"end":{"line":127,"column":80}},"32":{"start":{"line":129,"column":6},"end":{"line":145,"column":7}},"33":{"start":{"line":131,"column":8},"end":{"line":131,"column":69}},"34":{"start":{"line":134,"column":8},"end":{"line":141,"column":11}},"35":{"start":{"line":135,"column":10},"end":{"line":140,"column":11}},"36":{"start":{"line":136,"column":12},"end":{"line":136,"column":38}},"37":{"start":{"line":139,"column":12},"end":{"line":139,"column":48}},"38":{"start":{"line":144,"column":8},"end":{"line":144,"column":39}},"39":{"start":{"line":165,"column":0},"end":{"line":165,"column":72},"skip":true},"40":{"start":{"line":184,"column":0},"end":{"line":184,"column":83},"skip":true},"41":{"start":{"line":195,"column":0},"end":{"line":228,"column":1}},"42":{"start":{"line":197,"column":2},"end":{"line":227,"column":5}},"43":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"44":{"start":{"line":199,"column":6},"end":{"line":199,"column":27}},"45":{"start":{"line":202,"column":4},"end":{"line":221,"column":7}},"46":{"start":{"line":204,"column":6},"end":{"line":204,"column":27}},"47":{"start":{"line":205,"column":6},"end":{"line":205,"column":41}},"48":{"start":{"line":206,"column":6},"end":{"line":206,"column":42}},"49":{"start":{"line":209,"column":6},"end":{"line":209,"column":84}},"50":{"start":{"line":210,"column":6},"end":{"line":220,"column":7}},"51":{"start":{"line":212,"column":8},"end":{"line":212,"column":99}},"52":{"start":{"line":213,"column":8},"end":{"line":213,"column":33}},"53":{"start":{"line":216,"column":8},"end":{"line":216,"column":37}},"54":{"start":{"line":219,"column":8},"end":{"line":219,"column":41}},"55":{"start":{"line":224,"column":4},"end":{"line":226,"column":7}},"56":{"start":{"line":225,"column":6},"end":{"line":225,"column":31}},"57":{"start":{"line":238,"column":0},"end":{"line":267,"column":1}},"58":{"start":{"line":240,"column":2},"end":{"line":266,"column":5}},"59":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"60":{"start":{"line":242,"column":6},"end":{"line":242,"column":27}},"61":{"start":{"line":246,"column":4},"end":{"line":246,"column":30}},"62":{"start":{"line":247,"column":4},"end":{"line":250,"column":7}},"63":{"start":{"line":248,"column":6},"end":{"line":248,"column":85}},"64":{"start":{"line":249,"column":6},"end":{"line":249,"column":58}},"65":{"start":{"line":252,"column":4},"end":{"line":265,"column":5}},"66":{"start":{"line":254,"column":6},"end":{"line":261,"column":9}},"67":{"start":{"line":255,"column":8},"end":{"line":260,"column":9}},"68":{"start":{"line":256,"column":10},"end":{"line":256,"column":24}},"69":{"start":{"line":259,"column":10},"end":{"line":259,"column":43}},"70":{"start":{"line":264,"column":6},"end":{"line":264,"column":25}},"71":{"start":{"line":276,"column":0},"end":{"line":291,"column":1}},"72":{"start":{"line":277,"column":2},"end":{"line":282,"column":3}},"73":{"start":{"line":278,"column":4},"end":{"line":278,"column":50}},"74":{"start":{"line":280,"column":7},"end":{"line":282,"column":3}},"75":{"start":{"line":281,"column":4},"end":{"line":281,"column":103}},"76":{"start":{"line":285,"column":2},"end":{"line":285,"column":68}},"77":{"start":{"line":288,"column":2},"end":{"line":290,"column":5}},"78":{"start":{"line":289,"column":4},"end":{"line":289,"column":41}},"79":{"start":{"line":300,"column":0},"end":{"line":304,"column":1}},"80":{"start":{"line":301,"column":2},"end":{"line":303,"column":3}},"81":{"start":{"line":302,"column":4},"end":{"line":302,"column":23}},"82":{"start":{"line":317,"column":0},"end":{"line":383,"column":1}},"83":{"start":{"line":318,"column":2},"end":{"line":318,"column":26}},"84":{"start":{"line":321,"column":2},"end":{"line":321,"column":105}},"85":{"start":{"line":324,"column":2},"end":{"line":331,"column":3}},"86":{"start":{"line":325,"column":4},"end":{"line":325,"column":49}},"87":{"start":{"line":326,"column":4},"end":{"line":326,"column":28}},"88":{"start":{"line":329,"column":4},"end":{"line":329,"column":38}},"89":{"start":{"line":330,"column":4},"end":{"line":330,"column":22}},"90":{"start":{"line":334,"column":2},"end":{"line":334,"column":23}},"91":{"start":{"line":335,"column":2},"end":{"line":344,"column":3}},"92":{"start":{"line":336,"column":4},"end":{"line":336,"column":32}},"93":{"start":{"line":337,"column":4},"end":{"line":339,"column":5}},"94":{"start":{"line":338,"column":6},"end":{"line":338,"column":108}},"95":{"start":{"line":341,"column":4},"end":{"line":341,"column":68}},"96":{"start":{"line":342,"column":4},"end":{"line":342,"column":87}},"97":{"start":{"line":343,"column":4},"end":{"line":343,"column":30}},"98":{"start":{"line":347,"column":2},"end":{"line":347,"column":49}},"99":{"start":{"line":348,"column":2},"end":{"line":348,"column":51}},"100":{"start":{"line":349,"column":2},"end":{"line":349,"column":26}},"101":{"start":{"line":351,"column":2},"end":{"line":372,"column":3}},"102":{"start":{"line":352,"column":4},"end":{"line":356,"column":5}},"103":{"start":{"line":354,"column":6},"end":{"line":354,"column":20}},"104":{"start":{"line":355,"column":6},"end":{"line":355,"column":13}},"105":{"start":{"line":358,"column":4},"end":{"line":361,"column":5}},"106":{"start":{"line":360,"column":6},"end":{"line":360,"column":64}},"107":{"start":{"line":363,"column":4},"end":{"line":371,"column":5}},"108":{"start":{"line":365,"column":6},"end":{"line":365,"column":41}},"109":{"start":{"line":369,"column":6},"end":{"line":369,"column":62}},"110":{"start":{"line":370,"column":6},"end":{"line":370,"column":88}},"111":{"start":{"line":374,"column":2},"end":{"line":382,"column":3}},"112":{"start":{"line":375,"column":4},"end":{"line":381,"column":5}},"113":{"start":{"line":376,"column":6},"end":{"line":376,"column":20}},"114":{"start":{"line":380,"column":6},"end":{"line":380,"column":64}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"4":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"6":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":10},"end":{"line":135,"column":10}},{"start":{"line":135,"column":10},"end":{"line":135,"column":10}}]},"7":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"8":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"9":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"10":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"11":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":255,"column":8}},{"start":{"line":255,"column":8},"end":{"line":255,"column":8}}]},"12":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"13":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":7},"end":{"line":280,"column":7}},{"start":{"line":280,"column":7},"end":{"line":280,"column":7}}]},"14":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"15":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":23},"end":{"line":321,"column":56}},{"start":{"line":321,"column":61},"end":{"line":321,"column":78}},{"start":{"line":321,"column":82},"end":{"line":321,"column":103}}]},"16":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"17":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"18":{"line":342,"type":"binary-expr","locations":[{"start":{"line":342,"column":21},"end":{"line":342,"column":48}},{"start":{"line":342,"column":53},"end":{"line":342,"column":85}}]},"19":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":352,"column":4}},{"start":{"line":352,"column":4},"end":{"line":352,"column":4}}]},"20":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"21":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"22":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":4},"end":{"line":375,"column":4}},{"start":{"line":375,"column":4},"end":{"line":375,"column":4}}]},"23":{"line":380,"type":"cond-expr","locations":[{"start":{"line":380,"column":38},"end":{"line":380,"column":50}},{"start":{"line":380,"column":53},"end":{"line":380,"column":62}}]}},"code":["'use strict';","","module.exports = DataStore;","","var _        = require('lodash'),","    util     = require('../helpers/util'),","    Resource = require('./resource');","require('./buffer-polyfill');","","/**"," * An abstract base class for data-storage of REST resources."," * @constructor"," */","function DataStore() {","  /**","   * The Express Application or Router that's used to determine case-sensitivity and/or strict matching","   * of collection paths and resource names.","   *","   * @type {express#Router}","   * @protected","   */","  this.__router = {};","}","","/**"," * Returns the given resource."," *"," * @param   {Resource|string}  resource    The resource (path) or Resource object to be retrieved"," *"," * @param   {function}  callback"," * An error-first callback.  The second parameter is the {@link Resource} object,"," * or undefined if no match was found."," */","DataStore.prototype.get = function(resource, callback) {","  var self = this;","","  if (_.isString(resource)) {","    resource = new Resource(resource);","  }","","  openCollection(self, resource, function(err, collection, resources) {","    if (err) {","      doCallback(callback, err);","    }","    else {","      // Find the resource","      resource = _.find(resources, resource.filter(self.__router));","      doCallback(callback, null, resource);","    }","  });","};","","//noinspection JSClosureCompilerSyntax","/**"," * Saves the given resource(s) to the data store."," * If any of the resources already exist, the new data is merged with the existing data."," *"," * @param   {...Resource|Resource[]}    resources"," * The resource(s) or array of resources to be saved"," *"," * @param   {function}  [callback]"," * An error-first callback.  The second parameter is the {@link Resource} object"," * or array of {@link Resource} objects that were saved."," */","DataStore.prototype.save = function(resources, callback) {","  call(this, save, arguments);","};","","/**"," * Removes the given resource from the data store."," *"," * @param   {...Resource|Resource[]}    resources"," * The resource(s) or array of resources to be removed"," *"," * @param   {function}  [callback]"," * An error-first callback.  The second parameter is the {@link Resource} object"," * or array of {@link Resource} objects that were removed."," */","DataStore.prototype.delete = DataStore.prototype.remove = function(resources, callback) {","  call(this, remove, arguments);","};","","/**"," * Returns all resources in the given collection."," *"," * @param   {string}    collection"," * The collection path (e.g. \"/\", \"/users\", \"/users/jdoe/orders/\")"," *"," * @param   {function}  callback"," * An error-first callback.  The second parameter is the array of {@link Resource} objects in the collection."," * If there are no resources for the given collection, then the array is empty."," */","DataStore.prototype.getCollection = function(collection, callback) {","  var self = this;","","  openCollection(self, collection, function(err, collection, resources) {","    if (err) {","      doCallback(callback, err);","    }","    else {","      // Return the resources in the collection","      resources = _.filter(resources, collection.filter(self.__router, true));","      doCallback(callback, null, resources);","    }","  });","};","","/**"," * Removes all resources in the given collection."," *"," * @param   {string}        collection"," * The collection path (e.g. \"/\", \"/users\", \"/users/jdoe/orders/\")"," *"," * @param   {function}      callback"," * An error-first callback.  The second parameter is the array of {@link Resource} objects that were deleted."," * If nothing was deleted, then the array is empty."," */","DataStore.prototype.deleteCollection = DataStore.prototype.removeCollection = function(collection, callback) {","  var self = this;","","  openCollection(self, collection, function(err, collection, resources) {","    if (err) {","      doCallback(callback, err);","    }","    else {","      // Remove all resources in the collection","      var removed = _.remove(resources, collection.filter(self.__router, true));","","      if (removed.length > 0) {","        // Normalize the collection name","        var collectionName = collection.valueOf(self.__router, true);","","        // Save the changes","        self.__saveDataStore(collectionName, resources, function(err) {","          if (err) {","            doCallback(callback, err);","          }","          else {","            doCallback(callback, null, removed);","          }","        });","      }","      else {","        doCallback(callback, null, []);","      }","    }","  });","};","","/* istanbul ignore next: abstract method */","/**"," * Opens the underlying data-store and returns its data."," * Depending on the implementation, this may be the contents of a flat file, a database query, etc. instead."," *"," * @param   {string}    collection"," * The Resource collection that is being operated upon."," * Some DataStore implementations may use this to determine which data to return."," *"," * @param   {function}  callback"," * An error-first callback.  The second parameter is an array of {@link Resource} objects"," * that correspond to the given `collection` and `name`."," *"," * @protected"," */","DataStore.prototype.__openDataStore = function(collection, callback) {};","","/* istanbul ignore next: abstract method */","/**"," * Persists changes to the underlying data-store."," * Depending on the implementation, this may write to a flat file, a database, etc. instead."," *"," * @param   {string}        collection"," * The Resource collection that is being operated upon."," * Some DataStore implementations may use this to determine which data to persist/overwrite."," *"," * @param   {Resource[]}    resources"," * An array of {@link Resource} objects that should be persisted to the underlying data-store."," *"," * @param   {function}      callback"," * An error-first callback.  Called when the data has been persisted, or an error occurs."," *"," * @protected"," */","DataStore.prototype.__saveDataStore = function(collection, resources, callback) {};","","/**"," * Saves the given resources to the data store."," * If any of the resources already exist, the new data is merged with the existing data."," *"," * @param   {DataStore}     dataStore           The DataStore to operate on"," * @param   {string}        collectionName      The collection that all the resources belong to"," * @param   {Resource[]}    resources           The Resources to be saved"," * @param   {function}      callback            Callback function"," */","function save(dataStore, collectionName, resources, callback) {","  // Open the data store","  dataStore.__openDataStore(collectionName, function(err, existingResources) {","    if (err) {","      return callback(err);","    }","","    resources.forEach(function(resource) {","      // Set the timestamp properties","      var now = Date.now();","      resource.createdOn = new Date(now);","      resource.modifiedOn = new Date(now);","","      // Does the resource already exist?","      var existing = _.find(existingResources, resource.filter(dataStore.__router));","      if (existing) {","        // Merge the new data into the existing resource","        util.debug('%s already exists. Merging new data with existing data.', resource.toString());","        existing.merge(resource);","","        // Update the calling code's reference to the resource","        _.extend(resource, existing);","      }","      else {","        existingResources.push(resource);","      }","    });","","    // Save the changes","    dataStore.__saveDataStore(collectionName, existingResources, function(err) {","      callback(err, resources);","    });","  });","}","","/**"," * Removes the given resource from the data store."," *"," * @param   {DataStore}     dataStore           The DataStore to operate on"," * @param   {string}        collectionName      The collection that all the resources belong to"," * @param   {Resource[]}    resources           The Resources to be removed"," * @param   {function}      callback            Callback function"," */","function remove(dataStore, collectionName, resources, callback) {","  // Open the data store","  dataStore.__openDataStore(collectionName, function(err, existingResources) {","    if (err) {","      return callback(err);","    }","","    // Remove the resources from the existing resources","    var removedResources = [];","    resources.forEach(function(resource) {","      var removed = _.remove(existingResources, resource.filter(dataStore.__router));","      removedResources = removedResources.concat(removed);","    });","","    if (removedResources.length > 0) {","      // Save the changes","      dataStore.__saveDataStore(collectionName, existingResources, function(err) {","        if (err) {","          callback(err);","        }","        else {","          callback(null, removedResources);","        }","      });","    }","    else {","      callback(null, []);","    }","  });","}","","/**"," * Opens the given collection."," *"," * @param   {DataStore}         dataStore       The DataStore to operate on"," * @param   {string|Resource}   collection      The collection path or a Resource object"," * @param   {function}          callback        Called with Error, collection Resource, and Resource array"," */","function openCollection(dataStore, collection, callback) {","  if (_.isString(collection)) {","    collection = new Resource(collection, '', '');","  }","  else if (!(collection instanceof Resource)) {","    throw util.newError('Expected a string or Resource object. Got a %s instead.', typeof(collection));","  }","","  // Normalize the collection name","  var collectionName = collection.valueOf(dataStore.__router, true);","","  // Open the data store","  dataStore.__openDataStore(collectionName, function(err, resources) {","    callback(err, collection, resources);","  });","}","","/**"," * Calls the given callback with the given arguments, if the callback is defined."," *"," * @param   {function|*}    callback"," * @param   {Error|null}    err"," * @param   {*}             arg"," */","function doCallback(callback, err, arg) {","  if (_.isFunction(callback)) {","    callback(err, arg);","  }","}","","/**"," * Calls the given function with normalized parameters:"," * the DataStore, collection name, an array of {@link Resource} objects, and a callback function."," *"," * The given function might be called multiple times.  Each time it is called, the array of resources"," * will all belong to the same collection."," *"," * @param   {DataStore} dataStore   The DataStore to operate on"," * @param   {function}  fn          The function to be called"," * @param   {arguments} args        The non-normalized arguments (one resource, multiple resources, a resource array, a callback)"," */","function call(dataStore, fn, args) {","  var resources, callback;","","  // If only a single resource was passed-in, then only a single resource will be passed-back","  var singleResource = _.first(args) instanceof Resource && (args.length === 0 || _.isFunction(args[1]));","","  // Normalize the arguments","  if (_.isFunction(_.last(args))) {","    resources = _.flatten(_.initial(args), true);","    callback = _.last(args);","  }","  else {","    resources = _.flatten(args, true);","    callback = _.noop;","  }","","  // Group the resources into collections","  var collections = {};","  for (var i = 0; i < resources.length; i++) {","    var resource = resources[i];","    if (!(resource instanceof Resource)) {","      throw util.newError('Expected a Resource object, but parameter %d is a %s.', i + 1, typeof(resource));","    }","","    var collectionName = resource.valueOf(dataStore.__router, true);","    var collection = collections[collectionName] || (collections[collectionName] = []);","    collection.push(resource);","  }","","  // Call the function for each collection of resources","  var collectionNames = Object.keys(collections);","  var collectionIndex = 0, processedResources = [];","  processNextCollection();","","  function processNextCollection(err, resources) {","    if (err) {","      // An error occurred, so abort.","      finished(err);","      return;","    }","","    if (resources) {","      // Add the resources to the list of processed resources","      processedResources = processedResources.concat(resources);","    }","","    if (collectionIndex >= collectionNames.length) {","      // We're done processing all collections, so return the results","      finished(null, processedResources);","    }","    else {","      // Process the next collection","      var collectionName = collectionNames[collectionIndex++];","      fn(dataStore, collectionName, collections[collectionName], processNextCollection);","    }","  }","","  function finished(err, resources) {","    if (err) {","      callback(err);","    }","    else {","      // Call the callback with a single resource or an array of resources","      callback(null, singleResource ? resources[0] : resources);","    }","  }","}",""],"l":{"3":1,"5":1,"8":1,"14":1,"22":2,"34":1,"35":0,"37":0,"38":0,"41":0,"42":0,"43":0,"47":0,"48":0,"65":1,"66":1,"79":1,"80":0,"93":1,"94":0,"96":0,"97":0,"98":0,"102":0,"103":0,"118":1,"119":0,"121":0,"122":0,"123":0,"127":0,"129":0,"131":0,"134":0,"135":0,"136":0,"139":0,"144":0,"165":1,"184":1,"195":1,"197":1,"198":1,"199":0,"202":1,"204":5,"205":5,"206":5,"209":5,"210":5,"212":0,"213":0,"216":0,"219":5,"224":1,"225":1,"238":1,"240":0,"241":0,"242":0,"246":0,"247":0,"248":0,"249":0,"252":0,"254":0,"255":0,"256":0,"259":0,"264":0,"276":1,"277":0,"278":0,"280":0,"281":0,"285":0,"288":0,"289":0,"300":1,"301":0,"302":0,"317":1,"318":1,"321":1,"324":1,"325":0,"326":0,"329":1,"330":1,"334":1,"335":1,"336":5,"337":5,"338":0,"341":5,"342":5,"343":5,"347":1,"348":1,"349":1,"351":1,"352":2,"354":0,"355":0,"358":2,"360":1,"363":2,"365":1,"369":1,"370":1,"374":1,"375":1,"376":0,"380":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/resource.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/resource.js","s":{"1":1,"2":1,"3":1,"4":10,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":5,"14":5,"15":5,"16":5,"17":5,"18":5,"19":5,"20":10,"21":10,"22":1,"23":15,"24":1,"25":10,"26":10,"27":10,"28":0,"29":10,"30":1,"31":20,"32":20,"33":20,"34":0,"35":1,"36":5,"37":5,"38":10,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":1,"47":1,"48":5,"49":5,"50":5,"51":5,"52":1,"53":1,"54":5,"55":5,"56":5,"57":0,"58":5,"59":1,"60":5,"61":5,"62":5,"63":0,"64":5,"65":1,"66":10,"67":10,"68":0,"69":10,"70":0,"71":10,"72":0,"73":10,"74":1,"75":10,"76":10,"77":0,"78":10,"79":0,"80":10,"81":0,"82":10},"b":{"1":[0,0,5,5],"2":[10,0],"3":[0,10],"4":[0,10],"5":[10,0,10,0],"6":[20,0],"7":[5,15],"8":[1,0],"9":[0,1],"10":[1,0],"11":[0,5],"12":[0,5],"13":[0,10],"14":[10,10,10],"15":[0,10],"16":[0,10],"17":[0,10],"18":[10,10,10],"19":[0,10],"20":[0,10]},"f":{"1":10,"2":15,"3":10,"4":20,"5":5,"6":10,"7":1,"8":5,"9":5,"10":5,"11":10,"12":10},"fnMap":{"1":{"name":"Resource","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":30},"end":{"line":64,"column":41}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":27},"end":{"line":74,"column":43}}},"4":{"name":"(anonymous_4)","line":99,"loc":{"start":{"line":99,"column":29},"end":{"line":99,"column":62}}},"5":{"name":"(anonymous_5)","line":123,"loc":{"start":{"line":123,"column":28},"end":{"line":123,"column":61}}},"6":{"name":"(anonymous_6)","line":126,"loc":{"start":{"line":126,"column":9},"end":{"line":126,"column":28}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":17},"end":{"line":142,"column":32}}},"8":{"name":"(anonymous_8)","line":156,"loc":{"start":{"line":156,"column":15},"end":{"line":156,"column":30}}},"9":{"name":"getCollectionFromPath","line":172,"loc":{"start":{"line":172,"column":0},"end":{"line":172,"column":37}}},"10":{"name":"getNameFromPath","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":31}}},"11":{"name":"normalizeCollection","line":211,"loc":{"start":{"line":211,"column":0},"end":{"line":211,"column":41}}},"12":{"name":"normalizeName","line":243,"loc":{"start":{"line":243,"column":0},"end":{"line":243,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":34,"column":0},"end":{"line":59,"column":1}},"4":{"start":{"line":35,"column":2},"end":{"line":55,"column":3}},"5":{"start":{"line":37,"column":6},"end":{"line":37,"column":27}},"6":{"start":{"line":38,"column":6},"end":{"line":38,"column":22}},"7":{"start":{"line":39,"column":6},"end":{"line":39,"column":28}},"8":{"start":{"line":40,"column":6},"end":{"line":40,"column":12}},"9":{"start":{"line":42,"column":6},"end":{"line":42,"column":52}},"10":{"start":{"line":43,"column":6},"end":{"line":43,"column":40}},"11":{"start":{"line":44,"column":6},"end":{"line":44,"column":28}},"12":{"start":{"line":45,"column":6},"end":{"line":45,"column":12}},"13":{"start":{"line":47,"column":6},"end":{"line":47,"column":23}},"14":{"start":{"line":48,"column":6},"end":{"line":48,"column":52}},"15":{"start":{"line":49,"column":6},"end":{"line":49,"column":40}},"16":{"start":{"line":50,"column":6},"end":{"line":50,"column":12}},"17":{"start":{"line":52,"column":6},"end":{"line":52,"column":50}},"18":{"start":{"line":53,"column":6},"end":{"line":53,"column":38}},"19":{"start":{"line":54,"column":6},"end":{"line":54,"column":23}},"20":{"start":{"line":57,"column":2},"end":{"line":57,"column":24}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":25}},"22":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"23":{"start":{"line":65,"column":2},"end":{"line":65,"column":37}},"24":{"start":{"line":74,"column":0},"end":{"line":87,"column":2}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":31}},"26":{"start":{"line":77,"column":2},"end":{"line":77,"column":81}},"27":{"start":{"line":80,"column":2},"end":{"line":86,"column":3}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":34}},"29":{"start":{"line":85,"column":4},"end":{"line":85,"column":26}},"30":{"start":{"line":99,"column":0},"end":{"line":107,"column":2}},"31":{"start":{"line":100,"column":2},"end":{"line":106,"column":3}},"32":{"start":{"line":101,"column":4},"end":{"line":101,"column":69}},"33":{"start":{"line":102,"column":4},"end":{"line":102,"column":47}},"34":{"start":{"line":105,"column":4},"end":{"line":105,"column":27}},"35":{"start":{"line":123,"column":0},"end":{"line":129,"column":2}},"36":{"start":{"line":124,"column":2},"end":{"line":124,"column":53}},"37":{"start":{"line":126,"column":2},"end":{"line":128,"column":4}},"38":{"start":{"line":127,"column":4},"end":{"line":127,"column":64}},"39":{"start":{"line":142,"column":0},"end":{"line":164,"column":2}},"40":{"start":{"line":143,"column":2},"end":{"line":146,"column":3}},"41":{"start":{"line":145,"column":4},"end":{"line":145,"column":32}},"42":{"start":{"line":148,"column":2},"end":{"line":148,"column":26}},"43":{"start":{"line":150,"column":2},"end":{"line":150,"column":32}},"44":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"45":{"start":{"line":152,"column":4},"end":{"line":152,"column":18}},"46":{"start":{"line":155,"column":2},"end":{"line":155,"column":21}},"47":{"start":{"line":156,"column":2},"end":{"line":161,"column":5}},"48":{"start":{"line":157,"column":4},"end":{"line":157,"column":71}},"49":{"start":{"line":158,"column":4},"end":{"line":158,"column":50}},"50":{"start":{"line":159,"column":4},"end":{"line":159,"column":52}},"51":{"start":{"line":160,"column":4},"end":{"line":160,"column":29}},"52":{"start":{"line":163,"column":2},"end":{"line":163,"column":44}},"53":{"start":{"line":172,"column":0},"end":{"line":181,"column":1}},"54":{"start":{"line":173,"column":2},"end":{"line":173,"column":28}},"55":{"start":{"line":174,"column":2},"end":{"line":174,"column":70}},"56":{"start":{"line":175,"column":2},"end":{"line":180,"column":3}},"57":{"start":{"line":176,"column":4},"end":{"line":176,"column":14}},"58":{"start":{"line":179,"column":4},"end":{"line":179,"column":61}},"59":{"start":{"line":189,"column":0},"end":{"line":198,"column":1}},"60":{"start":{"line":190,"column":2},"end":{"line":190,"column":28}},"61":{"start":{"line":191,"column":2},"end":{"line":191,"column":70}},"62":{"start":{"line":192,"column":2},"end":{"line":197,"column":3}},"63":{"start":{"line":193,"column":4},"end":{"line":193,"column":31}},"64":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"65":{"start":{"line":211,"column":0},"end":{"line":229,"column":1}},"66":{"start":{"line":213,"column":2},"end":{"line":213,"column":40}},"67":{"start":{"line":214,"column":2},"end":{"line":216,"column":3}},"68":{"start":{"line":215,"column":4},"end":{"line":215,"column":14}},"69":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"70":{"start":{"line":220,"column":4},"end":{"line":220,"column":34}},"71":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"72":{"start":{"line":225,"column":4},"end":{"line":225,"column":64}},"73":{"start":{"line":228,"column":2},"end":{"line":228,"column":20}},"74":{"start":{"line":243,"column":0},"end":{"line":261,"column":1}},"75":{"start":{"line":245,"column":2},"end":{"line":245,"column":28}},"76":{"start":{"line":246,"column":2},"end":{"line":248,"column":3}},"77":{"start":{"line":247,"column":4},"end":{"line":247,"column":15}},"78":{"start":{"line":251,"column":2},"end":{"line":253,"column":3}},"79":{"start":{"line":252,"column":4},"end":{"line":252,"column":22}},"80":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"81":{"start":{"line":257,"column":4},"end":{"line":257,"column":65}},"82":{"start":{"line":260,"column":2},"end":{"line":260,"column":14}}},"branchMap":{"1":{"line":35,"type":"switch","locations":[{"start":{"line":36,"column":4},"end":{"line":40,"column":12}},{"start":{"line":41,"column":4},"end":{"line":45,"column":12}},{"start":{"line":46,"column":4},"end":{"line":50,"column":12}},{"start":{"line":51,"column":4},"end":{"line":54,"column":23}}]},"2":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":26},"end":{"line":77,"column":72}},{"start":{"line":77,"column":75},"end":{"line":77,"column":80}}]},"3":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":54},"end":{"line":77,"column":64}},{"start":{"line":77,"column":67},"end":{"line":77,"column":72}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":7},"end":{"line":80,"column":27}},{"start":{"line":80,"column":31},"end":{"line":80,"column":51}},{"start":{"line":81,"column":5},"end":{"line":81,"column":31}},{"start":{"line":81,"column":35},"end":{"line":81,"column":61}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"7":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":35},"end":{"line":101,"column":50}},{"start":{"line":101,"column":53},"end":{"line":101,"column":68}}]},"8":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"9":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"10":{"line":163,"type":"cond-expr","locations":[{"start":{"line":163,"column":19},"end":{"line":163,"column":28}},{"start":{"line":163,"column":31},"end":{"line":163,"column":43}}]},"11":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"12":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"13":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"14":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":27}},{"start":{"line":214,"column":31},"end":{"line":214,"column":49}},{"start":{"line":214,"column":53},"end":{"line":214,"column":72}}]},"15":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"16":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"17":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"18":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":21}},{"start":{"line":246,"column":25},"end":{"line":246,"column":37}},{"start":{"line":246,"column":41},"end":{"line":246,"column":54}}]},"19":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"20":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]}},"code":["'use strict';","","module.exports = Resource;","","var util = require('../helpers/util'),","    _    = require('lodash');","","/**"," * Represents a single REST resource, such as a web page, a file, a piece of JSON data, etc."," * Each Resource is uniquely identifiable by its collection and its name."," *"," * Examples:"," *  /static/pages/index.html"," *      - Collection: /static/pages"," *      - Name: /index.html"," *"," *  /restaurants/washington/seattle/"," *      - Collection: /restaurants/washington"," *      - Name: /seattle/"," *"," *  /restaurants/washington/seattle/joes-diner"," *      - Collection: /restaurants/washington/seattle"," *      - Name: /joes-diner"," *  /"," *      - Collection: (empty string)"," *      - Name: /"," *"," *"," * @param   {string}    [path]      The full resource path (collection and name), or just the collection path"," * @param   {string}    [name]      The resource name (if `path` is just the collection path)"," * @param   {*}         [data]      The resource's data"," * @constructor"," */","function Resource(path, name, data) {","  switch (arguments.length) {","    case 0:","      this.collection = '';","      this.name = '/';","      this.data = undefined;","      break;","    case 1:","      this.collection = getCollectionFromPath(path);","      this.name = getNameFromPath(path);","      this.data = undefined;","      break;","    case 2:","      this.merge(name);","      this.collection = getCollectionFromPath(path);","      this.name = getNameFromPath(path);","      break;","    default:","      this.collection = normalizeCollection(path);","      this.name = normalizeName(name);","      this.merge(data);","  }","","  this.createdOn = null;","  this.modifiedOn = null;","}","","/**"," * Overrides {@link Object#toString}."," */","Resource.prototype.toString = function() {","  return this.collection + this.name;","};","","/**"," * Merges data into this resource's existing data."," *"," * @param   {Resource|*}    other"," * The data to merge.  If `other` is a {@link Resource}, then it's {@link Resource#data} will be used."," */","Resource.prototype.merge = function(other) {","  this.modifiedOn = new Date();","","  var otherData = other ? other instanceof Resource ? other.data : other : other;","","  // Merge with the other resource's data, if possible; otherwise, overwrite.","  if ((_.isArray(this.data) && _.isArray(otherData)) ||","    (_.isPlainObject(this.data) && _.isPlainObject(otherData))) {","    _.merge(this.data, otherData);","  }","  else {","    this.data = otherData;","  }","};","","/**"," * Overrides {@link Object#valueOf} to support extra options"," * for comparison against other {@link Resource} objects."," *"," * @param   {express#Router}    [router]"," * An Express Application or Router that will be used to determine case-sensitivity and strictness."," *"," * @param   {boolean}           [collectionOnly]"," * If true, then only the {@link Resource#collection} property will be returned."," */","Resource.prototype.valueOf = function(router, collectionOnly) {","  if (router) {","    var myValue = collectionOnly ? this.collection : this.toString();","    return util.normalizePath(myValue, router);","  }","  else {","    return this.toString();","  }","};","","/**"," * Creates a predicate function that compares this {@link Resource} object"," * to other {@link Resource} objects."," *"," * @param   {express#Router}    [router]"," * An Express Application or Router that will be used to determine case-sensitivity and strictness."," *"," * @param   {boolean}           [collectionOnly]"," * If true, then only the {@link Resource#collection} property will be returned."," *"," * @returns {function}"," * A comparison function that can be passed to filtering methods such as"," * {@link Array#filter}, {@link Array#find}, and {@link Array#some}."," */","Resource.prototype.filter = function(router, collectionOnly) {","  var myValue = this.valueOf(router, collectionOnly);","","  return function(resource) {","    return myValue === resource.valueOf(router, collectionOnly);","  };","};","","/**"," * Deserializes JSON or POJO data into {@link Resource} objects."," *"," * @param   {string|object|object[]}    json"," * A JSON string or POJO object/array containing the data for one or more Resource objects."," *"," * @returns {Resource|Resource[]}"," * If `data` is an array, or a JSON string containing an array,"," * then an array of {@link Resource} objects is returned."," * Otherwise, a single {@link Resource} object is returned."," */","Resource.parse = function(json) {","  if (!_.isString(json)) {","    // Convert the data to JSON, to match real-world serialization","    json = JSON.stringify(json);","  }","","  json = JSON.parse(json);","","  var isArray = _.isArray(json);","  if (!isArray) {","    json = [json];","  }","","  var resources = [];","  json.forEach(function(pojo) {","    var resource = new Resource(pojo.collection, pojo.name, pojo.data);","    resource.createdOn = new Date(pojo.createdOn);","    resource.modifiedOn = new Date(pojo.modifiedOn);","    resources.push(resource);","  });","","  return isArray ? resources : resources[0];","};","","/**"," * Returns the normalized collection path from the given full resource path."," *"," * @param   {string}    path    The full resource path (e.g. \"/restaurants/washington/seattle/joes-diner\")"," * @returns {string}            The normalized collection path (e.g. \"/restaurants/washington/seattle\")"," */","function getCollectionFromPath(path) {","  path = _(path).toString();","  var lastSlash = path.substring(0, path.length - 1).lastIndexOf('/');","  if (lastSlash === -1) {","    return '';","  }","  else {","    return normalizeCollection(path.substring(0, lastSlash));","  }","}","","/**"," * Returns the normalized resource name from the given full resource path."," *"," * @param   {string}    path    The full resource path (e.g. \"/restaurants/washington/seattle/joes-diner\")"," * @returns {string}            The normalized resource name (e.g. \"/joes-diner\")"," */","function getNameFromPath(path) {","  path = _(path).toString();","  var lastSlash = path.substring(0, path.length - 1).lastIndexOf('/');","  if (lastSlash === -1) {","    return normalizeName(path);","  }","  else {","    return normalizeName(path.substring(lastSlash));","  }","}","","/**"," * Normalizes collection paths."," *"," * Examples:"," *  /               => (empty string)"," *  /users          => /users"," *  /users/jdoe/    => /users/jdoe"," *"," * @param   {string}    collection"," * @returns {string}"," */","function normalizeCollection(collection) {","  // Normalize the root path as an empty string","  collection = _(collection).toString();","  if (_.isEmpty(collection) || collection === '/' || collection === '//') {","    return '';","  }","","  // Add a leading slash","  if (!_.startsWith(collection, '/')) {","    collection = '/' + collection;","  }","","  // Remove a trailing slash","  if (_.endsWith(collection, '/')) {","    collection = collection.substring(0, collection.length - 1);","  }","","  return collection;","}","","/**"," * Normalizes resource names."," *"," * Examples:"," *  /               => /"," *  /users          => /users"," *  users/          => /users/"," *  /users/jdoe     => ERROR! Slashes aren't allowed in the middle"," *"," * @param   {string}    name"," * @returns {string}"," */","function normalizeName(name) {","  // Normalize directories as a single slash","  name = _(name).toString();","  if (_.isEmpty(name) || name === '/' || name === '//') {","    return '/';","  }","","  // Add a leading slash","  if (!_.startsWith(name, '/')) {","    name = '/' + name;","  }","","  // Don't allow slashes in the middle","  if (_.contains(name.substring(1, name.length - 1), '/')) {","    throw util.newError('Resource names cannot contain slashes');","  }","","  return name;","}",""],"l":{"3":1,"5":1,"34":1,"35":10,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"47":5,"48":5,"49":5,"50":5,"52":5,"53":5,"54":5,"57":10,"58":10,"64":1,"65":15,"74":1,"75":10,"77":10,"80":10,"82":0,"85":10,"99":1,"100":20,"101":20,"102":20,"105":0,"123":1,"124":5,"126":5,"127":10,"142":1,"143":1,"145":1,"148":1,"150":1,"151":1,"152":0,"155":1,"156":1,"157":5,"158":5,"159":5,"160":5,"163":1,"172":1,"173":5,"174":5,"175":5,"176":0,"179":5,"189":1,"190":5,"191":5,"192":5,"193":0,"196":5,"211":1,"213":10,"214":10,"215":0,"219":10,"220":0,"224":10,"225":0,"228":10,"243":1,"245":10,"246":10,"247":0,"251":10,"252":0,"256":10,"257":0,"260":10}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/buffer-polyfill.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/buffer-polyfill.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,1]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":28},"end":{"line":5,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":11,"column":1}},"2":{"start":{"line":5,"column":2},"end":{"line":10,"column":4}},"3":{"start":{"line":6,"column":4},"end":{"line":9,"column":6}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":0},"end":{"line":4,"column":0}},{"start":{"line":4,"column":0},"end":{"line":4,"column":0}}]}},"code":["'use strict';","","// 0.10.x versions of Node serialize Buffers as arrays instead of objects","if (process.version.substring(0, 6) === 'v0.10.') {","  Buffer.prototype.toJSON = function() {","    return {","      type: 'Buffer',","      data: Array.prototype.slice.call(this, 0)","    };","  };","}",""],"l":{"4":1,"5":0,"6":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-metadata.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-metadata.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0},"b":{"1":[2,2],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"requestMetadata","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}},"2":{"name":"swaggerApiMetadata","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":46}}},"3":{"name":"swaggerPathMetadata","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":47}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":46},"end":{"line":52,"column":68}}},"5":{"name":"swaggerMetadata","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":41}}},"6":{"name":"swaggerOperationMetadata","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":50}}},"7":{"name":"swaggerParamsMetadata","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":47}}},"8":{"name":"swaggerSecurityMetadata","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":49}}},"9":{"name":"getRelativePath","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":184,"column":30}}},"10":{"name":"pathMatches","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":40}}},"11":{"name":"(anonymous_11)","line":202,"loc":{"start":{"line":202,"column":65},"end":{"line":202,"column":92}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":15,"column":0},"end":{"line":77,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":36}},"5":{"start":{"line":18,"column":2},"end":{"line":25,"column":4}},"6":{"start":{"line":30,"column":2},"end":{"line":41,"column":3}},"7":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":70}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":57}},"10":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"11":{"start":{"line":36,"column":8},"end":{"line":36,"column":38}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":11}},"13":{"start":{"line":46,"column":2},"end":{"line":76,"column":3}},"14":{"start":{"line":47,"column":4},"end":{"line":73,"column":5}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":41}},"16":{"start":{"line":49,"column":6},"end":{"line":49,"column":66}},"17":{"start":{"line":52,"column":6},"end":{"line":66,"column":9}},"18":{"start":{"line":53,"column":8},"end":{"line":53,"column":76}},"19":{"start":{"line":55,"column":8},"end":{"line":65,"column":9}},"20":{"start":{"line":57,"column":10},"end":{"line":57,"column":64}},"21":{"start":{"line":58,"column":10},"end":{"line":58,"column":45}},"22":{"start":{"line":59,"column":10},"end":{"line":59,"column":22}},"23":{"start":{"line":61,"column":13},"end":{"line":65,"column":9}},"24":{"start":{"line":63,"column":10},"end":{"line":63,"column":64}},"25":{"start":{"line":64,"column":10},"end":{"line":64,"column":45}},"26":{"start":{"line":68,"column":6},"end":{"line":72,"column":7}},"27":{"start":{"line":69,"column":8},"end":{"line":69,"column":96}},"28":{"start":{"line":71,"column":8},"end":{"line":71,"column":88}},"29":{"start":{"line":75,"column":4},"end":{"line":75,"column":11}},"30":{"start":{"line":82,"column":0},"end":{"line":134,"column":1}},"31":{"start":{"line":89,"column":2},"end":{"line":131,"column":4}},"32":{"start":{"line":133,"column":2},"end":{"line":133,"column":9}},"33":{"start":{"line":139,"column":0},"end":{"line":152,"column":1}},"34":{"start":{"line":140,"column":2},"end":{"line":149,"column":3}},"35":{"start":{"line":141,"column":4},"end":{"line":141,"column":42}},"36":{"start":{"line":143,"column":4},"end":{"line":148,"column":5}},"37":{"start":{"line":144,"column":6},"end":{"line":144,"column":55}},"38":{"start":{"line":147,"column":6},"end":{"line":147,"column":118}},"39":{"start":{"line":151,"column":2},"end":{"line":151,"column":9}},"40":{"start":{"line":157,"column":0},"end":{"line":160,"column":1}},"41":{"start":{"line":158,"column":2},"end":{"line":158,"column":83}},"42":{"start":{"line":159,"column":2},"end":{"line":159,"column":9}},"43":{"start":{"line":165,"column":0},"end":{"line":176,"column":1}},"44":{"start":{"line":166,"column":2},"end":{"line":173,"column":3}},"45":{"start":{"line":168,"column":4},"end":{"line":168,"column":92}},"46":{"start":{"line":170,"column":7},"end":{"line":173,"column":3}},"47":{"start":{"line":172,"column":4},"end":{"line":172,"column":58}},"48":{"start":{"line":175,"column":2},"end":{"line":175,"column":9}},"49":{"start":{"line":184,"column":0},"end":{"line":191,"column":1}},"50":{"start":{"line":185,"column":2},"end":{"line":190,"column":3}},"51":{"start":{"line":186,"column":4},"end":{"line":186,"column":20}},"52":{"start":{"line":189,"column":4},"end":{"line":189,"column":60}},"53":{"start":{"line":200,"column":0},"end":{"line":210,"column":1}},"54":{"start":{"line":202,"column":2},"end":{"line":204,"column":5}},"55":{"start":{"line":203,"column":4},"end":{"line":203,"column":21}},"56":{"start":{"line":207,"column":2},"end":{"line":207,"column":55}},"57":{"start":{"line":209,"column":2},"end":{"line":209,"column":31}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":11},"end":{"line":16,"column":17}},{"start":{"line":16,"column":21},"end":{"line":16,"column":35}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":13}},{"start":{"line":61,"column":13},"end":{"line":61,"column":13}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":17},"end":{"line":61,"column":42}},{"start":{"line":61,"column":46},"end":{"line":61,"column":99}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"9":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"10":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"11":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"12":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":27},"end":{"line":168,"column":57}},{"start":{"line":168,"column":61},"end":{"line":168,"column":85}},{"start":{"line":168,"column":89},"end":{"line":168,"column":91}}]},"13":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":7},"end":{"line":170,"column":7}},{"start":{"line":170,"column":7},"end":{"line":170,"column":7}}]},"14":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":27},"end":{"line":172,"column":51}},{"start":{"line":172,"column":55},"end":{"line":172,"column":57}}]},"15":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]}},"code":["'use strict';","","module.exports = requestMetadata;","","var util = require('./helpers/util'),","    _    = require('lodash');","","/**"," * Adds a {@link Request#swagger} property with Swagger metadata for each HTTP request."," *"," * @param   {MiddlewareContext} context"," * @param   {express#Router}    router"," * @returns {function[]}"," */","function requestMetadata(context, router) {","  router = router || context.router;","","  return [","    swaggerMetadata,","    swaggerApiMetadata,","    swaggerPathMetadata,","    swaggerOperationMetadata,","    swaggerParamsMetadata,","    swaggerSecurityMetadata","  ];","","  /**","   * Sets `req.swagger.api`","   */","  function swaggerApiMetadata(req, res, next) {","    // Only set req.swagger.api if the request is under the API's basePath","    if (context.api) {","      var basePath = util.normalizePath(context.api.basePath, router);","      var reqPath = util.normalizePath(req.path, router);","      if (_.startsWith(reqPath, basePath)) {","        req.swagger.api = context.api;","      }","    }","","    next();","  }","","  /**","   * Sets `req.swagger.path`","   */","  function swaggerPathMetadata(req, res, next) {","    if (req.swagger.api) {","      var relPath = getRelativePath(req);","      var relPathNormalized = util.normalizePath(relPath, router);","","      // Search for a matching path","      Object.keys(req.swagger.api.paths).some(function(swaggerPath) {","        var swaggerPathNormalized = util.normalizePath(swaggerPath, router);","","        if (swaggerPathNormalized === relPathNormalized) {","          // We found an exact match (i.e. a path with no parameters)","          req.swagger.path = req.swagger.api.paths[swaggerPath];","          req.swagger.pathName = swaggerPath;","          return true;","        }","        else if (req.swagger.path === null && pathMatches(relPathNormalized, swaggerPathNormalized)) {","          // We found a possible match, but keep searching in case we find an exact match","          req.swagger.path = req.swagger.api.paths[swaggerPath];","          req.swagger.pathName = swaggerPath;","        }","      });","","      if (req.swagger.path) {","        util.debug('%s %s matches Swagger path %s', req.method, req.path, req.swagger.pathName);","      } else {","        util.warn('WARNING! Unable to find a Swagger path that matches \"%s\"', req.path);","      }","    }","","    next();","  }","}","","/**"," * Creates the `req.swagger` object."," */","function swaggerMetadata(req, res, next) {","  /**","   * The Swagger Metadata that is added to each HTTP request.","   * This object is exposed as `req.swagger`.","   *","   * @name Request#swagger","   */","  req.swagger = {","    /**","     * The complete Swagger API object.","     * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#swagger-object)","     * @type {SwaggerObject|null}","     */","    api: null,","","    /**","     * The Swagger path name, as it appears in the Swagger API.","     * (e.g. \"/users/{username}/orders/{orderId}\")","     * @type {string}","     */","    pathName: '',","","    /**","     * The Path object from the Swagger API.","     * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#pathItemObject)","     * @type {object|null}","     */","    path: null,","","    /**","     * The Operation object from the Swagger API.","     * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#operationObject)","     * @type {object|null}","     */","    operation: null,","","    /**","     * The Parameter objects that apply to this request.","     * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#parameter-object-)","     * @type {object[]}","     */","    params: [],","","    /**","     * The Security Requirement objects that apply to this request.","     * (see https://github.com/swagger-api/swagger-spec/blob/master/versions/2.0.md#securityRequirementObject)","     * @type {object[]}","     */","    security: []","  };","","  next();","}","","/**"," * Sets `req.swagger.operation`"," */","function swaggerOperationMetadata(req, res, next) {","  if (req.swagger.path) {","    var method = req.method.toLowerCase();","","    if (method in req.swagger.path) {","      req.swagger.operation = req.swagger.path[method];","    }","    else {","      util.warn('WARNING! Unable to find a Swagger operation that matches %s %s', req.method.toUpperCase(), req.path);","    }","  }","","  next();","}","","/**"," * Sets `req.swagger.params`"," */","function swaggerParamsMetadata(req, res, next) {","  req.swagger.params = util.getParameters(req.swagger.path, req.swagger.operation);","  next();","}","","/**"," * Sets `req.swagger.security`"," */","function swaggerSecurityMetadata(req, res, next) {","  if (req.swagger.operation) {","    // Get the security requirements for this operation (or the global API security)","    req.swagger.security = req.swagger.operation.security || req.swagger.api.security || [];","  }","  else if (req.swagger.api) {","    // Get the global security requirements for the API","    req.swagger.security = req.swagger.api.security || [];","  }","","  next();","}","","/**"," * Returns the HTTP request path, relative to the Swagger API's basePath."," *"," * @param   {Request}   req"," * @returns {string}"," */","function getRelativePath(req) {","  if (!req.swagger.api.basePath) {","    return req.path;","  }","  else {","    return req.path.substr(req.swagger.api.basePath.length);","  }","}","","/**"," * Determines whether the given HTTP request path matches the given Swagger path."," *"," * @param   {string}    path            The request path (e.g. \"/users/jdoe/orders/1234\")"," * @param   {string}    swaggerPath     The Swagger path (e.g. \"/users/{username}/orders/{orderId}\")"," * @returns {boolean}"," */","function pathMatches(path, swaggerPath) {","  // Convert the Swagger path to a RegExp","  var pathPattern = swaggerPath.replace(util.swaggerParamRegExp, function(match, paramName) {","    return '([^/]+)';","  });","","  // NOTE: This checks for an EXACT, case-sensitive match","  var pathRegExp = new RegExp('^' + pathPattern + '$');","","  return pathRegExp.test(path);","}",""],"l":{"3":1,"5":1,"15":1,"16":2,"18":2,"30":1,"32":0,"33":0,"34":0,"35":0,"36":0,"40":0,"46":1,"47":0,"48":0,"49":0,"52":0,"53":0,"55":0,"57":0,"58":0,"59":0,"61":0,"63":0,"64":0,"68":0,"69":0,"71":0,"75":0,"82":1,"89":0,"133":0,"139":1,"140":0,"141":0,"143":0,"144":0,"147":0,"151":0,"157":1,"158":0,"159":0,"165":1,"166":0,"168":0,"170":0,"172":0,"175":0,"184":1,"185":0,"186":0,"189":0,"200":1,"202":0,"203":0,"207":0,"209":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/file-server.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/file-server.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":1},"b":{"1":[2,1],"2":[2,2],"3":[2,2],"4":[2,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"fileServer","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":46}}},"2":{"name":"serveDereferencedSwaggerFile","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":56}}},"3":{"name":"serveRawSwaggerFiles","line":61,"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":48}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":54},"end":{"line":76,"column":69}}},"5":{"name":"getConfiguredPath","line":104,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":37}},"3":{"start":{"line":18,"column":0},"end":{"line":112,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":60}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":81}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":80}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":64}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"11":{"start":{"line":36,"column":2},"end":{"line":56,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":53,"column":5}},"13":{"start":{"line":38,"column":6},"end":{"line":38,"column":71}},"14":{"start":{"line":39,"column":6},"end":{"line":39,"column":58}},"15":{"start":{"line":40,"column":6},"end":{"line":40,"column":57}},"16":{"start":{"line":42,"column":6},"end":{"line":52,"column":7}},"17":{"start":{"line":43,"column":8},"end":{"line":50,"column":9}},"18":{"start":{"line":44,"column":10},"end":{"line":44,"column":87}},"19":{"start":{"line":45,"column":10},"end":{"line":45,"column":32}},"20":{"start":{"line":48,"column":10},"end":{"line":48,"column":118}},"21":{"start":{"line":49,"column":10},"end":{"line":49,"column":35}},"22":{"start":{"line":51,"column":8},"end":{"line":51,"column":15}},"23":{"start":{"line":55,"column":4},"end":{"line":55,"column":11}},"24":{"start":{"line":61,"column":2},"end":{"line":97,"column":3}},"25":{"start":{"line":62,"column":4},"end":{"line":94,"column":5}},"26":{"start":{"line":63,"column":6},"end":{"line":63,"column":63}},"27":{"start":{"line":64,"column":6},"end":{"line":64,"column":58}},"28":{"start":{"line":65,"column":6},"end":{"line":65,"column":57}},"29":{"start":{"line":67,"column":6},"end":{"line":93,"column":7}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":65}},"31":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"32":{"start":{"line":71,"column":10},"end":{"line":71,"column":51}},"33":{"start":{"line":73,"column":8},"end":{"line":73,"column":80}},"34":{"start":{"line":76,"column":8},"end":{"line":80,"column":11}},"35":{"start":{"line":77,"column":10},"end":{"line":77,"column":75}},"36":{"start":{"line":78,"column":10},"end":{"line":78,"column":66}},"37":{"start":{"line":79,"column":10},"end":{"line":79,"column":47}},"38":{"start":{"line":82,"column":8},"end":{"line":92,"column":9}},"39":{"start":{"line":84,"column":10},"end":{"line":84,"column":46}},"40":{"start":{"line":86,"column":10},"end":{"line":86,"column":81}},"41":{"start":{"line":87,"column":10},"end":{"line":87,"column":33}},"42":{"start":{"line":88,"column":10},"end":{"line":88,"column":17}},"43":{"start":{"line":91,"column":10},"end":{"line":91,"column":96}},"44":{"start":{"line":96,"column":4},"end":{"line":96,"column":11}},"45":{"start":{"line":104,"column":2},"end":{"line":111,"column":3}},"46":{"start":{"line":105,"column":4},"end":{"line":110,"column":5}},"47":{"start":{"line":106,"column":6},"end":{"line":106,"column":41}},"48":{"start":{"line":109,"column":6},"end":{"line":109,"column":18}},"49":{"start":{"line":114,"column":0},"end":{"line":157,"column":2}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":35}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":33},"end":{"line":25,"column":61}},{"start":{"line":25,"column":65},"end":{"line":25,"column":80}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":79}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},{"start":{"line":30,"column":26},"end":{"line":30,"column":63}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":28}},{"start":{"line":37,"column":32},"end":{"line":37,"column":53}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"8":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"10":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},{"start":{"line":62,"column":32},"end":{"line":62,"column":53}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"12":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":10},"end":{"line":67,"column":43}},{"start":{"line":67,"column":47},"end":{"line":67,"column":63}}]},"13":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"15":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"16":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":27}},{"start":{"line":105,"column":31},"end":{"line":105,"column":42}},{"start":{"line":105,"column":46},"end":{"line":105,"column":66}}]}},"code":["'use strict';","","module.exports = fileServer;","","var _    = require('lodash'),","    path = require('path'),","    util = require('./helpers/util');","","/**"," * Serves the Swagger API file(s) in JSON and YAML formats,"," * so they can be used with third-party front-end tools like Swagger UI and Swagger Editor."," *"," * @param   {MiddlewareContext}             context"," * @param   {express#Router}                [router]"," * @param   {fileServer.defaultOptions}     [options]"," * @returns {function[]}"," */","function fileServer(context, router, options) {","  router = router || context.router;","","  // Override default options","  options = _.merge({}, fileServer.defaultOptions, options);","","  // Alias the `apiPath` property as dereferencedJsonPath","  options.dereferencedJsonPath = options.dereferencedJsonPath || options.apiPath;","","  // Only return the middleware that's allowed","  var middleware = [];","  options.dereferencedJsonPath && middleware.push(serveDereferencedSwaggerFile);","  options.rawFilesPath && middleware.push(serveRawSwaggerFiles);","  return middleware;","","  /**","   * Serves the fully-dereferenced Swagger API in JSON format.","   */","  function serveDereferencedSwaggerFile(req, res, next) {","    if (req.method === 'GET' || req.method === 'HEAD') {","      var configPath = getConfiguredPath(options.dereferencedJsonPath);","      configPath = util.normalizePath(configPath, router);","      var reqPath = util.normalizePath(req.path, router);","","      if (reqPath === configPath) {","        if (context.api) {","          util.debug('%s %s => Sending the Swagger API as JSON', req.method, req.path);","          res.json(context.api);","        }","        else {","          util.warn('WARNING! The Swagger API is empty. Sending an HTTP 500 response to %s %s', req.method, req.path);","          res.status(500).json({});","        }","        return;","      }","    }","","    next();","  }","","  /**","   * Serves the raw Swagger file(s).","   */","  function serveRawSwaggerFiles(req, res, next) {","    if (req.method === 'GET' || req.method === 'HEAD') {","      var configPath = getConfiguredPath(options.rawFilesPath);","      configPath = util.normalizePath(configPath, router);","      var reqPath = util.normalizePath(req.path, router);","","      if (_.startsWith(reqPath, configPath) && context.metadata) {","        // Get the normalized, relative path of the requested file","        var relativePath = req.path.substring(configPath.length);","        if (_.startsWith(relativePath, '/')) {","          relativePath = relativePath.substring(1);","        }","        relativePath = path.normalize(util.normalizePath(relativePath, router));","","        // See if any of the Swagger files match this path","        var filePath = _.find(context.metadata.files, function(file) {","          var relativeFile = path.relative(context.metadata.baseDir, file);","          relativeFile = util.normalizePath(relativeFile, router);","          return relativeFile === relativePath;","        });","","        if (filePath) {","          // Normalize the file path (required for Windows)","          filePath = path.normalize(filePath);","","          util.debug('%s %s => Sending file %s', req.method, req.path, filePath);","          res.sendFile(filePath);","          return;","        }","        else {","          util.debug('%s %s does not match any files in the Swagger API', req.method, req.path);","        }","      }","    }","","    next();","  }","","  /**","   * Prefixes the given path with the API's basePath, if that option is enabled and the API has a basePath.","   * @param   {string}    path","   * @returns {string}","   */","  function getConfiguredPath(path) {","    if (options.useBasePath && context.api && context.api.basePath) {","      return context.api.basePath + path;","    }","    else {","      return path;","    }","  }","}","","fileServer.defaultOptions = {","  /**","   * Determines whether the file paths are prefixed with the Swagger API's `basePath` value.","   * For example, if the `basePath` in the Swagger API is \"/api/v1\", then the Swagger JSON file","   * would be served at \"/api/v1/api-docs/\" instead of \"/api-docs/\".","   *","   * @type {boolean}","   */","  useBasePath: false,","","  /**","   * The path that will serve the fully dereferenced Swagger API in JSON format.","   * This file should work with any third-party tools, even if they don't support YAML,","   * `$ref` pointers, or mutli-file Swagger APIs.","   *","   * To disable serving this file, set the path to a falsy value (such as an empty string).","   *","   * @type {string}","   * @alias dereferencedJsonPath","   */","  apiPath: '/api-docs/',","","  /**","   * The path that will serve the raw Swagger API file(s).","   * For example, assume that your API consists of the following files:","   *","   *  - Main.yaml","   *  - Users.json","   *  - Products/Get-Products.yml","   *  - Products/Post-Products.yaml","   *","   * By default, each of these files would be served at:","   *","   *  - /api-docs/Main.yaml","   *  - /api-docs/Users.json","   *  - /api-docs/Products/Get-Products.yml","   *  - /api-docs/Products/Post-Products.yaml","   *","   * To disable serving raw Swagger files, set the path to a falsy value (such as an empty string).","   *","   * @type {string}","   */","  rawFilesPath: '/api-docs/'","};",""],"l":{"3":1,"5":1,"18":1,"19":2,"22":2,"25":2,"28":2,"29":2,"30":2,"31":2,"36":1,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"48":0,"49":0,"51":0,"55":0,"61":1,"62":0,"63":0,"64":0,"65":0,"67":0,"69":0,"70":0,"71":0,"73":0,"76":0,"77":0,"78":0,"79":0,"82":0,"84":0,"86":0,"87":0,"88":0,"91":0,"96":0,"104":1,"105":0,"106":0,"109":0,"114":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/cors.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/cors.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"b":{"1":[0,0],"2":[0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"CORS","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":16}}},"2":{"name":"corsHeaders","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":24},"end":{"line":35,"column":41}}},"4":{"name":"corsPreflight","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":39}}},"5":{"name":"getResponseHeaders","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":33}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":20},"end":{"line":125,"column":37}}},"7":{"name":"getOperationResponseHeaders","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":48}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":32},"end":{"line":145,"column":65}}},"9":{"name":"(anonymous_9)","line":149,"loc":{"start":{"line":149,"column":31},"end":{"line":149,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":9,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":38}},"6":{"start":{"line":30,"column":0},"end":{"line":87,"column":1}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":48}},"8":{"start":{"line":35,"column":2},"end":{"line":75,"column":5}},"9":{"start":{"line":36,"column":4},"end":{"line":74,"column":5}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":47}},"11":{"start":{"line":42,"column":6},"end":{"line":73,"column":7}},"12":{"start":{"line":45,"column":10},"end":{"line":45,"column":52}},"13":{"start":{"line":46,"column":10},"end":{"line":46,"column":16}},"14":{"start":{"line":49,"column":10},"end":{"line":56,"column":11}},"15":{"start":{"line":51,"column":12},"end":{"line":51,"column":70}},"16":{"start":{"line":55,"column":12},"end":{"line":55,"column":118}},"17":{"start":{"line":57,"column":10},"end":{"line":57,"column":16}},"18":{"start":{"line":61,"column":10},"end":{"line":61,"column":75}},"19":{"start":{"line":62,"column":10},"end":{"line":62,"column":16}},"20":{"start":{"line":66,"column":10},"end":{"line":66,"column":32}},"21":{"start":{"line":67,"column":10},"end":{"line":67,"column":16}},"22":{"start":{"line":71,"column":10},"end":{"line":71,"column":29}},"23":{"start":{"line":72,"column":10},"end":{"line":72,"column":16}},"24":{"start":{"line":77,"column":2},"end":{"line":84,"column":3}},"25":{"start":{"line":79,"column":4},"end":{"line":79,"column":57}},"26":{"start":{"line":83,"column":4},"end":{"line":83,"column":23}},"27":{"start":{"line":86,"column":2},"end":{"line":86,"column":9}},"28":{"start":{"line":92,"column":0},"end":{"line":100,"column":1}},"29":{"start":{"line":93,"column":2},"end":{"line":99,"column":3}},"30":{"start":{"line":94,"column":4},"end":{"line":94,"column":95}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":15}},"32":{"start":{"line":98,"column":4},"end":{"line":98,"column":11}},"33":{"start":{"line":109,"column":0},"end":{"line":133,"column":1}},"34":{"start":{"line":110,"column":2},"end":{"line":110,"column":23}},"35":{"start":{"line":111,"column":2},"end":{"line":130,"column":3}},"36":{"start":{"line":112,"column":4},"end":{"line":112,"column":21}},"37":{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},"38":{"start":{"line":116,"column":6},"end":{"line":116,"column":67}},"39":{"start":{"line":119,"column":4},"end":{"line":122,"column":5}},"40":{"start":{"line":121,"column":6},"end":{"line":121,"column":86}},"41":{"start":{"line":125,"column":4},"end":{"line":129,"column":7}},"42":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"43":{"start":{"line":127,"column":8},"end":{"line":127,"column":48}},"44":{"start":{"line":132,"column":2},"end":{"line":132,"column":21}},"45":{"start":{"line":141,"column":0},"end":{"line":163,"column":1}},"46":{"start":{"line":142,"column":2},"end":{"line":142,"column":19}},"47":{"start":{"line":144,"column":2},"end":{"line":160,"column":3}},"48":{"start":{"line":145,"column":4},"end":{"line":159,"column":7}},"49":{"start":{"line":147,"column":6},"end":{"line":147,"column":51}},"50":{"start":{"line":149,"column":6},"end":{"line":158,"column":9}},"51":{"start":{"line":151,"column":8},"end":{"line":157,"column":9}},"52":{"start":{"line":152,"column":10},"end":{"line":156,"column":13}},"53":{"start":{"line":162,"column":2},"end":{"line":162,"column":36}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":42,"type":"switch","locations":[{"start":{"line":43,"column":8},"end":{"line":46,"column":16}},{"start":{"line":48,"column":8},"end":{"line":57,"column":16}},{"start":{"line":59,"column":8},"end":{"line":62,"column":16}},{"start":{"line":64,"column":8},"end":{"line":67,"column":16}},{"start":{"line":69,"column":8},"end":{"line":72,"column":16}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":26},"end":{"line":45,"column":43}},{"start":{"line":45,"column":47},"end":{"line":45,"column":50}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":10},"end":{"line":49,"column":10}},{"start":{"line":49,"column":10},"end":{"line":49,"column":10}}]},"5":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":14},"end":{"line":49,"column":25}},{"start":{"line":49,"column":29},"end":{"line":49,"column":45}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":28},"end":{"line":55,"column":68}},{"start":{"line":55,"column":72},"end":{"line":55,"column":116}}]},"7":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":26},"end":{"line":61,"column":67}},{"start":{"line":61,"column":71},"end":{"line":61,"column":73}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"11":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"12":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"13":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"15":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":21},"end":{"line":147,"column":43}},{"start":{"line":147,"column":47},"end":{"line":147,"column":50}}]},"16":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]}},"code":["'use strict';","","module.exports = CORS;","","var util = require('./helpers/util'),","    _    = require('lodash');","","// The CORS headers","var accessControl = {","  allowOrigin: 'access-control-allow-origin',","  allowMethods: 'access-control-allow-methods',","  allowHeaders: 'access-control-allow-headers',","  allowCredentials: 'access-control-allow-credentials',","  maxAge: 'access-control-max-age'","};","","/**"," * Handles CORS preflight requests and sets CORS headers for all requests according the Swagger API definition."," *"," * @returns {function[]}"," */","function CORS() {","  return [corsHeaders, corsPreflight];","}","","/**"," * Sets the CORS headers.  If default values are specified in the Swagger API, then those values are used."," * Otherwise, sensible defaults are used."," */","function corsHeaders(req, res, next) {","  // Get the default CORS response headers as specified in the Swagger API","  var responseHeaders = getResponseHeaders(req);","","  // Set each CORS header","  _.each(accessControl, function(header) {","    if (responseHeaders[header] !== undefined) {","      // Set the header to the default value from the Swagger API","      res.set(header, responseHeaders[header]);","    }","    else {","      // Set the header to a sensible default","      switch (header) {","        case accessControl.allowOrigin:","          // By default, allow the origin host. Fallback to wild-card.","          res.set(header, req.get('Origin') || '*');","          break;","","        case accessControl.allowMethods:","          if (req.swagger && req.swagger.path) {","            // Return the allowed methods for this Swagger path","            res.set(header, util.getAllowedMethods(req.swagger.path));","          }","          else {","            // By default, allow all of the requested methods. Fallback to ALL methods.","            res.set(header, req.get('Access-Control-Request-Method') || util.swaggerMethods.join(', ').toUpperCase());","          }","          break;","","        case accessControl.allowHeaders:","          // By default, allow all of the requested headers","          res.set(header, req.get('Access-Control-Request-Headers') || '');","          break;","","        case accessControl.allowCredentials:","          // By default, allow credentials","          res.set(header, true);","          break;","","        case accessControl.maxAge:","          // By default, access-control expires immediately.","          res.set(header, 0);","          break;","      }","    }","  });","","  if (res.get(accessControl.allowOrigin) === '*') {","    // If Access-Control-Allow-Origin is wild-carded, then Access-Control-Allow-Credentials must be false","    res.set('Access-Control-Allow-Credentials', 'false');","  }","  else {","    // If Access-Control-Allow-Origin is set (not wild-carded), then \"Vary: Origin\" must be set","    res.vary('Origin');","  }","","  next();","}","","/**"," * Handles CORS preflight requests."," */","function corsPreflight(req, res, next) {","  if (req.method === 'OPTIONS') {","    util.debug('OPTIONS %s is a CORS preflight request. Sending HTTP 200 response.', req.path);","    res.send();","  }","  else {","    next();","  }","}","","/**"," * Returns an object containing the CORS response headers that are defined in the Swagger API."," * If the same CORS header is defined for multiple responses, then the first one wins."," *"," * @param   {Request}   req"," * @returns {object}"," */","function getResponseHeaders(req) {","  var corsHeaders = {};","  if (req.swagger) {","    var headers = [];","","    if (req.method !== 'OPTIONS') {","      // This isn't a preflight request, so the operation's response headers take precedence over the OPTIONS headers","      headers = getOperationResponseHeaders(req.swagger.operation);","    }","","    if (req.swagger.path) {","      // Regardless of whether this is a preflight request, append the OPTIONS response headers","      headers = headers.concat(getOperationResponseHeaders(req.swagger.path.options));","    }","","    // Add the headers to the `corsHeaders` object.  First one wins.","    headers.forEach(function(header) {","      if (corsHeaders[header.name] === undefined) {","        corsHeaders[header.name] = header.value;","      }","    });","  }","","  return corsHeaders;","}","","/**"," * Returns all response headers for the given Swagger operation, sorted by HTTP response code."," *"," * @param   {object}    operation   The Operation object from the Swagger API"," * @returns {{responseCode: integer, name: string, value: string}[]}"," */","function getOperationResponseHeaders(operation) {","  var headers = [];","","  if (operation) {","    _.each(operation.responses, function(response, responseCode) {","      // Convert responseCode to a numeric value for sorting (\"default\" comes last)","      responseCode = parseInt(responseCode) || 999;","","      _.each(response.headers, function(header, name) {","        // We only care about headers that have a default value defined","        if (header.default !== undefined) {","          headers.push({","            order: responseCode,","            name: name.toLowerCase(),","            value: header.default","          });","        }","      });","    });","  }","","  return _.sortBy(headers, 'order');","}",""],"l":{"3":1,"5":1,"9":1,"22":1,"23":2,"30":1,"32":0,"35":0,"36":0,"38":0,"42":0,"45":0,"46":0,"49":0,"51":0,"55":0,"57":0,"61":0,"62":0,"66":0,"67":0,"71":0,"72":0,"77":0,"79":0,"83":0,"86":0,"92":1,"93":0,"94":0,"95":0,"98":0,"109":1,"110":0,"111":0,"112":0,"114":0,"116":0,"119":0,"121":0,"125":0,"126":0,"127":0,"132":0,"141":1,"142":0,"144":0,"145":0,"147":0,"149":0,"151":0,"152":0,"162":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-parser.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":1},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"requestParser","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":18,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":63}},"5":{"start":{"line":22,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":32,"column":0},"end":{"line":84,"column":2}}},"branchMap":{},"code":["'use strict';","","module.exports = requestParser;","","var _            = require('lodash'),","    bodyParser   = require('body-parser'),","    cookieParser = require('cookie-parser'),","    multer       = require('multer');","","/**"," * Parses the HTTP request into useful objects."," * This middleware populates {@link Request#params}, {@link Request#headers}, {@link Request#cookies},"," * {@link Request#signedCookies}, {@link Request#query}, {@link Request#body}, and {@link Request#files}."," *"," * @param   {requestParser.defaultOptions}  [options]"," * @returns {function[]}"," */","function requestParser(options) {","  // Override default options","  options = _.merge({}, requestParser.defaultOptions, options);","","  return [","    cookieParser(options.cookie.secret, options.cookie),","    bodyParser.json(options.json),","    bodyParser.text(options.text),","    bodyParser.urlencoded(options.urlencoded),","    bodyParser.raw(options.raw),","    multer(options.multipart)","  ];","}","","requestParser.defaultOptions = {","  /**","   * Cookie parser options","   * (see https://github.com/expressjs/cookie-parser#cookieparsersecret-options)","   */","  cookie: {","    secret: undefined","  },","","  /**","   * JSON body parser options","   * (see https://github.com/expressjs/body-parser#bodyparserjsonoptions)","   */","  json: {","    limit: '1mb',","    type: ['json', '*/json', '+json']","  },","","  /**","   * Plain-text body parser options","   * (see https://github.com/expressjs/body-parser#bodyparsertextoptions)","   */","  text: {","    limit: '1mb',","    type: ['text/*']","  },","","  /**","   * URL-encoded body parser options","   * (see https://github.com/expressjs/body-parser#bodyparserurlencodedoptions)","   */","  urlencoded: {","    extended: true,","    limit: '1mb'","  },","","  /**","   * Raw body parser options","   * (see https://github.com/expressjs/body-parser#bodyparserrawoptions)","   */","  raw: {","    limit: '5mb',","    type: 'application/*'","  },","","  /**","   * Multipart form data parser options","   * (see https://github.com/expressjs/multer#options)","   */","  multipart: {","    putSingleFilesInArray: false // the Swagger spec does not allow multiple file params with same name","  }","};",""],"l":{"3":1,"5":1,"18":1,"20":2,"22":2,"32":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/param-parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/param-parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"paramParser","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}}},"2":{"name":"parseSimpleParams","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":35}}},"4":{"name":"parseFormDataParams","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":45}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":25},"end":{"line":52,"column":41}}},"6":{"name":"parseBodyParam","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":40}}},"7":{"name":"(anonymous_7)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":30}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":30},"end":{"line":101,"column":46}}},"9":{"name":"parseParameter","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":46}}},"10":{"name":"getParams","line":155,"loc":{"start":{"line":155,"column":0},"end":{"line":155,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"3":{"start":{"line":6,"column":0},"end":{"line":8,"column":50}},"4":{"start":{"line":16,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":66}},"6":{"start":{"line":23,"column":0},"end":{"line":46,"column":1}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":30}},"8":{"start":{"line":26,"column":2},"end":{"line":43,"column":3}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":66}},"10":{"start":{"line":29,"column":4},"end":{"line":42,"column":7}},"11":{"start":{"line":31,"column":6},"end":{"line":41,"column":7}},"12":{"start":{"line":33,"column":10},"end":{"line":33,"column":73}},"13":{"start":{"line":34,"column":10},"end":{"line":34,"column":86}},"14":{"start":{"line":35,"column":10},"end":{"line":35,"column":16}},"15":{"start":{"line":38,"column":10},"end":{"line":38,"column":74}},"16":{"start":{"line":39,"column":10},"end":{"line":39,"column":103}},"17":{"start":{"line":40,"column":10},"end":{"line":40,"column":16}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":9}},"19":{"start":{"line":51,"column":0},"end":{"line":68,"column":1}},"20":{"start":{"line":52,"column":2},"end":{"line":65,"column":5}},"21":{"start":{"line":53,"column":4},"end":{"line":64,"column":5}},"22":{"start":{"line":54,"column":6},"end":{"line":54,"column":73}},"23":{"start":{"line":56,"column":6},"end":{"line":63,"column":7}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":84}},"25":{"start":{"line":62,"column":8},"end":{"line":62,"column":82}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":9}},"27":{"start":{"line":73,"column":0},"end":{"line":111,"column":1}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":30}},"29":{"start":{"line":76,"column":2},"end":{"line":97,"column":5}},"30":{"start":{"line":77,"column":4},"end":{"line":96,"column":5}},"31":{"start":{"line":78,"column":6},"end":{"line":78,"column":68}},"32":{"start":{"line":80,"column":6},"end":{"line":89,"column":7}},"33":{"start":{"line":81,"column":8},"end":{"line":88,"column":9}},"34":{"start":{"line":83,"column":10},"end":{"line":83,"column":24}},"35":{"start":{"line":87,"column":10},"end":{"line":87,"column":31}},"36":{"start":{"line":92,"column":6},"end":{"line":92,"column":63}},"37":{"start":{"line":95,"column":6},"end":{"line":95,"column":18}},"38":{"start":{"line":100,"column":2},"end":{"line":108,"column":3}},"39":{"start":{"line":101,"column":4},"end":{"line":103,"column":7}},"40":{"start":{"line":102,"column":6},"end":{"line":102,"column":60}},"41":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"42":{"start":{"line":106,"column":6},"end":{"line":106,"column":27}},"43":{"start":{"line":110,"column":2},"end":{"line":110,"column":9}},"44":{"start":{"line":121,"column":0},"end":{"line":148,"column":1}},"45":{"start":{"line":122,"column":2},"end":{"line":139,"column":3}},"46":{"start":{"line":123,"column":4},"end":{"line":138,"column":5}},"47":{"start":{"line":125,"column":6},"end":{"line":125,"column":24}},"48":{"start":{"line":127,"column":6},"end":{"line":130,"column":7}},"49":{"start":{"line":129,"column":8},"end":{"line":129,"column":22}},"50":{"start":{"line":133,"column":6},"end":{"line":133,"column":95}},"51":{"start":{"line":135,"column":9},"end":{"line":138,"column":5}},"52":{"start":{"line":137,"column":6},"end":{"line":137,"column":23}},"53":{"start":{"line":141,"column":2},"end":{"line":147,"column":3}},"54":{"start":{"line":142,"column":4},"end":{"line":142,"column":47}},"55":{"start":{"line":145,"column":4},"end":{"line":146,"column":73}},"56":{"start":{"line":155,"column":0},"end":{"line":160,"column":1}},"57":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"58":{"start":{"line":157,"column":4},"end":{"line":157,"column":30}},"59":{"start":{"line":159,"column":2},"end":{"line":159,"column":12}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":31,"type":"switch","locations":[{"start":{"line":32,"column":8},"end":{"line":35,"column":16}},{"start":{"line":36,"column":8},"end":{"line":40,"column":16}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"6":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"7":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":10},"end":{"line":80,"column":35}},{"start":{"line":80,"column":39},"end":{"line":80,"column":58}}]},"8":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"9":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":35}},{"start":{"line":81,"column":40},"end":{"line":81,"column":52}},{"start":{"line":81,"column":56},"end":{"line":81,"column":86}}]},"10":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"11":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":13},"end":{"line":102,"column":32}},{"start":{"line":102,"column":36},"end":{"line":102,"column":59}}]},"12":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"13":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"14":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"15":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"16":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":31}},{"start":{"line":127,"column":35},"end":{"line":127,"column":80}}]},"17":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":9},"end":{"line":135,"column":9}},{"start":{"line":135,"column":9},"end":{"line":135,"column":9}}]},"18":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":50},"end":{"line":146,"column":63}},{"start":{"line":146,"column":66},"end":{"line":146,"column":71}}]},"19":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"20":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":17}},{"start":{"line":156,"column":21},"end":{"line":156,"column":39}}]}},"code":["'use strict';","","module.exports = paramParser;","module.exports.parseParameter = parseParameter;","","var _          = require('lodash'),","    util       = require('./helpers/util'),","    JsonSchema = require('./helpers/json-schema');","","/**"," * Parses all Swagger parameters in the HTTP request."," * This middleware populates {@link Request#headers}, {@link Request#query}, and {@link Request#body}."," *"," * @returns {function[]}"," */","function paramParser() {","  return [parseSimpleParams, parseFormDataParams, parseBodyParam];","}","","/**"," * Parses all Swagger parameters in the query string and headers"," */","function parseSimpleParams(req, res, next) {","  var params = getParams(req);","","  if (params.length > 0) {","    util.debug('Parsing %d request parameters...', params.length);","","    params.forEach(function(param) {","      // Get the raw value of the parameter","      switch (param.in) {","        case 'query':","          util.debug('    Parsing the \"%s\" query parameter', param.name);","          req.query[param.name] = parseParameter(param, req.query[param.name], param);","          break;","        case 'header':","          // NOTE: req.headers properties are always lower-cased","          util.debug('    Parsing the \"%s\" header parameter', param.name);","          req.headers[param.name.toLowerCase()] = parseParameter(param, req.header(param.name), param);","          break;","      }","    });","  }","","  next();","}","","/**"," * Parses all Swagger parameters in the form data."," */","function parseFormDataParams(req, res, next) {","  getParams(req).forEach(function(param) {","    if (param.in === 'formData') {","      util.debug('    Parsing the \"%s\" form-data parameter', param.name);","","      if (param.type === 'file') {","        // Validate the file (min/max size, etc.)","        req.files[param.name] = parseParameter(param, req.files[param.name], param);","      }","      else {","        // Parse the body parameter","        req.body[param.name] = parseParameter(param, req.body[param.name], param);","      }","    }","  });","","  next();","}","","/**"," * Parses the Swagger \"body\" parameter."," */","function parseBodyParam(req, res, next) {","  var params = getParams(req);","","  params.some(function(param) {","    if (param.in === 'body') {","      util.debug('    Parsing the \"%s\" body parameter', param.name);","","      if (_.isPlainObject(req.body) && _.isEmpty(req.body)) {","        if (param.type === 'string' || (param.schema && param.schema.type === 'string')) {","          // Convert {} to \"\"","          req.body = '';","        }","        else {","          // Convert {} to undefined","          req.body = undefined;","        }","      }","","      // Parse the body","      req.body = parseParameter(param, req.body, param.schema);","","      // There can only be one \"body\" parameter, so skip the rest","      return true;","    }","  });","","  // If there are no body/formData parameters, then reset `req.body` to undefined","  if (params.length > 0) {","    var hasBody = params.some(function(param) {","      return param.in === 'body' || param.in === 'formData';","    });","","    if (!hasBody) {","      req.body = undefined;","    }","  }","","  next();","}","","/**"," * Parses the given parameter, using the given JSON schema definition."," *"," * @param   {object}    param   The Parameter API object"," * @param   {*}         value   The value to be parsed (it will be coerced if needed)"," * @param   {object}    schema  The JSON schema definition for the parameter"," * @returns {*}                 The parsed value"," */","function parseParameter(param, value, schema) {","  if (value === undefined) {","    if (param.required) {","      // The parameter is required, but was not provided, so throw a 400 error","      var errCode = 400;","","      if (param.in === 'header' && param.name.toLowerCase() === 'content-length') {","        // Special case for the Content-Length header.  It has it's own HTTP error code.","        errCode = 411; // (Length Required)","      }","","      //noinspection ExceptionCaughtLocallyJS","      throw util.newError(errCode, 'Missing required %s parameter \"%s\"', param.in, param.name);","    }","    else if (schema.default === undefined) {","      // The parameter is optional, and there's no default value","      return undefined;","    }","  }","","  try {","    return new JsonSchema(schema).parse(value);","  }","  catch (e) {","    throw util.newError(e.status, e, 'The \"%s\" %s parameter is invalid (%j)',","      param.name, param.in, value === undefined ? param.default : value);","  }","}","","/**"," * Returns an array of the `req.swagger.params` properties."," *"," * @returns {object[]}"," */","function getParams(req) {","  if (req.swagger && req.swagger.params) {","    return req.swagger.params;","  }","  return [];","}",""],"l":{"3":1,"4":1,"6":1,"16":1,"17":2,"23":1,"24":0,"26":0,"27":0,"29":0,"31":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"45":0,"51":1,"52":0,"53":0,"54":0,"56":0,"58":0,"62":0,"67":0,"73":1,"74":0,"76":0,"77":0,"78":0,"80":0,"81":0,"83":0,"87":0,"92":0,"95":0,"100":0,"101":0,"102":0,"105":0,"106":0,"110":0,"121":1,"122":0,"123":0,"125":0,"127":0,"129":0,"133":0,"135":0,"137":0,"141":0,"142":0,"145":0,"155":1,"156":0,"157":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/helpers/json-schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/helpers/json-schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":1,"135":0,"136":1,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":1,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0,0,0,0],"9":[0,0,0,0],"10":[0,0,0,0,0,0,0,0],"11":[0,0,0,0],"12":[0,0,0,0,0,0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"JsonSchema","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":28}}},"2":{"name":"(anonymous_2)","line":79,"loc":{"start":{"line":79,"column":29},"end":{"line":79,"column":55}}},"3":{"name":"(anonymous_3)","line":115,"loc":{"start":{"line":115,"column":33},"end":{"line":115,"column":59}}},"4":{"name":"(anonymous_4)","line":148,"loc":{"start":{"line":148,"column":30},"end":{"line":148,"column":41}}},"5":{"name":"getValueToValidate","line":177,"loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":43}}},"6":{"name":"jsonValidate","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":47}}},"7":{"name":"parseInteger","line":214,"loc":{"start":{"line":214,"column":0},"end":{"line":214,"column":47}}},"8":{"name":"serializeInteger","line":249,"loc":{"start":{"line":249,"column":0},"end":{"line":249,"column":51}}},"9":{"name":"sampleInteger","line":256,"loc":{"start":{"line":256,"column":0},"end":{"line":256,"column":31}}},"10":{"name":"parseNumber","line":275,"loc":{"start":{"line":275,"column":0},"end":{"line":275,"column":46}}},"11":{"name":"serializeNumber","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":300,"column":50}}},"12":{"name":"sampleNumber","line":307,"loc":{"start":{"line":307,"column":0},"end":{"line":307,"column":30}}},"13":{"name":"parseBoolean","line":326,"loc":{"start":{"line":326,"column":0},"end":{"line":326,"column":47}}},"14":{"name":"serializeBoolean","line":346,"loc":{"start":{"line":346,"column":0},"end":{"line":346,"column":51}}},"15":{"name":"sampleBoolean","line":353,"loc":{"start":{"line":353,"column":0},"end":{"line":353,"column":31}}},"16":{"name":"parseString","line":357,"loc":{"start":{"line":357,"column":0},"end":{"line":357,"column":46}}},"17":{"name":"serializeString","line":367,"loc":{"start":{"line":367,"column":0},"end":{"line":367,"column":50}}},"18":{"name":"sampleString","line":374,"loc":{"start":{"line":374,"column":0},"end":{"line":374,"column":30}}},"19":{"name":"parseArray","line":400,"loc":{"start":{"line":400,"column":0},"end":{"line":400,"column":45}}},"20":{"name":"parseArrayItems","line":439,"loc":{"start":{"line":439,"column":0},"end":{"line":439,"column":50}}},"21":{"name":"serializeArray","line":453,"loc":{"start":{"line":453,"column":0},"end":{"line":453,"column":49}}},"22":{"name":"sampleArray","line":467,"loc":{"start":{"line":467,"column":0},"end":{"line":467,"column":29}}},"23":{"name":"parseObject","line":493,"loc":{"start":{"line":493,"column":0},"end":{"line":493,"column":46}}},"24":{"name":"(anonymous_24)","line":507,"loc":{"start":{"line":507,"column":31},"end":{"line":507,"column":56}}},"25":{"name":"serializeObject","line":518,"loc":{"start":{"line":518,"column":0},"end":{"line":518,"column":50}}},"26":{"name":"(anonymous_26)","line":522,"loc":{"start":{"line":522,"column":33},"end":{"line":522,"column":58}}},"27":{"name":"sampleObject","line":535,"loc":{"start":{"line":535,"column":0},"end":{"line":535,"column":30}}},"28":{"name":"(anonymous_28)","line":537,"loc":{"start":{"line":537,"column":36},"end":{"line":537,"column":55}}},"29":{"name":"parseFile","line":545,"loc":{"start":{"line":545,"column":0},"end":{"line":545,"column":44}}},"30":{"name":"serializeFile","line":583,"loc":{"start":{"line":583,"column":0},"end":{"line":583,"column":48}}},"31":{"name":"parseDate","line":600,"loc":{"start":{"line":600,"column":0},"end":{"line":600,"column":44}}},"32":{"name":"serializeDate","line":664,"loc":{"start":{"line":664,"column":0},"end":{"line":664,"column":48}}},"33":{"name":"sampleDate","line":679,"loc":{"start":{"line":679,"column":0},"end":{"line":679,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":29}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":86}},"4":{"start":{"line":13,"column":0},"end":{"line":19,"column":2}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":68}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":67}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":60}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}},"9":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}},"10":{"start":{"line":29,"column":0},"end":{"line":54,"column":2}},"11":{"start":{"line":60,"column":0},"end":{"line":69,"column":1}},"12":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"13":{"start":{"line":62,"column":4},"end":{"line":62,"column":47}},"14":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"15":{"start":{"line":65,"column":4},"end":{"line":65,"column":69}},"16":{"start":{"line":68,"column":2},"end":{"line":68,"column":23}},"17":{"start":{"line":79,"column":0},"end":{"line":105,"column":2}},"18":{"start":{"line":80,"column":2},"end":{"line":104,"column":3}},"19":{"start":{"line":82,"column":6},"end":{"line":82,"column":55}},"20":{"start":{"line":84,"column":6},"end":{"line":84,"column":56}},"21":{"start":{"line":86,"column":6},"end":{"line":86,"column":56}},"22":{"start":{"line":88,"column":6},"end":{"line":88,"column":54}},"23":{"start":{"line":91,"column":6},"end":{"line":91,"column":55}},"24":{"start":{"line":93,"column":6},"end":{"line":93,"column":53}},"25":{"start":{"line":95,"column":6},"end":{"line":103,"column":7}},"26":{"start":{"line":97,"column":10},"end":{"line":97,"column":60}},"27":{"start":{"line":100,"column":10},"end":{"line":100,"column":57}},"28":{"start":{"line":102,"column":10},"end":{"line":102,"column":59}},"29":{"start":{"line":115,"column":0},"end":{"line":141,"column":2}},"30":{"start":{"line":116,"column":2},"end":{"line":140,"column":3}},"31":{"start":{"line":118,"column":6},"end":{"line":118,"column":59}},"32":{"start":{"line":120,"column":6},"end":{"line":120,"column":60}},"33":{"start":{"line":122,"column":6},"end":{"line":122,"column":60}},"34":{"start":{"line":124,"column":6},"end":{"line":124,"column":58}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":59}},"36":{"start":{"line":129,"column":6},"end":{"line":129,"column":57}},"37":{"start":{"line":131,"column":6},"end":{"line":139,"column":7}},"38":{"start":{"line":133,"column":10},"end":{"line":133,"column":64}},"39":{"start":{"line":136,"column":10},"end":{"line":136,"column":61}},"40":{"start":{"line":138,"column":10},"end":{"line":138,"column":63}},"41":{"start":{"line":148,"column":0},"end":{"line":172,"column":2}},"42":{"start":{"line":149,"column":2},"end":{"line":171,"column":3}},"43":{"start":{"line":151,"column":6},"end":{"line":151,"column":39}},"44":{"start":{"line":153,"column":6},"end":{"line":153,"column":40}},"45":{"start":{"line":155,"column":6},"end":{"line":155,"column":40}},"46":{"start":{"line":157,"column":6},"end":{"line":157,"column":38}},"47":{"start":{"line":160,"column":6},"end":{"line":160,"column":39}},"48":{"start":{"line":162,"column":6},"end":{"line":170,"column":7}},"49":{"start":{"line":164,"column":10},"end":{"line":164,"column":44}},"50":{"start":{"line":167,"column":10},"end":{"line":167,"column":41}},"51":{"start":{"line":169,"column":10},"end":{"line":169,"column":43}},"52":{"start":{"line":177,"column":0},"end":{"line":198,"column":1}},"53":{"start":{"line":179,"column":2},"end":{"line":189,"column":3}},"54":{"start":{"line":183,"column":4},"end":{"line":188,"column":5}},"55":{"start":{"line":184,"column":6},"end":{"line":184,"column":29}},"56":{"start":{"line":186,"column":9},"end":{"line":188,"column":5}},"57":{"start":{"line":187,"column":6},"end":{"line":187,"column":29}},"58":{"start":{"line":192,"column":2},"end":{"line":194,"column":3}},"59":{"start":{"line":193,"column":4},"end":{"line":193,"column":35}},"60":{"start":{"line":197,"column":2},"end":{"line":197,"column":15}},"61":{"start":{"line":200,"column":0},"end":{"line":212,"column":1}},"62":{"start":{"line":201,"column":2},"end":{"line":211,"column":3}},"63":{"start":{"line":202,"column":4},"end":{"line":202,"column":16}},"64":{"start":{"line":204,"column":7},"end":{"line":211,"column":3}},"65":{"start":{"line":205,"column":4},"end":{"line":205,"column":87}},"66":{"start":{"line":206,"column":4},"end":{"line":207,"column":38}},"67":{"start":{"line":210,"column":4},"end":{"line":210,"column":73}},"68":{"start":{"line":214,"column":0},"end":{"line":247,"column":1}},"69":{"start":{"line":216,"column":2},"end":{"line":216,"column":44}},"70":{"start":{"line":219,"column":2},"end":{"line":219,"column":36}},"71":{"start":{"line":220,"column":2},"end":{"line":222,"column":3}},"72":{"start":{"line":221,"column":4},"end":{"line":221,"column":97}},"73":{"start":{"line":225,"column":2},"end":{"line":225,"column":33}},"74":{"start":{"line":226,"column":2},"end":{"line":226,"column":26}},"75":{"start":{"line":229,"column":2},"end":{"line":235,"column":3}},"76":{"start":{"line":230,"column":4},"end":{"line":230,"column":48}},"77":{"start":{"line":234,"column":4},"end":{"line":234,"column":31}},"78":{"start":{"line":238,"column":2},"end":{"line":238,"column":36}},"79":{"start":{"line":239,"column":2},"end":{"line":244,"column":3}},"80":{"start":{"line":240,"column":4},"end":{"line":243,"column":5}},"81":{"start":{"line":241,"column":6},"end":{"line":242,"column":70}},"82":{"start":{"line":246,"column":2},"end":{"line":246,"column":21}},"83":{"start":{"line":249,"column":0},"end":{"line":254,"column":1}},"84":{"start":{"line":250,"column":2},"end":{"line":250,"column":44}},"85":{"start":{"line":251,"column":2},"end":{"line":253,"column":3}},"86":{"start":{"line":252,"column":4},"end":{"line":252,"column":27}},"87":{"start":{"line":256,"column":0},"end":{"line":273,"column":1}},"88":{"start":{"line":257,"column":2},"end":{"line":257,"column":15}},"89":{"start":{"line":258,"column":2},"end":{"line":263,"column":3}},"90":{"start":{"line":259,"column":4},"end":{"line":259,"column":71}},"91":{"start":{"line":262,"column":4},"end":{"line":262,"column":47}},"92":{"start":{"line":265,"column":2},"end":{"line":270,"column":3}},"93":{"start":{"line":266,"column":4},"end":{"line":266,"column":71}},"94":{"start":{"line":269,"column":4},"end":{"line":269,"column":54}},"95":{"start":{"line":272,"column":2},"end":{"line":272,"column":28}},"96":{"start":{"line":275,"column":0},"end":{"line":298,"column":1}},"97":{"start":{"line":277,"column":2},"end":{"line":277,"column":44}},"98":{"start":{"line":280,"column":2},"end":{"line":280,"column":38}},"99":{"start":{"line":281,"column":2},"end":{"line":283,"column":3}},"100":{"start":{"line":282,"column":4},"end":{"line":282,"column":85}},"101":{"start":{"line":286,"column":2},"end":{"line":286,"column":46}},"102":{"start":{"line":289,"column":2},"end":{"line":289,"column":36}},"103":{"start":{"line":290,"column":2},"end":{"line":295,"column":3}},"104":{"start":{"line":291,"column":4},"end":{"line":294,"column":5}},"105":{"start":{"line":292,"column":6},"end":{"line":293,"column":64}},"106":{"start":{"line":297,"column":2},"end":{"line":297,"column":21}},"107":{"start":{"line":300,"column":0},"end":{"line":305,"column":1}},"108":{"start":{"line":301,"column":2},"end":{"line":301,"column":44}},"109":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"110":{"start":{"line":303,"column":4},"end":{"line":303,"column":29}},"111":{"start":{"line":307,"column":0},"end":{"line":324,"column":1}},"112":{"start":{"line":308,"column":2},"end":{"line":308,"column":15}},"113":{"start":{"line":309,"column":2},"end":{"line":314,"column":3}},"114":{"start":{"line":310,"column":4},"end":{"line":310,"column":79}},"115":{"start":{"line":313,"column":4},"end":{"line":313,"column":43}},"116":{"start":{"line":316,"column":2},"end":{"line":321,"column":3}},"117":{"start":{"line":317,"column":4},"end":{"line":317,"column":79}},"118":{"start":{"line":320,"column":4},"end":{"line":320,"column":55}},"119":{"start":{"line":323,"column":2},"end":{"line":323,"column":28}},"120":{"start":{"line":326,"column":0},"end":{"line":344,"column":1}},"121":{"start":{"line":328,"column":2},"end":{"line":328,"column":44}},"122":{"start":{"line":331,"column":2},"end":{"line":331,"column":26}},"123":{"start":{"line":332,"column":2},"end":{"line":332,"column":54}},"124":{"start":{"line":333,"column":2},"end":{"line":338,"column":3}},"125":{"start":{"line":334,"column":4},"end":{"line":334,"column":23}},"126":{"start":{"line":336,"column":7},"end":{"line":338,"column":3}},"127":{"start":{"line":337,"column":4},"end":{"line":337,"column":24}},"128":{"start":{"line":341,"column":2},"end":{"line":341,"column":46}},"129":{"start":{"line":343,"column":2},"end":{"line":343,"column":23}},"130":{"start":{"line":346,"column":0},"end":{"line":351,"column":1}},"131":{"start":{"line":347,"column":2},"end":{"line":347,"column":44}},"132":{"start":{"line":348,"column":2},"end":{"line":350,"column":3}},"133":{"start":{"line":349,"column":4},"end":{"line":349,"column":19}},"134":{"start":{"line":353,"column":0},"end":{"line":355,"column":1}},"135":{"start":{"line":354,"column":2},"end":{"line":354,"column":30}},"136":{"start":{"line":357,"column":0},"end":{"line":365,"column":1}},"137":{"start":{"line":359,"column":2},"end":{"line":359,"column":44}},"138":{"start":{"line":362,"column":2},"end":{"line":362,"column":40}},"139":{"start":{"line":364,"column":2},"end":{"line":364,"column":15}},"140":{"start":{"line":367,"column":0},"end":{"line":372,"column":1}},"141":{"start":{"line":368,"column":2},"end":{"line":368,"column":44}},"142":{"start":{"line":369,"column":2},"end":{"line":371,"column":3}},"143":{"start":{"line":370,"column":4},"end":{"line":370,"column":31}},"144":{"start":{"line":374,"column":0},"end":{"line":398,"column":1}},"145":{"start":{"line":375,"column":2},"end":{"line":375,"column":27}},"146":{"start":{"line":376,"column":2},"end":{"line":381,"column":3}},"147":{"start":{"line":377,"column":4},"end":{"line":377,"column":43}},"148":{"start":{"line":380,"column":4},"end":{"line":380,"column":51}},"149":{"start":{"line":383,"column":2},"end":{"line":388,"column":3}},"150":{"start":{"line":384,"column":4},"end":{"line":384,"column":43}},"151":{"start":{"line":387,"column":4},"end":{"line":387,"column":40}},"152":{"start":{"line":390,"column":2},"end":{"line":390,"column":81}},"153":{"start":{"line":391,"column":2},"end":{"line":391,"column":15}},"154":{"start":{"line":392,"column":2},"end":{"line":392,"column":46}},"155":{"start":{"line":393,"column":2},"end":{"line":395,"column":3}},"156":{"start":{"line":394,"column":4},"end":{"line":394,"column":52}},"157":{"start":{"line":397,"column":2},"end":{"line":397,"column":13}},"158":{"start":{"line":400,"column":0},"end":{"line":437,"column":1}},"159":{"start":{"line":402,"column":2},"end":{"line":402,"column":44}},"160":{"start":{"line":404,"column":2},"end":{"line":404,"column":26}},"161":{"start":{"line":406,"column":2},"end":{"line":421,"column":3}},"162":{"start":{"line":408,"column":4},"end":{"line":420,"column":5}},"163":{"start":{"line":410,"column":8},"end":{"line":410,"column":39}},"164":{"start":{"line":411,"column":8},"end":{"line":411,"column":14}},"165":{"start":{"line":413,"column":8},"end":{"line":413,"column":40}},"166":{"start":{"line":414,"column":8},"end":{"line":414,"column":14}},"167":{"start":{"line":416,"column":8},"end":{"line":416,"column":39}},"168":{"start":{"line":417,"column":8},"end":{"line":417,"column":14}},"169":{"start":{"line":419,"column":8},"end":{"line":419,"column":39}},"170":{"start":{"line":423,"column":2},"end":{"line":426,"column":3}},"171":{"start":{"line":425,"column":4},"end":{"line":425,"column":48}},"172":{"start":{"line":429,"column":2},"end":{"line":429,"column":49}},"173":{"start":{"line":431,"column":2},"end":{"line":434,"column":3}},"174":{"start":{"line":433,"column":4},"end":{"line":433,"column":48}},"175":{"start":{"line":436,"column":2},"end":{"line":436,"column":21}},"176":{"start":{"line":439,"column":0},"end":{"line":451,"column":1}},"177":{"start":{"line":440,"column":2},"end":{"line":440,"column":48}},"178":{"start":{"line":442,"column":2},"end":{"line":450,"column":3}},"179":{"start":{"line":443,"column":4},"end":{"line":443,"column":24}},"180":{"start":{"line":444,"column":4},"end":{"line":449,"column":5}},"181":{"start":{"line":445,"column":6},"end":{"line":445,"column":66}},"182":{"start":{"line":448,"column":6},"end":{"line":448,"column":109}},"183":{"start":{"line":453,"column":0},"end":{"line":465,"column":1}},"184":{"start":{"line":454,"column":2},"end":{"line":454,"column":44}},"185":{"start":{"line":456,"column":2},"end":{"line":462,"column":3}},"186":{"start":{"line":457,"column":4},"end":{"line":457,"column":50}},"187":{"start":{"line":459,"column":4},"end":{"line":461,"column":5}},"188":{"start":{"line":460,"column":6},"end":{"line":460,"column":74}},"189":{"start":{"line":464,"column":2},"end":{"line":464,"column":15}},"190":{"start":{"line":467,"column":0},"end":{"line":491,"column":1}},"191":{"start":{"line":468,"column":2},"end":{"line":468,"column":25}},"192":{"start":{"line":469,"column":2},"end":{"line":474,"column":3}},"193":{"start":{"line":470,"column":4},"end":{"line":470,"column":41}},"194":{"start":{"line":473,"column":4},"end":{"line":473,"column":49}},"195":{"start":{"line":476,"column":2},"end":{"line":481,"column":3}},"196":{"start":{"line":477,"column":4},"end":{"line":477,"column":41}},"197":{"start":{"line":480,"column":4},"end":{"line":480,"column":38}},"198":{"start":{"line":483,"column":2},"end":{"line":483,"column":17}},"199":{"start":{"line":484,"column":2},"end":{"line":484,"column":48}},"200":{"start":{"line":485,"column":2},"end":{"line":485,"column":44}},"201":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"202":{"start":{"line":487,"column":4},"end":{"line":487,"column":36}},"203":{"start":{"line":490,"column":2},"end":{"line":490,"column":15}},"204":{"start":{"line":493,"column":0},"end":{"line":516,"column":1}},"205":{"start":{"line":495,"column":2},"end":{"line":495,"column":44}},"206":{"start":{"line":498,"column":2},"end":{"line":498,"column":26}},"207":{"start":{"line":499,"column":2},"end":{"line":501,"column":3}},"208":{"start":{"line":500,"column":4},"end":{"line":500,"column":36}},"209":{"start":{"line":504,"column":2},"end":{"line":504,"column":52}},"210":{"start":{"line":507,"column":2},"end":{"line":513,"column":5}},"211":{"start":{"line":508,"column":4},"end":{"line":512,"column":5}},"212":{"start":{"line":509,"column":6},"end":{"line":509,"column":44}},"213":{"start":{"line":510,"column":6},"end":{"line":510,"column":73}},"214":{"start":{"line":511,"column":6},"end":{"line":511,"column":84}},"215":{"start":{"line":515,"column":2},"end":{"line":515,"column":21}},"216":{"start":{"line":518,"column":0},"end":{"line":533,"column":1}},"217":{"start":{"line":519,"column":2},"end":{"line":519,"column":44}},"218":{"start":{"line":521,"column":2},"end":{"line":530,"column":3}},"219":{"start":{"line":522,"column":4},"end":{"line":529,"column":7}},"220":{"start":{"line":523,"column":6},"end":{"line":523,"column":44}},"221":{"start":{"line":524,"column":6},"end":{"line":524,"column":73}},"222":{"start":{"line":525,"column":6},"end":{"line":525,"column":74}},"223":{"start":{"line":526,"column":6},"end":{"line":528,"column":7}},"224":{"start":{"line":527,"column":8},"end":{"line":527,"column":36}},"225":{"start":{"line":532,"column":2},"end":{"line":532,"column":15}},"226":{"start":{"line":535,"column":0},"end":{"line":543,"column":1}},"227":{"start":{"line":536,"column":2},"end":{"line":536,"column":15}},"228":{"start":{"line":537,"column":2},"end":{"line":540,"column":5}},"229":{"start":{"line":538,"column":4},"end":{"line":538,"column":65}},"230":{"start":{"line":539,"column":4},"end":{"line":539,"column":40}},"231":{"start":{"line":542,"column":2},"end":{"line":542,"column":13}},"232":{"start":{"line":545,"column":0},"end":{"line":581,"column":1}},"233":{"start":{"line":547,"column":2},"end":{"line":547,"column":44}},"234":{"start":{"line":550,"column":2},"end":{"line":550,"column":26}},"235":{"start":{"line":551,"column":2},"end":{"line":553,"column":3}},"236":{"start":{"line":552,"column":4},"end":{"line":552,"column":79}},"237":{"start":{"line":556,"column":2},"end":{"line":566,"column":3}},"238":{"start":{"line":557,"column":4},"end":{"line":557,"column":47}},"239":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"240":{"start":{"line":559,"column":6},"end":{"line":559,"column":104}},"241":{"start":{"line":562,"column":4},"end":{"line":565,"column":5}},"242":{"start":{"line":563,"column":6},"end":{"line":564,"column":83}},"243":{"start":{"line":568,"column":2},"end":{"line":578,"column":3}},"244":{"start":{"line":569,"column":4},"end":{"line":569,"column":47}},"245":{"start":{"line":570,"column":4},"end":{"line":572,"column":5}},"246":{"start":{"line":571,"column":6},"end":{"line":571,"column":104}},"247":{"start":{"line":574,"column":4},"end":{"line":577,"column":5}},"248":{"start":{"line":575,"column":6},"end":{"line":576,"column":83}},"249":{"start":{"line":580,"column":2},"end":{"line":580,"column":21}},"250":{"start":{"line":583,"column":0},"end":{"line":598,"column":1}},"251":{"start":{"line":584,"column":2},"end":{"line":584,"column":44}},"252":{"start":{"line":587,"column":2},"end":{"line":587,"column":27}},"253":{"start":{"line":588,"column":2},"end":{"line":594,"column":3}},"254":{"start":{"line":589,"column":4},"end":{"line":589,"column":30}},"255":{"start":{"line":590,"column":4},"end":{"line":593,"column":5}},"256":{"start":{"line":592,"column":6},"end":{"line":592,"column":18}},"257":{"start":{"line":597,"column":2},"end":{"line":597,"column":15}},"258":{"start":{"line":600,"column":0},"end":{"line":662,"column":1}},"259":{"start":{"line":601,"column":2},"end":{"line":601,"column":18}},"260":{"start":{"line":604,"column":2},"end":{"line":604,"column":44}},"261":{"start":{"line":607,"column":2},"end":{"line":625,"column":3}},"262":{"start":{"line":608,"column":4},"end":{"line":608,"column":24}},"263":{"start":{"line":612,"column":4},"end":{"line":612,"column":42}},"264":{"start":{"line":615,"column":4},"end":{"line":615,"column":56}},"265":{"start":{"line":616,"column":4},"end":{"line":618,"column":5}},"266":{"start":{"line":617,"column":6},"end":{"line":617,"column":104}},"267":{"start":{"line":621,"column":4},"end":{"line":621,"column":34}},"268":{"start":{"line":622,"column":4},"end":{"line":624,"column":5}},"269":{"start":{"line":623,"column":6},"end":{"line":623,"column":90}},"270":{"start":{"line":627,"column":2},"end":{"line":642,"column":3}},"271":{"start":{"line":628,"column":4},"end":{"line":628,"column":43}},"272":{"start":{"line":629,"column":4},"end":{"line":631,"column":5}},"273":{"start":{"line":630,"column":6},"end":{"line":630,"column":100}},"274":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"275":{"start":{"line":634,"column":6},"end":{"line":634,"column":109}},"276":{"start":{"line":637,"column":4},"end":{"line":641,"column":5}},"277":{"start":{"line":638,"column":6},"end":{"line":640,"column":7}},"278":{"start":{"line":639,"column":8},"end":{"line":639,"column":120}},"279":{"start":{"line":644,"column":2},"end":{"line":659,"column":3}},"280":{"start":{"line":645,"column":4},"end":{"line":645,"column":43}},"281":{"start":{"line":646,"column":4},"end":{"line":648,"column":5}},"282":{"start":{"line":647,"column":6},"end":{"line":647,"column":100}},"283":{"start":{"line":650,"column":4},"end":{"line":652,"column":5}},"284":{"start":{"line":651,"column":6},"end":{"line":651,"column":112}},"285":{"start":{"line":654,"column":4},"end":{"line":658,"column":5}},"286":{"start":{"line":655,"column":6},"end":{"line":657,"column":7}},"287":{"start":{"line":656,"column":8},"end":{"line":656,"column":120}},"288":{"start":{"line":661,"column":2},"end":{"line":661,"column":21}},"289":{"start":{"line":664,"column":0},"end":{"line":677,"column":1}},"290":{"start":{"line":665,"column":2},"end":{"line":665,"column":44}},"291":{"start":{"line":667,"column":2},"end":{"line":676,"column":3}},"292":{"start":{"line":669,"column":4},"end":{"line":669,"column":50}},"293":{"start":{"line":671,"column":7},"end":{"line":676,"column":3}},"294":{"start":{"line":672,"column":4},"end":{"line":672,"column":26}},"295":{"start":{"line":674,"column":7},"end":{"line":676,"column":3}},"296":{"start":{"line":675,"column":4},"end":{"line":675,"column":31}},"297":{"start":{"line":679,"column":0},"end":{"line":704,"column":1}},"298":{"start":{"line":680,"column":2},"end":{"line":680,"column":15}},"299":{"start":{"line":681,"column":2},"end":{"line":687,"column":3}},"300":{"start":{"line":682,"column":4},"end":{"line":682,"column":91}},"301":{"start":{"line":685,"column":4},"end":{"line":685,"column":31}},"302":{"start":{"line":686,"column":4},"end":{"line":686,"column":67}},"303":{"start":{"line":689,"column":2},"end":{"line":694,"column":3}},"304":{"start":{"line":690,"column":4},"end":{"line":690,"column":91}},"305":{"start":{"line":693,"column":4},"end":{"line":693,"column":36}},"306":{"start":{"line":696,"column":2},"end":{"line":696,"column":42}},"307":{"start":{"line":698,"column":2},"end":{"line":701,"column":3}},"308":{"start":{"line":700,"column":4},"end":{"line":700,"column":92}},"309":{"start":{"line":703,"column":2},"end":{"line":703,"column":14}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":46}},{"start":{"line":22,"column":50},"end":{"line":22,"column":67}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":23},"end":{"line":23,"column":46}},{"start":{"line":23,"column":50},"end":{"line":23,"column":66}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":32}},{"start":{"line":24,"column":36},"end":{"line":24,"column":59}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":14},"end":{"line":26,"column":28}},{"start":{"line":26,"column":32},"end":{"line":26,"column":53}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":31}},{"start":{"line":64,"column":35},"end":{"line":64,"column":72}}]},"8":{"line":80,"type":"switch","locations":[{"start":{"line":81,"column":4},"end":{"line":82,"column":55}},{"start":{"line":83,"column":4},"end":{"line":84,"column":56}},{"start":{"line":85,"column":4},"end":{"line":86,"column":56}},{"start":{"line":87,"column":4},"end":{"line":88,"column":54}},{"start":{"line":89,"column":4},"end":{"line":89,"column":18}},{"start":{"line":90,"column":4},"end":{"line":91,"column":55}},{"start":{"line":92,"column":4},"end":{"line":93,"column":53}},{"start":{"line":94,"column":4},"end":{"line":103,"column":7}}]},"9":{"line":95,"type":"switch","locations":[{"start":{"line":96,"column":8},"end":{"line":97,"column":60}},{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},{"start":{"line":99,"column":8},"end":{"line":100,"column":57}},{"start":{"line":101,"column":8},"end":{"line":102,"column":59}}]},"10":{"line":116,"type":"switch","locations":[{"start":{"line":117,"column":4},"end":{"line":118,"column":59}},{"start":{"line":119,"column":4},"end":{"line":120,"column":60}},{"start":{"line":121,"column":4},"end":{"line":122,"column":60}},{"start":{"line":123,"column":4},"end":{"line":124,"column":58}},{"start":{"line":125,"column":4},"end":{"line":125,"column":18}},{"start":{"line":126,"column":4},"end":{"line":127,"column":59}},{"start":{"line":128,"column":4},"end":{"line":129,"column":57}},{"start":{"line":130,"column":4},"end":{"line":139,"column":7}}]},"11":{"line":131,"type":"switch","locations":[{"start":{"line":132,"column":8},"end":{"line":133,"column":64}},{"start":{"line":134,"column":8},"end":{"line":134,"column":20}},{"start":{"line":135,"column":8},"end":{"line":136,"column":61}},{"start":{"line":137,"column":8},"end":{"line":138,"column":63}}]},"12":{"line":149,"type":"switch","locations":[{"start":{"line":150,"column":4},"end":{"line":151,"column":39}},{"start":{"line":152,"column":4},"end":{"line":153,"column":40}},{"start":{"line":154,"column":4},"end":{"line":155,"column":40}},{"start":{"line":156,"column":4},"end":{"line":157,"column":38}},{"start":{"line":158,"column":4},"end":{"line":158,"column":18}},{"start":{"line":159,"column":4},"end":{"line":160,"column":39}},{"start":{"line":161,"column":4},"end":{"line":170,"column":7}}]},"13":{"line":162,"type":"switch","locations":[{"start":{"line":163,"column":8},"end":{"line":164,"column":44}},{"start":{"line":165,"column":8},"end":{"line":165,"column":20}},{"start":{"line":166,"column":8},"end":{"line":167,"column":41}},{"start":{"line":168,"column":8},"end":{"line":169,"column":43}}]},"14":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"15":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":25}},{"start":{"line":179,"column":29},"end":{"line":179,"column":41}},{"start":{"line":180,"column":5},"end":{"line":180,"column":29}},{"start":{"line":180,"column":33},"end":{"line":180,"column":50}},{"start":{"line":180,"column":54},"end":{"line":180,"column":70}}]},"16":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"17":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":9},"end":{"line":186,"column":9}},{"start":{"line":186,"column":9},"end":{"line":186,"column":9}}]},"18":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"19":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":11}},{"start":{"line":192,"column":15},"end":{"line":192,"column":38}},{"start":{"line":192,"column":42},"end":{"line":192,"column":63}}]},"20":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"21":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":7},"end":{"line":204,"column":7}},{"start":{"line":204,"column":7},"end":{"line":204,"column":7}}]},"22":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":30},"end":{"line":205,"column":65}},{"start":{"line":205,"column":68},"end":{"line":205,"column":86}}]},"23":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"24":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":26}},{"start":{"line":220,"column":30},"end":{"line":220,"column":54}},{"start":{"line":220,"column":58},"end":{"line":220,"column":95}}]},"25":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":78},"end":{"line":221,"column":86}},{"start":{"line":221,"column":90},"end":{"line":221,"column":95}}]},"26":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"27":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]},"28":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":31}},{"start":{"line":240,"column":35},"end":{"line":240,"column":58}}]},"29":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":16}},{"start":{"line":242,"column":20},"end":{"line":242,"column":31}}]},"30":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"31":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"32":{"line":259,"type":"cond-expr","locations":[{"start":{"line":259,"column":64},"end":{"line":259,"column":65}},{"start":{"line":259,"column":68},"end":{"line":259,"column":69}}]},"33":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":10},"end":{"line":262,"column":41}},{"start":{"line":262,"column":45},"end":{"line":262,"column":46}}]},"34":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"35":{"line":266,"type":"cond-expr","locations":[{"start":{"line":266,"column":64},"end":{"line":266,"column":65}},{"start":{"line":266,"column":68},"end":{"line":266,"column":69}}]},"36":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":11},"end":{"line":269,"column":32}},{"start":{"line":269,"column":36},"end":{"line":269,"column":48}}]},"37":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"38":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":26}},{"start":{"line":281,"column":30},"end":{"line":281,"column":54}}]},"39":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":66},"end":{"line":282,"column":74}},{"start":{"line":282,"column":78},"end":{"line":282,"column":83}}]},"40":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"41":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"42":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":31}},{"start":{"line":291,"column":35},"end":{"line":291,"column":58}}]},"43":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":16}},{"start":{"line":293,"column":20},"end":{"line":293,"column":25}}]},"44":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"45":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"46":{"line":310,"type":"cond-expr","locations":[{"start":{"line":310,"column":66},"end":{"line":310,"column":73}},{"start":{"line":310,"column":76},"end":{"line":310,"column":77}}]},"47":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":10},"end":{"line":313,"column":37}},{"start":{"line":313,"column":41},"end":{"line":313,"column":42}}]},"48":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"49":{"line":317,"type":"cond-expr","locations":[{"start":{"line":317,"column":66},"end":{"line":317,"column":73}},{"start":{"line":317,"column":76},"end":{"line":317,"column":77}}]},"50":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":11},"end":{"line":320,"column":32}},{"start":{"line":320,"column":36},"end":{"line":320,"column":49}}]},"51":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"52":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":7},"end":{"line":336,"column":7}},{"start":{"line":336,"column":7},"end":{"line":336,"column":7}}]},"53":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"54":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"55":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"56":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":16},"end":{"line":380,"column":45}},{"start":{"line":380,"column":49},"end":{"line":380,"column":50}}]},"57":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"58":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"59":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":6},"end":{"line":406,"column":23}},{"start":{"line":406,"column":27},"end":{"line":406,"column":39}}]},"60":{"line":408,"type":"switch","locations":[{"start":{"line":409,"column":6},"end":{"line":411,"column":14}},{"start":{"line":412,"column":6},"end":{"line":414,"column":14}},{"start":{"line":415,"column":6},"end":{"line":417,"column":14}},{"start":{"line":418,"column":6},"end":{"line":419,"column":39}}]},"61":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":2},"end":{"line":423,"column":2}},{"start":{"line":423,"column":2},"end":{"line":423,"column":2}}]},"62":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":2},"end":{"line":431,"column":2}},{"start":{"line":431,"column":2},"end":{"line":431,"column":2}}]},"63":{"line":448,"type":"binary-expr","locations":[{"start":{"line":448,"column":79},"end":{"line":448,"column":87}},{"start":{"line":448,"column":91},"end":{"line":448,"column":98}}]},"64":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":2}},{"start":{"line":456,"column":2},"end":{"line":456,"column":2}}]},"65":{"line":456,"type":"binary-expr","locations":[{"start":{"line":456,"column":6},"end":{"line":456,"column":22}},{"start":{"line":456,"column":26},"end":{"line":456,"column":38}}]},"66":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"67":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":27},"end":{"line":473,"column":42}},{"start":{"line":473,"column":46},"end":{"line":473,"column":47}}]},"68":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":2},"end":{"line":476,"column":2}},{"start":{"line":476,"column":2},"end":{"line":476,"column":2}}]},"69":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":499,"column":2}},{"start":{"line":499,"column":2},"end":{"line":499,"column":2}}]},"70":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":6},"end":{"line":499,"column":23}},{"start":{"line":499,"column":27},"end":{"line":499,"column":39}}]},"71":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":36},"end":{"line":504,"column":44}},{"start":{"line":504,"column":48},"end":{"line":504,"column":50}}]},"72":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"73":{"line":508,"type":"binary-expr","locations":[{"start":{"line":508,"column":8},"end":{"line":508,"column":43}},{"start":{"line":508,"column":47},"end":{"line":508,"column":73}}]},"74":{"line":510,"type":"cond-expr","locations":[{"start":{"line":510,"column":36},"end":{"line":510,"column":61}},{"start":{"line":510,"column":64},"end":{"line":510,"column":72}}]},"75":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":2},"end":{"line":521,"column":2}},{"start":{"line":521,"column":2},"end":{"line":521,"column":2}}]},"76":{"line":524,"type":"cond-expr","locations":[{"start":{"line":524,"column":36},"end":{"line":524,"column":61}},{"start":{"line":524,"column":64},"end":{"line":524,"column":72}}]},"77":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":6},"end":{"line":526,"column":6}},{"start":{"line":526,"column":6},"end":{"line":526,"column":6}}]},"78":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":551,"column":2}},{"start":{"line":551,"column":2},"end":{"line":551,"column":2}}]},"79":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":6},"end":{"line":551,"column":30}},{"start":{"line":551,"column":34},"end":{"line":551,"column":61}}]},"80":{"line":552,"type":"binary-expr","locations":[{"start":{"line":552,"column":59},"end":{"line":552,"column":67}},{"start":{"line":552,"column":71},"end":{"line":552,"column":77}}]},"81":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":2},"end":{"line":556,"column":2}},{"start":{"line":556,"column":2},"end":{"line":556,"column":2}}]},"82":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":4},"end":{"line":558,"column":4}},{"start":{"line":558,"column":4},"end":{"line":558,"column":4}}]},"83":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"84":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":8},"end":{"line":564,"column":16}},{"start":{"line":564,"column":20},"end":{"line":564,"column":26}}]},"85":{"line":568,"type":"if","locations":[{"start":{"line":568,"column":2},"end":{"line":568,"column":2}},{"start":{"line":568,"column":2},"end":{"line":568,"column":2}}]},"86":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":570,"column":4}},{"start":{"line":570,"column":4},"end":{"line":570,"column":4}}]},"87":{"line":574,"type":"if","locations":[{"start":{"line":574,"column":4},"end":{"line":574,"column":4}},{"start":{"line":574,"column":4},"end":{"line":574,"column":4}}]},"88":{"line":576,"type":"binary-expr","locations":[{"start":{"line":576,"column":8},"end":{"line":576,"column":16}},{"start":{"line":576,"column":20},"end":{"line":576,"column":26}}]},"89":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":4},"end":{"line":590,"column":4}},{"start":{"line":590,"column":4},"end":{"line":590,"column":4}}]},"90":{"line":590,"type":"binary-expr","locations":[{"start":{"line":590,"column":8},"end":{"line":590,"column":12}},{"start":{"line":590,"column":16},"end":{"line":590,"column":25}},{"start":{"line":590,"column":29},"end":{"line":590,"column":50}}]},"91":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"92":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":4},"end":{"line":616,"column":4}},{"start":{"line":616,"column":4},"end":{"line":616,"column":4}}]},"93":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":70},"end":{"line":617,"column":78}},{"start":{"line":617,"column":82},"end":{"line":617,"column":87}}]},"94":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":4},"end":{"line":622,"column":4}},{"start":{"line":622,"column":4},"end":{"line":622,"column":4}}]},"95":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":8},"end":{"line":622,"column":20}},{"start":{"line":622,"column":24},"end":{"line":622,"column":52}}]},"96":{"line":623,"type":"binary-expr","locations":[{"start":{"line":623,"column":56},"end":{"line":623,"column":64}},{"start":{"line":623,"column":68},"end":{"line":623,"column":73}}]},"97":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":2},"end":{"line":627,"column":2}},{"start":{"line":627,"column":2},"end":{"line":627,"column":2}}]},"98":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":4},"end":{"line":629,"column":4}},{"start":{"line":629,"column":4},"end":{"line":629,"column":4}}]},"99":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":633,"column":4}},{"start":{"line":633,"column":4},"end":{"line":633,"column":4}}]},"100":{"line":634,"type":"binary-expr","locations":[{"start":{"line":634,"column":66},"end":{"line":634,"column":74}},{"start":{"line":634,"column":78},"end":{"line":634,"column":85}}]},"101":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":4},"end":{"line":637,"column":4}},{"start":{"line":637,"column":4},"end":{"line":637,"column":4}}]},"102":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":6},"end":{"line":638,"column":6}},{"start":{"line":638,"column":6},"end":{"line":638,"column":6}}]},"103":{"line":639,"type":"binary-expr","locations":[{"start":{"line":639,"column":77},"end":{"line":639,"column":85}},{"start":{"line":639,"column":89},"end":{"line":639,"column":96}}]},"104":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":2},"end":{"line":644,"column":2}},{"start":{"line":644,"column":2},"end":{"line":644,"column":2}}]},"105":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":4},"end":{"line":646,"column":4}},{"start":{"line":646,"column":4},"end":{"line":646,"column":4}}]},"106":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"107":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":69},"end":{"line":651,"column":77}},{"start":{"line":651,"column":81},"end":{"line":651,"column":88}}]},"108":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":4},"end":{"line":654,"column":4}},{"start":{"line":654,"column":4},"end":{"line":654,"column":4}}]},"109":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":6},"end":{"line":655,"column":6}},{"start":{"line":655,"column":6},"end":{"line":655,"column":6}}]},"110":{"line":656,"type":"binary-expr","locations":[{"start":{"line":656,"column":77},"end":{"line":656,"column":85}},{"start":{"line":656,"column":89},"end":{"line":656,"column":96}}]},"111":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":2},"end":{"line":667,"column":2}},{"start":{"line":667,"column":2},"end":{"line":667,"column":2}}]},"112":{"line":667,"type":"binary-expr","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":30}},{"start":{"line":667,"column":34},"end":{"line":667,"column":39}}]},"113":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":7},"end":{"line":671,"column":7}},{"start":{"line":671,"column":7},"end":{"line":671,"column":7}}]},"114":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":7},"end":{"line":674,"column":7}},{"start":{"line":674,"column":7},"end":{"line":674,"column":7}}]},"115":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":2},"end":{"line":681,"column":2}},{"start":{"line":681,"column":2},"end":{"line":681,"column":2}}]},"116":{"line":682,"type":"cond-expr","locations":[{"start":{"line":682,"column":84},"end":{"line":682,"column":85}},{"start":{"line":682,"column":88},"end":{"line":682,"column":89}}]},"117":{"line":686,"type":"binary-expr","locations":[{"start":{"line":686,"column":10},"end":{"line":686,"column":59}},{"start":{"line":686,"column":63},"end":{"line":686,"column":66}}]},"118":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":2},"end":{"line":689,"column":2}},{"start":{"line":689,"column":2},"end":{"line":689,"column":2}}]},"119":{"line":690,"type":"cond-expr","locations":[{"start":{"line":690,"column":84},"end":{"line":690,"column":85}},{"start":{"line":690,"column":88},"end":{"line":690,"column":89}}]},"120":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":2},"end":{"line":698,"column":2}},{"start":{"line":698,"column":2},"end":{"line":698,"column":2}}]}},"code":["'use strict';","","module.exports = JsonSchema;","","var tv4  = require('tv4'),","    util = require('./util'),","    _    = require('lodash');","","// Supported data types","var dataTypes = ['string', 'number', 'integer', 'boolean', 'array', 'object', 'file'];","","// Valid patterns for each data type","var dataTypePatterns = {","  integer: /^[+-]?(\\d+|0x[\\dA-F]+)$/i,","","  date: /^\\d{4}-\\d{2}-\\d{2}$/,","","  'date-time': /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[+-]\\d{2}:\\d{2})$/i","};","","// Some older versions of Node don't define these constants","var MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;","var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;","var MAX_VALUE = Number.MAX_VALUE || 1.7976931348623157e+308;","var MIN_VALUE = -MAX_VALUE;","var EPSILON = Number.EPSILON || 2.220446049250313e-16;","","// Numeric type ranges","var ranges = {","  int32: {","    min: -2147483648,","    max: 2147483647","  },","","  int64: {","    min: MIN_SAFE_INTEGER,","    max: MAX_SAFE_INTEGER","  },","","  byte: {","    min: 0,","    max: 255","  },","","  float: {","    min: -3.402823e38,","    max: 3.402823e38","  },","","  double: {","    min: MIN_VALUE,","    max: MAX_VALUE","  }","};","","/**"," * Parses and validates values against JSON schemas."," * @constructor"," */","function JsonSchema(schema) {","  if (!schema) {","    throw util.newError('Missing JSON schema');","  }","  if (schema.type !== undefined && dataTypes.indexOf(schema.type) === -1) {","    throw util.newError('Invalid JSON schema type: %s', schema.type);","  }","","  this.schema = schema;","}","","/**"," * Parses the given value according to the schema."," * An error is thrown if the value is invalid."," *"," * @param   {*}         value           The value to be parsed against the schema"," * @param   {string}    [propPath]      Used only for logging and error messages (e.g. \"person.address.city\")"," * @returns {*}                         The valid, parsed value"," */","JsonSchema.prototype.parse = function(value, propPath) {","  switch (this.schema.type) {","    case 'number':","      return parseNumber(this.schema, value, propPath);","    case 'integer':","      return parseInteger(this.schema, value, propPath);","    case 'boolean':","      return parseBoolean(this.schema, value, propPath);","    case 'array':","      return parseArray(this.schema, value, propPath);","    case 'object':","    case undefined:","      return parseObject(this.schema, value, propPath);","    case 'file':","      return parseFile(this.schema, value, propPath);","    case 'string':","      switch (this.schema.format) {","        case 'byte':","          return parseInteger(this.schema, value, propPath);","        case 'date':","        case 'date-time':","          return parseDate(this.schema, value, propPath);","        default:","          return parseString(this.schema, value, propPath);","      }","  }","};","","/**"," * Serializes the given value according to the schema."," * An error is thrown if the value is invalid."," *"," * @param   {*}         value           The value to be serialized."," * @param   {string}    [propPath]      Used only for logging and error messages (e.g. \"person.address.city\")"," * @returns {*}                         The serialized value, suitable for persisting or transmitting"," */","JsonSchema.prototype.serialize = function(value, propPath) {","  switch (this.schema.type) {","    case 'number':","      return serializeNumber(this.schema, value, propPath);","    case 'integer':","      return serializeInteger(this.schema, value, propPath);","    case 'boolean':","      return serializeBoolean(this.schema, value, propPath);","    case 'array':","      return serializeArray(this.schema, value, propPath);","    case 'object':","    case undefined:","      return serializeObject(this.schema, value, propPath);","    case 'file':","      return serializeFile(this.schema, value, propPath);","    case 'string':","      switch (this.schema.format) {","        case 'byte':","          return serializeInteger(this.schema, value, propPath);","        case 'date':","        case 'date-time':","          return serializeDate(this.schema, value, propPath);","        default:","          return serializeString(this.schema, value, propPath);","      }","  }","};","","/**"," * Generates sample data from the schema."," *"," * @returns {*}"," */","JsonSchema.prototype.sample = function() {","  switch (this.schema.type) {","    case 'number':","      return sampleNumber(this.schema);","    case 'integer':","      return sampleInteger(this.schema);","    case 'boolean':","      return sampleBoolean(this.schema);","    case 'array':","      return sampleArray(this.schema);","    case 'object':","    case undefined:","      return sampleObject(this.schema);","    case 'string':","      switch (this.schema.format) {","        case 'byte':","          return sampleInteger(this.schema);","        case 'date':","        case 'date-time':","          return sampleDate(this.schema);","        default:","          return sampleString(this.schema);","      }","  }","};","","/**"," * Returns the given value, or the default value if the given value is empty."," */","function getValueToValidate(schema, value) {","  // Is the value empty?","  if (value === undefined || value === '' ||","    (schema.type === 'object' && _.isObject(value) && _.isEmpty(value))) {","","    // It's blank, so return the default/example value (if there is one)","    if (schema.default !== undefined) {","      value = schema.default;","    }","    else if (schema.example !== undefined) {","      value = schema.example;","    }","  }","","  // Special case for Buffers","  if (value && value.type === 'Buffer' && _.isArray(value.data)) {","    value = new Buffer(value.data);","  }","","  // It's not empty, so return the existing value","  return value;","}","","function jsonValidate(schema, value, propPath) {","  if (tv4.validate(value, schema)) {","    return true;","  }","  else if (propPath !== undefined) {","    var dataPath = propPath ? propPath + '.' + tv4.error.dataPath : tv4.error.dataPath;","    throw util.newError(400, tv4.error, 'JSON Schema validation error. \\nData path: \"%s\" \\nSchema path: \"%s\"',","      dataPath, tv4.error.schemaPath);","  }","  else {","    throw util.newError(400, tv4.error, 'JSON Schema validation error.');","  }","}","","function parseInteger(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // Make sure it's a properly-formatted integer","  var parsedValue = parseInt(value);","  if (_.isNaN(parsedValue) || !_.isFinite(parsedValue) || !dataTypePatterns.integer.test(value)) {","    throw util.newError(400, '\"%s\" is not a properly-formatted whole number', propPath || value);","  }","","  // Force the schema to be validated as an integer","  var originalType = schema.type;","  schema.type = 'integer';","","  // Validate against the schema","  try {","    jsonValidate(schema, parsedValue, propPath);","  }","  finally {","    // Restore the original schema type","    schema.type = originalType;","  }","","  // Validate the format","  var range = ranges[schema.format];","  if (range) {","    if (parsedValue < range.min || parsedValue > range.max) {","      throw util.newError(400, '\"%s\" is not a valid %s. Must be between %d and %d',","        propPath || parsedValue, schema.format, range.min, range.max);","    }","  }","","  return parsedValue;","}","","function serializeInteger(schema, value, propPath) {","  value = getValueToValidate(schema, value);","  if (value !== undefined) {","    return parseInt(value);","  }","}","","function sampleInteger(schema) {","  var min, max;","  if (schema.minimum !== undefined) {","    min = parseInt(schema.minimum) + (schema.exclusiveMinimum ? 1 : 0);","  }","  else {","    min = Math.min(1, schema.maximum - 1) || 1;","  }","","  if (schema.maximum !== undefined) {","    max = parseInt(schema.maximum) - (schema.exclusiveMaximum ? 1 : 0);","  }","  else {","    max = (ranges[schema.format] || ranges.int64).max;","  }","","  return _.random(min, max);","}","","function parseNumber(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // Make sure it's a properly-formatted number","  var parsedValue = parseFloat(value);","  if (_.isNaN(parsedValue) || !_.isFinite(parsedValue)) {","    throw util.newError(400, '\"%s\" is not a valid numeric value', propPath || value);","  }","","  // Validate against the schema","  jsonValidate(schema, parsedValue, propPath);","","  // Validate the format","  var range = ranges[schema.format];","  if (range) {","    if (parsedValue < range.min || parsedValue > range.max) {","      throw util.newError(400, '\"%s\" is not a valid %s. Must be between %d and %d',","        propPath || value, schema.format, range.min, range.max);","    }","  }","","  return parsedValue;","}","","function serializeNumber(schema, value, propPath) {","  value = getValueToValidate(schema, value);","  if (value !== undefined) {","    return parseFloat(value);","  }","}","","function sampleNumber(schema) {","  var min, max;","  if (schema.minimum !== undefined) {","    min = parseFloat(schema.minimum) + (schema.exclusiveMinimum ? EPSILON : 0);","  }","  else {","    min = Math.min(0, schema.maximum) || 0;","  }","","  if (schema.maximum !== undefined) {","    max = parseFloat(schema.maximum) - (schema.exclusiveMaximum ? EPSILON : 0);","  }","  else {","    max = (ranges[schema.format] || ranges.double).max;","  }","","  return _.random(min, max);","}","","function parseBoolean(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // \"Parse\" the value","  var parsedValue = value;","  var stringValue = _(value).toString().toLowerCase();","  if (stringValue === 'true') {","    parsedValue = true;","  }","  else if (stringValue === 'false') {","    parsedValue = false;","  }","","  // Validate against the schema","  jsonValidate(schema, parsedValue, propPath);","","  return !!parsedValue;","}","","function serializeBoolean(schema, value, propPath) {","  value = getValueToValidate(schema, value);","  if (value !== undefined) {","    return !!value;","  }","}","","function sampleBoolean(schema) {","  return _.random() % 2 === 0;","}","","function parseString(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // Validate against the schema","  jsonValidate(schema, value, propPath);","","  return value;","}","","function serializeString(schema, value, propPath) {","  value = getValueToValidate(schema, value);","  if (value !== undefined) {","    return _(value).toString();","  }","}","","function sampleString(schema) {","  var minLength, maxLength;","  if (schema.minLength !== undefined) {","    minLength = parseInt(schema.minLength);","  }","  else {","    minLength = Math.min(1, schema.maxLength) || 1;","  }","","  if (schema.maxLength !== undefined) {","    maxLength = parseInt(schema.maxLength);","  }","  else {","    maxLength = Math.max(50, minLength);","  }","","  var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';","  var str = '';","  var length = _.random(minLength, maxLength);","  for (var i = 0; i < length; i++) {","    str += charSet[_.random(0, charSet.length - 1)];","  }","","  return str;","}","","function parseArray(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  var parsedValue = value;","","  if (_.isString(value) && value.length) {","    // Parse the string to an array","    switch (schema.collectionFormat) {","      case 'ssv':","        parsedValue = value.split(' ');","        break;","      case 'tsv':","        parsedValue = value.split('\\t');","        break;","      case 'pipes':","        parsedValue = value.split('|');","        break;","      default: // csv","        parsedValue = value.split(',');","    }","  }","","  if (schema.items.type === 'string') {","    // Validate the array against the schema BEFORE parsing the items","    jsonValidate(schema, parsedValue, propPath);","  }","","  // Parse the items in the array","  parseArrayItems(schema, parsedValue, propPath);","","  if (schema.items.type !== 'string') {","    // Validate the array against the schema AFTER parsing the items","    jsonValidate(schema, parsedValue, propPath);","  }","","  return parsedValue;","}","","function parseArrayItems(schema, array, propPath) {","  var itemSchema = new JsonSchema(schema.items);","","  for (var i = 0; i < array.length; i++) {","    var item = array[i];","    try {","      array[i] = itemSchema.parse(item, propPath + '[' + i + ']');","    }","    catch (e) {","      throw util.newError(400, e, 'Unable to parse %s item at index %d (%j).', propPath || 'array', i, item);","    }","  }","}","","function serializeArray(schema, value, propPath) {","  value = getValueToValidate(schema, value);","","  if (_.isArray(value) && schema.items) {","    var itemSchema = new JsonSchema(schema.items);","","    for (var i = 0; i < value.length; i++) {","      value[i] = itemSchema.serialize(value[i], propPath + '[' + i + ']');","    }","  }","","  return value;","}","","function sampleArray(schema) {","  var minItems, maxItems;","  if (schema.minItems !== undefined) {","    minItems = parseInt(schema.minItems);","  }","  else {","    minItems = Math.min(1, schema.maxItems || 1);","  }","","  if (schema.maxItems !== undefined) {","    maxItems = parseInt(schema.maxItems);","  }","  else {","    maxItems = Math.max(50, minItems);","  }","","  var array = [];","  var itemSchema = new JsonSchema(schema.items);","  var length = _.random(minItems, maxItems);","  for (var i = 0; i < length; i++) {","    array.push(itemSchema.sample());","  }","","  return array;","}","","function parseObject(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // Parse the value","  var parsedValue = value;","  if (_.isString(value) && value.length) {","    parsedValue = JSON.parse(value);","  }","","  // Validate against the schema","  jsonValidate(schema, parsedValue, propPath || '');","","  // Recursively parse the object's properties","  _.forEach(schema.properties, function(prop, propName) {","    if (parsedValue[propName] !== undefined || prop.default !== undefined) {","      var propSchema = new JsonSchema(prop);","      var fullPropPath = propPath ? propPath + '.' + propName : propName;","      parsedValue[propName] = propSchema.parse(parsedValue[propName], fullPropPath);","    }","  });","","  return parsedValue;","}","","function serializeObject(schema, value, propPath) {","  value = getValueToValidate(schema, value);","","  if (value) {","    _.forEach(schema.properties, function(prop, propName) {","      var propSchema = new JsonSchema(prop);","      var fullPropPath = propPath ? propPath + '.' + propName : propName;","      var propValue = propSchema.serialize(value[propName], fullPropPath);","      if (propValue !== undefined) {","        value[propName] = propValue;","      }","    });","  }","","  return value;","}","","function sampleObject(schema) {","  var obj = {};","  _.keys(schema.properties).forEach(function(propName) {","    var propSchema = new JsonSchema(schema.properties[propName]);","    obj[propName] = propSchema.sample();","  });","","  return obj;","}","","function parseFile(schema, value, propPath) {","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // Parse the value","  var parsedValue = value;","  if (!_.isObject(parsedValue) || !_.has(parsedValue, 'size')) {","    throw util.newError(400, '%s is invalid or corrupted', propPath || 'File');","  }","","  // Validate minLength and maxLength","  if (schema.minLength) {","    var minLength = parseInt(schema.minLength);","    if (isNaN(minLength)) {","      throw util.newError('The \"minLength\" value in the Swagger API is invalid (%j)', schema.minLength);","    }","","    if (parsedValue.size < minLength) {","      throw util.newError(400, '%s \"%s\" is only %d bytes. The minimum is %d bytes',","        propPath || 'File', parsedValue.originalname, parsedValue.size, minLength);","    }","  }","","  if (schema.maxLength) {","    var maxLength = parseInt(schema.maxLength);","    if (isNaN(maxLength)) {","      throw util.newError('The \"maxLength\" value in the Swagger API is invalid (%j)', schema.maxLength);","    }","","    if (parsedValue.size > maxLength) {","      throw util.newError(413, '%s \"%s\" is %d bytes. The maximum is %d bytes',","        propPath || 'File', parsedValue.originalname, parsedValue.size, maxLength);","    }","  }","","  return parsedValue;","}","","function serializeFile(schema, value, propPath) {","  value = getValueToValidate(schema, value);","","  // Search for a property that looks like a File object","  var keys = _.keys(value);","  for (var i = 0; i < keys.length; i++) {","    var file = value[keys[i]];","    if (file && file.path && _.isString(file.path)) {","      // This is the File object, so return it","      return file;","    }","  }","","  // None of the properties was a File object, so assume that the value itself is the file object","  return value;","}","","function parseDate(schema, value, propPath) {","  var parsedValue;","","  // Handle missing, required, and default","  value = getValueToValidate(schema, value);","","  // If the value is already a Date, then we can skip some validation","  if (_.isDate(value)) {","    parsedValue = value;","  }","  else {","    // Validate against the schema","    jsonValidate(schema, value, propPath);","","    // Validate the format","    var formatPattern = dataTypePatterns[schema.format];","    if (!formatPattern.test(value)) {","      throw util.newError(400, '\"%s\" is not a properly-formatted %s', propPath || value, schema.format);","    }","","    // Parse the date","    parsedValue = new Date(value);","    if (!parsedValue || isNaN(parsedValue.getTime())) {","      throw util.newError(400, '\"%s\" is an invalid %s', propPath || value, schema.format);","    }","  }","","  if (schema.minimum) {","    var minDate = new Date(schema.minimum);","    if (isNaN(minDate.getTime())) {","      throw util.newError('The \"minimum\" value in the Swagger API is invalid (%j)', schema.minimum);","    }","","    if (parsedValue < minDate) {","      throw util.newError(400, '%s (%j) is less than minimum %j', propPath || 'Value', parsedValue, minDate);","    }","","    if (schema.exclusiveMinimum === true) {","      if (parsedValue.getTime() === minDate.getTime()) {","        throw util.newError(400, '%s (%j) is equal to exclusive minimum %j', propPath || 'Value', parsedValue, minDate);","      }","    }","  }","","  if (schema.maximum) {","    var maxDate = new Date(schema.maximum);","    if (isNaN(maxDate.getTime())) {","      throw util.newError('The \"maximum\" value in the Swagger API is invalid (%j)', schema.maximum);","    }","","    if (parsedValue > maxDate) {","      throw util.newError(400, '%s (%j) is greater than maximum %j', propPath || 'Value', parsedValue, maxDate);","    }","","    if (schema.exclusiveMaximum === true) {","      if (parsedValue.getTime() === maxDate.getTime()) {","        throw util.newError(400, '%s (%j) is equal to exclusive maximum %j', propPath || 'Value', parsedValue, maxDate);","      }","    }","  }","","  return parsedValue;","}","","function serializeDate(schema, value, propPath) {","  value = getValueToValidate(schema, value);","","  if (schema.format === 'date' && value) {","    // This works regardless of whether the value is a Date or an ISO8601 string","    return JSON.stringify(value).substring(1, 11);","  }","  else if (_.isDate(value)) {","    return value.toJSON();","  }","  else if (value) {","    return _(value).toString();","  }","}","","function sampleDate(schema) {","  var min, max;","  if (schema.minimum !== undefined) {","    min = parseInt(new Date(schema.minimum).valueOf()) + (schema.exclusiveMinimum ? 1 : 0);","  }","  else {","    min = Date.UTC(1970, 0, 1);","    min = Math.min(min, new Date(schema.maximum).valueOf()) || min;","  }","","  if (schema.maximum !== undefined) {","    max = parseInt(new Date(schema.maximum).valueOf()) - (schema.exclusiveMaximum ? 1 : 0);","  }","  else {","    max = Math.max(Date.now(), min);","  }","","  var date = new Date(_.random(min, max));","","  if (schema.format === 'date') {","    // Only return the year/month/day (in UTC)","    date = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));","  }","","  return date;","}",""],"l":{"3":1,"5":1,"10":1,"13":1,"22":1,"23":1,"24":1,"25":1,"26":1,"29":1,"60":1,"61":0,"62":0,"64":0,"65":0,"68":0,"79":1,"80":0,"82":0,"84":0,"86":0,"88":0,"91":0,"93":0,"95":0,"97":0,"100":0,"102":0,"115":1,"116":0,"118":0,"120":0,"122":0,"124":0,"127":0,"129":0,"131":0,"133":0,"136":0,"138":0,"148":1,"149":0,"151":0,"153":0,"155":0,"157":0,"160":0,"162":0,"164":0,"167":0,"169":0,"177":1,"179":0,"183":0,"184":0,"186":0,"187":0,"192":0,"193":0,"197":0,"200":1,"201":0,"202":0,"204":0,"205":0,"206":0,"210":0,"214":1,"216":0,"219":0,"220":0,"221":0,"225":0,"226":0,"229":0,"230":0,"234":0,"238":0,"239":0,"240":0,"241":0,"246":0,"249":1,"250":0,"251":0,"252":0,"256":1,"257":0,"258":0,"259":0,"262":0,"265":0,"266":0,"269":0,"272":0,"275":1,"277":0,"280":0,"281":0,"282":0,"286":0,"289":0,"290":0,"291":0,"292":0,"297":0,"300":1,"301":0,"302":0,"303":0,"307":1,"308":0,"309":0,"310":0,"313":0,"316":0,"317":0,"320":0,"323":0,"326":1,"328":0,"331":0,"332":0,"333":0,"334":0,"336":0,"337":0,"341":0,"343":0,"346":1,"347":0,"348":0,"349":0,"353":1,"354":0,"357":1,"359":0,"362":0,"364":0,"367":1,"368":0,"369":0,"370":0,"374":1,"375":0,"376":0,"377":0,"380":0,"383":0,"384":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"397":0,"400":1,"402":0,"404":0,"406":0,"408":0,"410":0,"411":0,"413":0,"414":0,"416":0,"417":0,"419":0,"423":0,"425":0,"429":0,"431":0,"433":0,"436":0,"439":1,"440":0,"442":0,"443":0,"444":0,"445":0,"448":0,"453":1,"454":0,"456":0,"457":0,"459":0,"460":0,"464":0,"467":1,"468":0,"469":0,"470":0,"473":0,"476":0,"477":0,"480":0,"483":0,"484":0,"485":0,"486":0,"487":0,"490":0,"493":1,"495":0,"498":0,"499":0,"500":0,"504":0,"507":0,"508":0,"509":0,"510":0,"511":0,"515":0,"518":1,"519":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"532":0,"535":1,"536":0,"537":0,"538":0,"539":0,"542":0,"545":1,"547":0,"550":0,"551":0,"552":0,"556":0,"557":0,"558":0,"559":0,"562":0,"563":0,"568":0,"569":0,"570":0,"571":0,"574":0,"575":0,"580":0,"583":1,"584":0,"587":0,"588":0,"589":0,"590":0,"592":0,"597":0,"600":1,"601":0,"604":0,"607":0,"608":0,"612":0,"615":0,"616":0,"617":0,"621":0,"622":0,"623":0,"627":0,"628":0,"629":0,"630":0,"633":0,"634":0,"637":0,"638":0,"639":0,"644":0,"645":0,"646":0,"647":0,"650":0,"651":0,"654":0,"655":0,"656":0,"661":0,"664":1,"665":0,"667":0,"669":0,"671":0,"672":0,"674":0,"675":0,"679":1,"680":0,"681":0,"682":0,"685":0,"686":0,"689":0,"690":0,"693":0,"696":0,"698":0,"700":0,"703":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/path-parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/path-parser.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":0,"9":2,"10":1,"11":2,"12":2,"13":0,"14":0,"15":1,"16":2,"17":1,"18":0,"19":0,"20":2,"21":0,"22":0,"23":0,"24":0,"25":2,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[1,1],"2":[2,0],"3":[0,0],"4":[0,0],"5":[0,2],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":2,"2":2,"3":0,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"pathParser","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":37}}},"2":{"name":"registerPathParamMiddleware","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":41}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":23},"end":{"line":48,"column":39}}},"4":{"name":"getAllPathParamNames","line":60,"loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":34}}},"5":{"name":"addParam","line":63,"loc":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":32},"end":{"line":70,"column":47}}},"7":{"name":"(anonymous_7)","line":75,"loc":{"start":{"line":75,"column":21},"end":{"line":75,"column":41}}},"8":{"name":"alreadyRegistered","line":90,"loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":40}}},"9":{"name":"pathParamMiddleware","line":104,"loc":{"start":{"line":104,"column":2},"end":{"line":104,"column":60}}},"10":{"name":"parsePathParams","line":117,"loc":{"start":{"line":117,"column":2},"end":{"line":117,"column":43}}},"11":{"name":"(anonymous_11)","line":124,"loc":{"start":{"line":124,"column":80},"end":{"line":124,"column":107}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":22,"column":0},"end":{"line":146,"column":1}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":66}},"5":{"start":{"line":25,"column":2},"end":{"line":37,"column":3}},"6":{"start":{"line":27,"column":4},"end":{"line":27,"column":34}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":54}},"8":{"start":{"line":33,"column":4},"end":{"line":36,"column":6}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":27}},"10":{"start":{"line":45,"column":2},"end":{"line":53,"column":3}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":44}},"12":{"start":{"line":48,"column":4},"end":{"line":52,"column":7}},"13":{"start":{"line":49,"column":6},"end":{"line":51,"column":7}},"14":{"start":{"line":50,"column":8},"end":{"line":50,"column":49}},"15":{"start":{"line":60,"column":2},"end":{"line":82,"column":3}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":20}},"17":{"start":{"line":63,"column":4},"end":{"line":67,"column":5}},"18":{"start":{"line":64,"column":6},"end":{"line":66,"column":7}},"19":{"start":{"line":65,"column":8},"end":{"line":65,"column":32}},"20":{"start":{"line":69,"column":4},"end":{"line":79,"column":5}},"21":{"start":{"line":70,"column":6},"end":{"line":78,"column":9}},"22":{"start":{"line":72,"column":8},"end":{"line":72,"column":42}},"23":{"start":{"line":75,"column":8},"end":{"line":77,"column":11}},"24":{"start":{"line":76,"column":10},"end":{"line":76,"column":49}},"25":{"start":{"line":81,"column":4},"end":{"line":81,"column":28}},"26":{"start":{"line":90,"column":2},"end":{"line":98,"column":3}},"27":{"start":{"line":91,"column":4},"end":{"line":91,"column":31}},"28":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"29":{"start":{"line":93,"column":6},"end":{"line":93,"column":37}},"30":{"start":{"line":96,"column":4},"end":{"line":97,"column":60}},"31":{"start":{"line":104,"column":2},"end":{"line":111,"column":3}},"32":{"start":{"line":105,"column":4},"end":{"line":108,"column":5}},"33":{"start":{"line":107,"column":6},"end":{"line":107,"column":66}},"34":{"start":{"line":110,"column":4},"end":{"line":110,"column":11}},"35":{"start":{"line":117,"column":2},"end":{"line":145,"column":3}},"36":{"start":{"line":118,"column":4},"end":{"line":142,"column":5}},"37":{"start":{"line":119,"column":6},"end":{"line":119,"column":26}},"38":{"start":{"line":121,"column":6},"end":{"line":141,"column":7}},"39":{"start":{"line":123,"column":8},"end":{"line":123,"column":28}},"40":{"start":{"line":124,"column":8},"end":{"line":127,"column":11}},"41":{"start":{"line":125,"column":10},"end":{"line":125,"column":37}},"42":{"start":{"line":126,"column":10},"end":{"line":126,"column":28}},"43":{"start":{"line":130,"column":8},"end":{"line":130,"column":74}},"44":{"start":{"line":133,"column":8},"end":{"line":140,"column":9}},"45":{"start":{"line":134,"column":10},"end":{"line":134,"column":44}},"46":{"start":{"line":135,"column":10},"end":{"line":135,"column":57}},"47":{"start":{"line":136,"column":10},"end":{"line":136,"column":80}},"48":{"start":{"line":138,"column":10},"end":{"line":138,"column":71}},"49":{"start":{"line":139,"column":10},"end":{"line":139,"column":91}},"50":{"start":{"line":144,"column":4},"end":{"line":144,"column":11}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":42},"end":{"line":23,"column":48}},{"start":{"line":23,"column":51},"end":{"line":23,"column":65}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":6}},{"start":{"line":64,"column":6},"end":{"line":64,"column":6}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"6":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":15}},{"start":{"line":92,"column":19},"end":{"line":92,"column":33}}]},"8":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":17}},{"start":{"line":96,"column":21},"end":{"line":96,"column":38}},{"start":{"line":97,"column":7},"end":{"line":97,"column":58}}]},"9":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"10":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":25},"end":{"line":107,"column":45}},{"start":{"line":107,"column":49},"end":{"line":107,"column":65}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"12":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":6},"end":{"line":121,"column":6}},{"start":{"line":121,"column":6},"end":{"line":121,"column":6}}]}},"code":["'use strict';","","module.exports = pathParser;","","var _           = require('lodash'),","    util        = require('./helpers/util'),","    paramParser = require('./param-parser');","","/**"," * Parses Swagger path parameters in the HTTP request."," * This middleware populates {@link Request#params} and {@link Request#pathParams}."," *"," * NOTE: Express uses a special type of middleware for parsing path parameters."," * This middleware must be registered using {@link Router#param} rather than {@link Router#use}, {@link Router#get}, etc."," * In addition, path-parsing middleware must be registered for EACH path parameter in the Swagger API."," * See http://expressjs.com/4x/api.html#router.param for more info."," *"," * @param   {MiddlewareContext}    context"," * @param   {express#Router}       [router]"," * @returns {function[]}"," */","function pathParser(context, router) {","  router = util.isExpressRouter(router) ? router : context.router;","","  if (util.isExpressRouter(router)) {","    // This is special path-param middleware, which sets `req.params`","    registerPathParamMiddleware();","","    // If the API changes, register any new path-params","    context.on('change', registerPathParamMiddleware);","  }","  else {","    util.debug(","      'WARNING! An Express Router/Application was not passed to the requestParser middleware. ' +","      'req.params will not be parsed. Use req.pathParams instead.'","    );","  }","","  // This is normal middleware, which sets `req.pathParams`","  return [parsePathParams];","","  /**","   * Registers middleware to parse path parameters.","   */","  function registerPathParamMiddleware() {","    var pathParams = getAllPathParamNames();","","    pathParams.forEach(function(param) {","      if (!alreadyRegistered(param)) {","        router.param(param, pathParamMiddleware);","      }","    });","  }","","  /**","   * Returns the unique names of all path params in the Swagger API.","   *","   * @returns {string[]}","   */","  function getAllPathParamNames() {","    var params = [];","","    function addParam(param) {","      if (param.in === 'path') {","        params.push(param.name);","      }","    }","","    if (context.api) {","      _.each(context.api.paths, function(path) {","        // Add each path parameter","        _.each(path.parameters, addParam);","","        // Add each operation parameter","        _.each(path, function(operation) {","          _.each(operation.parameters, addParam);","        });","      });","    }","","    return _.unique(params);","  }","","  /**","   * Determines whether we've already registered path-param middleware for the given parameter.","   *","   * @param   {string}    paramName","   * @returns {boolean}","   */","  function alreadyRegistered(paramName) {","    var params = router.params;","    if (!params && router._router) {","      params = router._router.params;","    }","","    return params && params[paramName] &&","      (params[paramName].indexOf(pathParamMiddleware) >= 0);","  }","","  /**","   * This is a special type of Express middleware that specifically parses path parameters and sets `req.params`.","   * See http://expressjs.com/4x/api.html#router.param","   */","  function pathParamMiddleware(req, res, next, value, name) {","    if (req.pathParams) {","      // Path parameters have already been parsed by","      req.params[name] = req.pathParams[name] || req.params[name];","    }","","    next();","  }","","  /**","   * Parses all Swagger path parameters and sets `req.pathParams`.","   * NOTE: This middleware cannot set `req.params`.  That requires special path-param middleware (see above)","   */","  function parsePathParams(req, res, next) {","    if (util.isSwaggerRequest(req)) {","      req.pathParams = {};","","      if (req.swagger.pathName.indexOf('{') >= 0) {","        // Convert the Swagger path to a RegExp","        var paramNames = [];","        var pathPattern = req.swagger.pathName.replace(util.swaggerParamRegExp, function(match, paramName) {","          paramNames.push(paramName);","          return '([^\\/]+)';","        });","","        // Exec the RegExp to get the path param values from the URL","        var values = new RegExp(pathPattern + '\\/?$', 'i').exec(req.path);","","        // Parse each path param","        for (var i = 1; i < values.length; i++) {","          var paramName = paramNames[i - 1];","          var paramValue = decodeURIComponent(values[i]);","          var param = _.find(req.swagger.params, {in: 'path', name: paramName});","","          util.debug('    Parsing the \"%s\" path parameter', paramName);","          req.pathParams[paramName] = paramParser.parseParameter(param, paramValue, param);","        }","      }","    }","","    next();","  }","}",""],"l":{"3":1,"5":1,"22":1,"23":2,"25":2,"27":2,"30":2,"33":0,"40":2,"45":1,"46":2,"48":2,"49":0,"50":0,"60":1,"61":2,"63":1,"64":0,"65":0,"69":2,"70":0,"72":0,"75":0,"76":0,"81":2,"90":1,"91":0,"92":0,"93":0,"96":0,"104":1,"105":0,"107":0,"110":0,"117":1,"118":0,"119":0,"121":0,"123":0,"124":0,"125":0,"126":0,"130":0,"133":0,"134":0,"135":0,"136":0,"138":0,"139":0,"144":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-validator.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/request-validator.js","s":{"1":1,"2":1,"3":1,"4":2,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"requestValidator","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}}},"2":{"name":"http500","line":22,"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":35}}},"3":{"name":"http401","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":33}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":44},"end":{"line":44,"column":66}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":51},"end":{"line":45,"column":74}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":39},"end":{"line":50,"column":61}}},"7":{"name":"http404","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":33}}},"8":{"name":"http405","line":106,"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":33}}},"9":{"name":"http406","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":33}}},"10":{"name":"http413","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":33}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":46},"end":{"line":160,"column":62}}},"12":{"name":"http415","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":15,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":73}},"5":{"start":{"line":22,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":26,"column":5}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":33}},"8":{"start":{"line":25,"column":6},"end":{"line":25,"column":26}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":11}},"10":{"start":{"line":37,"column":0},"end":{"line":84,"column":1}},"11":{"start":{"line":38,"column":2},"end":{"line":81,"column":3}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":27}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":51}},"14":{"start":{"line":44,"column":4},"end":{"line":70,"column":7}},"15":{"start":{"line":45,"column":6},"end":{"line":47,"column":9}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":57}},"17":{"start":{"line":50,"column":6},"end":{"line":69,"column":9}},"18":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"19":{"start":{"line":52,"column":10},"end":{"line":52,"column":47}},"20":{"start":{"line":55,"column":8},"end":{"line":68,"column":9}},"21":{"start":{"line":56,"column":10},"end":{"line":56,"column":69}},"22":{"start":{"line":58,"column":13},"end":{"line":68,"column":9}},"23":{"start":{"line":59,"column":10},"end":{"line":59,"column":60}},"24":{"start":{"line":61,"column":13},"end":{"line":68,"column":9}},"25":{"start":{"line":62,"column":10},"end":{"line":62,"column":59}},"26":{"start":{"line":67,"column":10},"end":{"line":67,"column":22}},"27":{"start":{"line":72,"column":4},"end":{"line":80,"column":5}},"28":{"start":{"line":73,"column":6},"end":{"line":73,"column":47}},"29":{"start":{"line":74,"column":6},"end":{"line":77,"column":8}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":86}},"31":{"start":{"line":79,"column":6},"end":{"line":79,"column":106}},"32":{"start":{"line":83,"column":2},"end":{"line":83,"column":9}},"33":{"start":{"line":90,"column":0},"end":{"line":100,"column":1}},"34":{"start":{"line":91,"column":2},"end":{"line":97,"column":3}},"35":{"start":{"line":92,"column":4},"end":{"line":95,"column":6}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":65}},"37":{"start":{"line":99,"column":2},"end":{"line":99,"column":9}},"38":{"start":{"line":106,"column":0},"end":{"line":123,"column":1}},"39":{"start":{"line":107,"column":2},"end":{"line":120,"column":3}},"40":{"start":{"line":108,"column":4},"end":{"line":112,"column":6}},"41":{"start":{"line":115,"column":4},"end":{"line":115,"column":63}},"42":{"start":{"line":116,"column":4},"end":{"line":116,"column":34}},"43":{"start":{"line":118,"column":4},"end":{"line":119,"column":41}},"44":{"start":{"line":122,"column":2},"end":{"line":122,"column":9}},"45":{"start":{"line":129,"column":0},"end":{"line":151,"column":1}},"46":{"start":{"line":130,"column":2},"end":{"line":148,"column":3}},"47":{"start":{"line":132,"column":4},"end":{"line":132,"column":84}},"48":{"start":{"line":134,"column":4},"end":{"line":147,"column":5}},"49":{"start":{"line":135,"column":6},"end":{"line":135,"column":69}},"50":{"start":{"line":137,"column":6},"end":{"line":146,"column":7}},"51":{"start":{"line":138,"column":8},"end":{"line":138,"column":36}},"52":{"start":{"line":139,"column":8},"end":{"line":143,"column":10}},"53":{"start":{"line":144,"column":8},"end":{"line":145,"column":73}},"54":{"start":{"line":150,"column":2},"end":{"line":150,"column":9}},"55":{"start":{"line":157,"column":0},"end":{"line":183,"column":1}},"56":{"start":{"line":158,"column":2},"end":{"line":180,"column":3}},"57":{"start":{"line":160,"column":4},"end":{"line":162,"column":7}},"58":{"start":{"line":161,"column":6},"end":{"line":161,"column":60}},"59":{"start":{"line":164,"column":4},"end":{"line":179,"column":5}},"60":{"start":{"line":167,"column":6},"end":{"line":167,"column":45}},"61":{"start":{"line":168,"column":6},"end":{"line":168,"column":66}},"62":{"start":{"line":171,"column":6},"end":{"line":178,"column":7}},"63":{"start":{"line":172,"column":8},"end":{"line":176,"column":10}},"64":{"start":{"line":177,"column":8},"end":{"line":177,"column":92}},"65":{"start":{"line":182,"column":2},"end":{"line":182,"column":9}},"66":{"start":{"line":189,"column":0},"end":{"line":214,"column":1}},"67":{"start":{"line":190,"column":2},"end":{"line":211,"column":3}},"68":{"start":{"line":192,"column":4},"end":{"line":210,"column":5}},"69":{"start":{"line":194,"column":6},"end":{"line":194,"column":86}},"70":{"start":{"line":196,"column":6},"end":{"line":209,"column":7}},"71":{"start":{"line":197,"column":8},"end":{"line":197,"column":83}},"72":{"start":{"line":199,"column":8},"end":{"line":208,"column":9}},"73":{"start":{"line":200,"column":10},"end":{"line":200,"column":55}},"74":{"start":{"line":201,"column":10},"end":{"line":205,"column":12}},"75":{"start":{"line":206,"column":10},"end":{"line":207,"column":68}},"76":{"start":{"line":213,"column":2},"end":{"line":213,"column":9}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":67}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":13},"end":{"line":58,"column":13}},{"start":{"line":58,"column":13},"end":{"line":58,"column":13}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":17},"end":{"line":58,"column":46}},{"start":{"line":58,"column":50},"end":{"line":58,"column":77}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":13},"end":{"line":61,"column":13}},{"start":{"line":61,"column":13},"end":{"line":61,"column":13}}]},"9":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":17},"end":{"line":61,"column":46}},{"start":{"line":61,"column":50},"end":{"line":61,"column":76}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"11":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":53},"end":{"line":78,"column":65}},{"start":{"line":78,"column":69},"end":{"line":78,"column":77}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"13":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":17}},{"start":{"line":91,"column":21},"end":{"line":91,"column":36}},{"start":{"line":91,"column":40},"end":{"line":91,"column":57}}]},"14":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"15":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":17}},{"start":{"line":107,"column":21},"end":{"line":107,"column":37}},{"start":{"line":107,"column":41},"end":{"line":107,"column":63}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"17":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":19},"end":{"line":132,"column":49}},{"start":{"line":132,"column":53},"end":{"line":132,"column":77}},{"start":{"line":132,"column":81},"end":{"line":132,"column":83}}]},"18":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"19":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":6}},{"start":{"line":137,"column":6},"end":{"line":137,"column":6}}]},"20":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"21":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":13},"end":{"line":161,"column":32}},{"start":{"line":161,"column":36},"end":{"line":161,"column":59}}]},"22":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"23":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"24":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"25":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"26":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":21},"end":{"line":194,"column":51}},{"start":{"line":194,"column":55},"end":{"line":194,"column":79}},{"start":{"line":194,"column":83},"end":{"line":194,"column":85}}]},"27":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"28":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]}},"code":["'use strict';","","module.exports = requestValidator;","","var util = require('./helpers/util'),","    _    = require('lodash');","","/**"," * Validates the HTTP request against the Swagger API."," * An error is sent downstream if the request is invalid for any reason."," *"," * @param   {MiddlewareContext}    context"," * @returns {function[]}"," */","function requestValidator(context) {","  return [http500, http401, http404, http405, http406, http413, http415];","","  /**","   * Throws an HTTP 500 error if the Swagger API is invalid.","   * Calling {@link Middleware#init} again with a valid Swagger API will clear the error.","   */","  function http500(req, res, next) {","    if (context.error) {","      context.error.status = 500;","      throw context.error;","    }","","    next();","  }","}","","/**"," * If the Swagger API requires security for the request, and the request doesn't contain the necessary security info,"," * then an HTTP 401 (Unauthorized) is thrown, and the WWW-Authenticate header is set."," * NOTE: This does not perform any authentication or authorization. It simply verifies that authentication info is present."," */","function http401(req, res, next) {","  if (util.isSwaggerRequest(req) && req.swagger.security.length > 0) {","    var securityTypes = [];","","    util.debug('Validating security requirements');","","    // Loop through each Security Requirement (if ANY of them are met, then the request is valid)","    var isValid = req.swagger.security.some(function(requirement) {","      var securityDefinitions = _.map(requirement, function(scopes, name) {","        return req.swagger.api.securityDefinitions[name];","      });","","      // Loop through each Security Definition (if ALL of them are met, then the request is valid)","      return securityDefinitions.every(function(securityDef) {","        if (securityTypes.indexOf(securityDef.type) === -1) {","          securityTypes.push(securityDef.type);","        }","","        if (securityDef.type === 'basic') {","          return _.startsWith(req.header('Authorization'), 'Basic ');","        }","        else if (securityDef.type === 'apiKey' && securityDef.in === 'header') {","          return req.header(securityDef.name) !== undefined;","        }","        else if (securityDef.type === 'apiKey' && securityDef.in === 'query') {","          return req.query[securityDef.name] !== undefined;","        }","        else {","          // For any other type of security, just assume it's valid.","          // TODO: Is there a way to validate OAuth2 here?","          return true;","        }","      });","    });","","    if (!isValid) {","      securityTypes = securityTypes.join(', ');","      util.debug(","        'The client didn\\'t provide authentication information for any of the required authentication types (%s). ' +","        'Returning HTTP 401 (Unauthorized)', securityTypes","      );","      res.set('WWW-Authenticate', 'Basic realm=\"' + (req.hostname || 'server') + '\"');","      throw util.newError(401, '%s %s requires authentication (%s)', req.method, req.path, securityTypes);","    }","  }","","  next();","}","","/**"," * If the request is under the Swagger API's basePath, but no matching Path was found,"," * then an HTTP 404 (Not Found) error is thrown"," */","function http404(req, res, next) {","  if (req.swagger && req.swagger.api && !req.swagger.path) {","    util.debug(","      'Client requested path \"%s\", which is not defined in the Swagger API. Returning HTTP 404 (Not Found)',","      req.path","    );","    throw util.newError(404, 'Resource not found: %s', req.path);","  }","","  next();","}","","/**"," * If the Swagger Path was matched, but the HTTP method doesn't match any of the Swagger Operations,"," * then an HTTP 405 (Method Not Allowed) error is thrown, and the \"Allow\" header is set to the list of valid methods"," */","function http405(req, res, next) {","  if (req.swagger && req.swagger.path && !req.swagger.operation) {","    util.debug(","      'Client attempted a %s operation on \"%s\", which is not allowed by the Swagger API. ' +","      'Returning HTTP 405 (Method Not Allowed)',","      req.method, req.path","    );","","    // Let the client know which methods are allowed","    var allowedList = util.getAllowedMethods(req.swagger.path);","    res.set('Allow', allowedList);","","    throw util.newError(405, '%s does not allow %s. \\nAllowed methods: %s',","      req.path, req.method, allowedList);","  }","","  next();","}","","/**"," * If the Swagger API specifies the MIME types that this operation produces,"," * and the HTTP Accept header does not match any of those MIME types, then an HTTP 406 (Not Acceptable) is thrown."," */","function http406(req, res, next) {","  if (util.isSwaggerRequest(req)) {","    // Get the MIME types that this operation produces","    var produces = req.swagger.operation.produces || req.swagger.api.produces || [];","","    if (produces.length > 0) {","      util.debug('Validating Accept header (%s)', req.get('Accept'));","","      if (!req.accepts(produces)) {","        var accepts = req.accepts();","        util.debug(","          'The %s operation on \"%s\" only produces %j content, but the client requested %j. ' +","          'Returning HTTP 406 (Not Acceptable)',","          req.method, req.path, produces, accepts","        );","        throw util.newError(406, '%s %s cannot produce any of the requested formats (%s). \\nSupported formats: %s',","          req.method, req.path, accepts.join(', '), produces.join(', '));","      }","    }","  }","","  next();","}","","/**"," * Throws an HTTP 413 (Request Entity Too Large) if the HTTP request includes"," * body content that is not allowed by the Swagger API."," */","function http413(req, res, next) {","  if (util.isSwaggerRequest(req)) {","    // Determine if the request allows body content","    var bodyAllowed = req.swagger.params.some(function(param) {","      return param.in === 'body' || param.in === 'formData';","    });","","    if (!bodyAllowed) {","      // NOTE: We used to also check the Transfer-Encoding header, but that fails in Node 0.10.x","      // TODO: Once we drop support for Node 0.10.x, add a Transfer-Encoding check (via typeIs.hasBody())","      var length = req.get('Content-Length');","      util.debug('Validating Content-Length header (%d)', length);","","      // NOTE: Even a zero-byte file attachment will have a Content-Length > 0","      if (length > 0) {","        util.debug(","          'The HTTP request contains body content, but the %s operation on \"%s\" does not allow a request body. ' +","          'Returning HTTP 413 (Request Entity Too Large)',","          req.method, req.path","        );","        throw util.newError(413, '%s %s does not allow body content', req.method, req.path);","      }","    }","  }","","  next();","}","","/**"," * Validates the HTTP Content-Type header against the Swagger API's \"consumes\" MIME types,"," * and throws an HTTP 415 (Unsupported Media Type) if there's a conflict."," */","function http415(req, res, next) {","  if (util.isSwaggerRequest(req)) {","    // Only validate the Content-Type if there's body content","    if (!_.isEmpty(req.body)) {","      // Get the MIME types that this operation consumes","      var consumes = req.swagger.operation.consumes || req.swagger.api.consumes || [];","","      if (consumes.length > 0) {","        util.debug('Validating Content-Type header (%s)', req.get('Content-Type'));","","        if (!req.is(consumes)) {","          var contentType = req.header('Content-Type');","          util.debug(","            'Client attempted to send %s data to the %s operation on \"%s\", which is not allowed by the Swagger API. ' +","            'Returning HTTP 415 (Unsupported Media Type)',","            contentType, req.method, req.path","          );","          throw util.newError(415, '%s %s does not allow Content-Type \"%s\". \\nAllowed Content-Types: %s',","            req.method, req.path, contentType, consumes.join(', '));","        }","      }","    }","  }","","  next();","}","",""],"l":{"3":1,"5":1,"15":1,"16":2,"22":1,"23":0,"24":0,"25":0,"28":0,"37":1,"38":0,"39":0,"41":0,"44":0,"45":0,"46":0,"50":0,"51":0,"52":0,"55":0,"56":0,"58":0,"59":0,"61":0,"62":0,"67":0,"72":0,"73":0,"74":0,"78":0,"79":0,"83":0,"90":1,"91":0,"92":0,"96":0,"99":0,"106":1,"107":0,"108":0,"115":0,"116":0,"118":0,"122":0,"129":1,"130":0,"132":0,"134":0,"135":0,"137":0,"138":0,"139":0,"144":0,"150":0,"157":1,"158":0,"160":0,"161":0,"164":0,"167":0,"168":0,"171":0,"172":0,"177":0,"182":0,"189":1,"190":0,"192":0,"194":0,"196":0,"197":0,"199":0,"200":0,"201":0,"206":0,"213":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/index.js","s":{"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":0,"12":2,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0},"b":{"1":[2,2],"2":[1,1],"3":[2,0],"4":[2,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0,0],"42":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"mock","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":28}}},"3":{"name":"mockResponse","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":40}}},"4":{"name":"mockImplementation","line":105,"loc":{"start":{"line":105,"column":2},"end":{"line":105,"column":46}}},"5":{"name":"mockResponseHeaders","line":135,"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":45}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":37},"end":{"line":140,"column":60}}},"7":{"name":"mockResponseBody","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":192,"column":42}}},"8":{"name":"sendObject","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":41}}},"9":{"name":"sendText","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":40}}},"10":{"name":"sendFile","line":266,"loc":{"start":{"line":266,"column":0},"end":{"line":266,"column":40}}},"11":{"name":"(anonymous_11)","line":277,"loc":{"start":{"line":277,"column":29},"end":{"line":277,"column":46}}},"12":{"name":"(anonymous_12)","line":279,"loc":{"start":{"line":279,"column":53},"end":{"line":279,"column":76}}},"13":{"name":"setContentType","line":314,"loc":{"start":{"line":314,"column":0},"end":{"line":314,"column":55}}},"14":{"name":"(anonymous_14)","line":325,"loc":{"start":{"line":325,"column":33},"end":{"line":325,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":5,"column":0},"end":{"line":18,"column":53}},"3":{"start":{"line":28,"column":0},"end":{"line":130,"column":1}},"4":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"5":{"start":{"line":30,"column":2},"end":{"line":30,"column":83}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"7":{"start":{"line":33,"column":2},"end":{"line":43,"column":3}},"8":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"9":{"start":{"line":36,"column":6},"end":{"line":36,"column":47}},"10":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"11":{"start":{"line":41,"column":6},"end":{"line":41,"column":42}},"12":{"start":{"line":45,"column":2},"end":{"line":47,"column":4}},"13":{"start":{"line":53,"column":2},"end":{"line":100,"column":3}},"14":{"start":{"line":54,"column":4},"end":{"line":97,"column":5}},"15":{"start":{"line":55,"column":6},"end":{"line":55,"column":19}},"16":{"start":{"line":58,"column":6},"end":{"line":93,"column":7}},"17":{"start":{"line":59,"column":8},"end":{"line":59,"column":88}},"18":{"start":{"line":60,"column":8},"end":{"line":60,"column":67}},"19":{"start":{"line":64,"column":8},"end":{"line":64,"column":82}},"20":{"start":{"line":65,"column":8},"end":{"line":92,"column":9}},"21":{"start":{"line":66,"column":10},"end":{"line":66,"column":38}},"22":{"start":{"line":69,"column":10},"end":{"line":84,"column":11}},"23":{"start":{"line":70,"column":12},"end":{"line":70,"column":95}},"24":{"start":{"line":71,"column":12},"end":{"line":71,"column":42}},"25":{"start":{"line":74,"column":12},"end":{"line":82,"column":13}},"26":{"start":{"line":75,"column":14},"end":{"line":75,"column":30}},"27":{"start":{"line":77,"column":17},"end":{"line":82,"column":13}},"28":{"start":{"line":78,"column":14},"end":{"line":78,"column":30}},"29":{"start":{"line":81,"column":14},"end":{"line":81,"column":30}},"30":{"start":{"line":83,"column":12},"end":{"line":83,"column":116}},"31":{"start":{"line":88,"column":10},"end":{"line":88,"column":66}},"32":{"start":{"line":89,"column":10},"end":{"line":89,"column":83}},"33":{"start":{"line":90,"column":10},"end":{"line":90,"column":62}},"34":{"start":{"line":91,"column":10},"end":{"line":91,"column":40}},"35":{"start":{"line":96,"column":6},"end":{"line":96,"column":69}},"36":{"start":{"line":99,"column":4},"end":{"line":99,"column":11}},"37":{"start":{"line":105,"column":2},"end":{"line":129,"column":3}},"38":{"start":{"line":106,"column":4},"end":{"line":128,"column":5}},"39":{"start":{"line":108,"column":6},"end":{"line":108,"column":45}},"40":{"start":{"line":111,"column":6},"end":{"line":111,"column":15}},"41":{"start":{"line":112,"column":6},"end":{"line":116,"column":7}},"42":{"start":{"line":113,"column":8},"end":{"line":113,"column":73}},"43":{"start":{"line":115,"column":8},"end":{"line":115,"column":69}},"44":{"start":{"line":119,"column":6},"end":{"line":119,"column":98}},"45":{"start":{"line":120,"column":6},"end":{"line":120,"column":27}},"46":{"start":{"line":123,"column":6},"end":{"line":123,"column":51}},"47":{"start":{"line":124,"column":6},"end":{"line":124,"column":31}},"48":{"start":{"line":127,"column":6},"end":{"line":127,"column":13}},"49":{"start":{"line":135,"column":0},"end":{"line":187,"column":1}},"50":{"start":{"line":136,"column":2},"end":{"line":184,"column":3}},"51":{"start":{"line":137,"column":4},"end":{"line":137,"column":85}},"52":{"start":{"line":139,"column":4},"end":{"line":183,"column":5}},"53":{"start":{"line":140,"column":6},"end":{"line":182,"column":9}},"54":{"start":{"line":143,"column":8},"end":{"line":181,"column":9}},"55":{"start":{"line":144,"column":10},"end":{"line":144,"column":70}},"56":{"start":{"line":146,"column":13},"end":{"line":181,"column":9}},"57":{"start":{"line":147,"column":10},"end":{"line":147,"column":40}},"58":{"start":{"line":148,"column":10},"end":{"line":148,"column":67}},"59":{"start":{"line":151,"column":10},"end":{"line":179,"column":11}},"60":{"start":{"line":153,"column":14},"end":{"line":153,"column":77}},"61":{"start":{"line":154,"column":14},"end":{"line":154,"column":20}},"62":{"start":{"line":156,"column":14},"end":{"line":156,"column":68}},"63":{"start":{"line":157,"column":14},"end":{"line":157,"column":20}},"64":{"start":{"line":159,"column":14},"end":{"line":159,"column":110}},"65":{"start":{"line":160,"column":14},"end":{"line":160,"column":20}},"66":{"start":{"line":163,"column":14},"end":{"line":168,"column":15}},"67":{"start":{"line":164,"column":16},"end":{"line":164,"column":89}},"68":{"start":{"line":167,"column":16},"end":{"line":167,"column":59}},"69":{"start":{"line":169,"column":14},"end":{"line":169,"column":20}},"70":{"start":{"line":172,"column":14},"end":{"line":172,"column":59}},"71":{"start":{"line":173,"column":14},"end":{"line":178,"column":15}},"72":{"start":{"line":174,"column":16},"end":{"line":174,"column":52}},"73":{"start":{"line":177,"column":16},"end":{"line":177,"column":52}},"74":{"start":{"line":180,"column":10},"end":{"line":180,"column":56}},"75":{"start":{"line":186,"column":2},"end":{"line":186,"column":9}},"76":{"start":{"line":192,"column":0},"end":{"line":223,"column":1}},"77":{"start":{"line":193,"column":2},"end":{"line":222,"column":3}},"78":{"start":{"line":194,"column":4},"end":{"line":218,"column":5}},"79":{"start":{"line":196,"column":6},"end":{"line":196,"column":107}},"80":{"start":{"line":197,"column":6},"end":{"line":197,"column":17}},"81":{"start":{"line":201,"column":6},"end":{"line":201,"column":54}},"82":{"start":{"line":202,"column":6},"end":{"line":202,"column":68}},"83":{"start":{"line":204,"column":6},"end":{"line":217,"column":7}},"84":{"start":{"line":208,"column":10},"end":{"line":208,"column":49}},"85":{"start":{"line":209,"column":10},"end":{"line":209,"column":16}},"86":{"start":{"line":212,"column":10},"end":{"line":212,"column":47}},"87":{"start":{"line":213,"column":10},"end":{"line":213,"column":16}},"88":{"start":{"line":216,"column":10},"end":{"line":216,"column":47}},"89":{"start":{"line":221,"column":4},"end":{"line":221,"column":11}},"90":{"start":{"line":233,"column":0},"end":{"line":238,"column":1}},"91":{"start":{"line":234,"column":2},"end":{"line":234,"column":56}},"92":{"start":{"line":236,"column":2},"end":{"line":236,"column":49}},"93":{"start":{"line":237,"column":2},"end":{"line":237,"column":16}},"94":{"start":{"line":248,"column":0},"end":{"line":255,"column":1}},"95":{"start":{"line":249,"column":2},"end":{"line":251,"column":61}},"96":{"start":{"line":253,"column":2},"end":{"line":253,"column":53}},"97":{"start":{"line":254,"column":2},"end":{"line":254,"column":31}},"98":{"start":{"line":266,"column":0},"end":{"line":303,"column":1}},"99":{"start":{"line":267,"column":2},"end":{"line":274,"column":3}},"100":{"start":{"line":268,"column":4},"end":{"line":268,"column":66}},"101":{"start":{"line":271,"column":4},"end":{"line":271,"column":42}},"102":{"start":{"line":272,"column":4},"end":{"line":272,"column":19}},"103":{"start":{"line":273,"column":4},"end":{"line":273,"column":11}},"104":{"start":{"line":277,"column":2},"end":{"line":302,"column":5}},"105":{"start":{"line":278,"column":4},"end":{"line":301,"column":5}},"106":{"start":{"line":279,"column":6},"end":{"line":281,"column":9}},"107":{"start":{"line":280,"column":8},"end":{"line":280,"column":60}},"108":{"start":{"line":283,"column":6},"end":{"line":295,"column":7}},"109":{"start":{"line":286,"column":8},"end":{"line":286,"column":81}},"110":{"start":{"line":287,"column":8},"end":{"line":287,"column":53}},"111":{"start":{"line":289,"column":8},"end":{"line":289,"column":84}},"112":{"start":{"line":290,"column":8},"end":{"line":290,"column":42}},"113":{"start":{"line":293,"column":8},"end":{"line":293,"column":55}},"114":{"start":{"line":294,"column":8},"end":{"line":294,"column":55}},"115":{"start":{"line":299,"column":6},"end":{"line":299,"column":90}},"116":{"start":{"line":300,"column":6},"end":{"line":300,"column":77}},"117":{"start":{"line":314,"column":0},"end":{"line":342,"column":1}},"118":{"start":{"line":316,"column":2},"end":{"line":316,"column":82}},"119":{"start":{"line":318,"column":2},"end":{"line":341,"column":3}},"120":{"start":{"line":320,"column":4},"end":{"line":320,"column":111}},"121":{"start":{"line":321,"column":4},"end":{"line":321,"column":27}},"122":{"start":{"line":325,"column":4},"end":{"line":328,"column":7}},"123":{"start":{"line":326,"column":6},"end":{"line":327,"column":54}},"124":{"start":{"line":330,"column":4},"end":{"line":340,"column":5}},"125":{"start":{"line":331,"column":6},"end":{"line":331,"column":83}},"126":{"start":{"line":332,"column":6},"end":{"line":332,"column":22}},"127":{"start":{"line":335,"column":6},"end":{"line":338,"column":8}},"128":{"start":{"line":339,"column":6},"end":{"line":339,"column":29}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":17}},{"start":{"line":29,"column":21},"end":{"line":29,"column":35}}]},"2":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":49},"end":{"line":30,"column":58}},{"start":{"line":30,"column":61},"end":{"line":30,"column":82}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":34}},{"start":{"line":54,"column":38},"end":{"line":54,"column":51}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"8":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":24}},{"start":{"line":58,"column":28},"end":{"line":58,"column":75}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"10":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":10},"end":{"line":69,"column":10}},{"start":{"line":69,"column":10},"end":{"line":69,"column":10}}]},"11":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"12":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":16},"end":{"line":74,"column":37}},{"start":{"line":74,"column":41},"end":{"line":74,"column":61}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":17},"end":{"line":77,"column":17}},{"start":{"line":77,"column":17},"end":{"line":77,"column":17}}]},"14":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":21},"end":{"line":77,"column":44}},{"start":{"line":77,"column":48},"end":{"line":77,"column":72}}]},"15":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"16":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"17":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":15},"end":{"line":113,"column":42}},{"start":{"line":113,"column":46},"end":{"line":113,"column":72}}]},"18":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":15},"end":{"line":115,"column":40}},{"start":{"line":115,"column":44},"end":{"line":115,"column":68}}]},"19":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":43},"end":{"line":119,"column":85}},{"start":{"line":119,"column":88},"end":{"line":119,"column":97}}]},"20":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":43},"end":{"line":119,"column":72}},{"start":{"line":119,"column":76},"end":{"line":119,"column":85}}]},"21":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"22":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"23":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"24":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":13},"end":{"line":146,"column":13}},{"start":{"line":146,"column":13},"end":{"line":146,"column":13}}]},"25":{"line":151,"type":"switch","locations":[{"start":{"line":152,"column":12},"end":{"line":154,"column":20}},{"start":{"line":155,"column":12},"end":{"line":157,"column":20}},{"start":{"line":158,"column":12},"end":{"line":160,"column":20}},{"start":{"line":161,"column":12},"end":{"line":169,"column":20}},{"start":{"line":170,"column":12},"end":{"line":178,"column":15}}]},"26":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":42},"end":{"line":153,"column":62}},{"start":{"line":153,"column":66},"end":{"line":153,"column":74}}]},"27":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":69},"end":{"line":159,"column":89}},{"start":{"line":159,"column":93},"end":{"line":159,"column":101}}]},"28":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":14},"end":{"line":163,"column":14}},{"start":{"line":163,"column":14},"end":{"line":163,"column":14}}]},"29":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":14},"end":{"line":173,"column":14}},{"start":{"line":173,"column":14},"end":{"line":173,"column":14}}]},"30":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"31":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"32":{"line":204,"type":"switch","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":22}},{"start":{"line":206,"column":8},"end":{"line":206,"column":21}},{"start":{"line":207,"column":8},"end":{"line":209,"column":16}},{"start":{"line":211,"column":8},"end":{"line":213,"column":16}},{"start":{"line":215,"column":8},"end":{"line":216,"column":47}}]},"33":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"34":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":12},"end":{"line":277,"column":21}},{"start":{"line":277,"column":25},"end":{"line":277,"column":27}}]},"35":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":4},"end":{"line":278,"column":4}},{"start":{"line":278,"column":4},"end":{"line":278,"column":4}}]},"36":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":6}},{"start":{"line":283,"column":6},"end":{"line":283,"column":6}}]},"37":{"line":287,"type":"cond-expr","locations":[{"start":{"line":287,"column":30},"end":{"line":287,"column":41}},{"start":{"line":287,"column":44},"end":{"line":287,"column":52}}]},"38":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":53},"end":{"line":300,"column":62}},{"start":{"line":300,"column":66},"end":{"line":300,"column":74}}]},"39":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":17},"end":{"line":316,"column":47}},{"start":{"line":316,"column":51},"end":{"line":316,"column":75}},{"start":{"line":316,"column":79},"end":{"line":316,"column":81}}]},"40":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":318,"column":2}},{"start":{"line":318,"column":2},"end":{"line":318,"column":2}}]},"41":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":13},"end":{"line":326,"column":43}},{"start":{"line":327,"column":9},"end":{"line":327,"column":18}},{"start":{"line":327,"column":22},"end":{"line":327,"column":52}}]},"42":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]}},"code":["'use strict';","","module.exports = mock;","","var _                = require('lodash'),","    path             = require('path'),","    fs               = require('fs'),","    typeIs           = require('type-is'),","    util             = require('../helpers/util'),","    JsonSchema       = require('../helpers/json-schema'),","    DataStore        = require('../data-store'),","    MemoryDataStore  = require('../data-store/memory-data-store'),","    SemanticRequest  = require('./semantic-request'),","    SemanticResponse = require('./semantic-response'),","    editResource     = require('./edit-resource'),","    queryResource    = require('./query-resource'),","    editCollection   = require('./edit-collection'),","    queryCollection  = require('./query-collection');","","/**"," * Implements mock behavior for HTTP requests, based on the Swagger API."," *"," * @param   {MiddlewareContext} context"," * @param   {express#Router}    [router]"," * @param   {DataStore}         [dataStore]"," * @returns {function[]}"," */","function mock(context, router, dataStore) {","  router = router || context.router;","  dataStore = (dataStore instanceof DataStore) ? dataStore : new MemoryDataStore();","  var isDisabled = _.noop;","","  if (util.isExpressApp(router)) {","    // Store the DataStore as an Express setting, so it can be accessed/changed by third-party code","    if (!(router.get('mock data store') instanceof DataStore)) {","      router.set('mock data store', dataStore);","    }","","    // Allow the mock to be disabled using `router.disable(\"mock\")`","    isDisabled = function() {","      return router.get('mock') === false;","    };","  }","","  return [","    mockResponse, mockImplementation, mockResponseHeaders, mockResponseBody","  ];","","  /**","   * Determines the best Response object for this request and sets `res.swagger` to a {@link SemanticRequest} object.","   * Also sets `res.statusCode` if it isn't already set.","   */","  function mockResponse(req, res, next) {","    if (util.isSwaggerRequest(req) && !isDisabled()) {","      var response;","","      // Is there already a statusCode? (perhaps set by third-party middleware)","      if (res.statusCode && req.swagger.operation.responses[res.statusCode]) {","        util.debug('Using %s response for %s %s', res.statusCode, req.method, req.path);","        response = req.swagger.operation.responses[res.statusCode];","      }","      else {","        // Use the first response with a 2XX or 3XX code (or \"default\")","        var responses = util.getResponsesBetween(req.swagger.operation, 200, 399);","        if (responses.length > 0) {","          response = responses[0].api;","","          // Set the response status code","          if (_.isNumber(responses[0].code)) {","            util.debug('Using %s response for %s %s', responses[0].code, req.method, req.path);","            res.status(responses[0].code);","          }","          else {","            if (req.method === 'POST' || req.method === 'PUT') {","              res.status(201);","            }","            else if (req.method === 'DELETE' && !responses[0].api.schema) {","              res.status(204);","            }","            else {","              res.status(200);","            }","            util.debug('Using %s (%d) response for %s %s', responses[0].code, res.statusCode, req.method, req.path);","          }","        }","        else {","          // There is no response with a 2XX or 3XX code, so just use the first one","          var keys = Object.keys(req.swagger.operation.responses);","          util.debug('Using %s response for %s %s', keys[0], req.method, req.path);","          response = req.swagger.operation.responses[keys[0]];","          res.status(parseInt(keys[0]));","        }","      }","","      // The rest of the Mock middleware will use this ResponseMetadata object","      res.swagger = new SemanticResponse(response, req.swagger.path);","    }","","    next();","  }","","  /**","   * Runs the appropriate mock implementation.","   */","  function mockImplementation(req, res, next) {","    if (res.swagger) {","      // Determine the semantics of this request","      var request = new SemanticRequest(req);","","      // Determine which mock to run","      var mock;","      if (request.isCollection) {","        mock = queryCollection[req.method] || editCollection[req.method];","      } else {","        mock = queryResource[req.method] || editResource[req.method];","      }","","      // Get the current DataStore (this can be changed at any time by third-party code)","      var db = util.isExpressApp(router) ? router.get('mock data store') || dataStore : dataStore;","      db.__router = router;","","      // Run the mock","      util.debug('Running the %s mock', mock.name);","      mock(req, res, next, db);","    }","    else {","      next();","    }","  }","}","","/**"," * Sets response headers, according to the Swagger API."," */","function mockResponseHeaders(req, res, next) {","  if (res.swagger) {","    util.debug('Setting %d response headers...', _.keys(res.swagger.headers).length);","","    if (res.swagger.headers) {","      _.forEach(res.swagger.headers, function(header, name) {","        // Set all HTTP headers that are defined in the Swagger API.","        // If a default value is specified in the Swagger API, then use it; otherwise generate a value.","        if (res.get(name) !== undefined) {","          util.debug('    %s: %s (already set)', name, res.get(name));","        }","        else if (header.default !== undefined) {","          res.set(name, header.default);","          util.debug('    %s: %s (default)', name, header.default);","        }","        else {","          switch (name.toLowerCase()) {","            case 'location':","              res.location(req.baseUrl + (res.swagger.location || req.path));","              break;","            case 'last-modified':","              res.set(name, util.rfc1123(res.swagger.lastModified));","              break;","            case 'content-disposition':","              res.set(name, 'attachment; filename=\"' + path.basename(res.swagger.location || req.path) + '\"');","              break;","            case 'set-cookie':","              // Generate a random \"swagger\" cookie, or re-use it if it already exists","              if (req.cookies.swagger === undefined) {","                res.cookie('swagger', _.uniqueId('random') + _.random(99999999999.9999));","              }","              else {","                res.cookie('swagger', req.cookies.swagger);","              }","              break;","            default:","              // Generate a sample value from the schema","              var sample = new JsonSchema(header).sample();","              if (_.isDate(sample)) {","                res.set(name, util.rfc1123(sample));","              }","              else {","                res.set(name, _(sample).toString());","              }","          }","          util.debug('    %s: %s', name, res.get(name));","        }","      });","    }","  }","","  next();","}","","/**"," * Tries to make the response body adhere to the Swagger API."," */","function mockResponseBody(req, res, next) {","  if (res.swagger) {","    if (res.swagger.isEmpty) {","      // There is no response schema, so send an empty response","      util.debug('%s %s does not have a response schema. Sending an empty response', req.method, req.path);","      res.send();","    }","    else {","      // Serialize the response body according to the response schema","      var schema = new JsonSchema(res.swagger.schema);","      var serialized = schema.serialize(res.swagger.wrap(res.body));","","      switch (res.swagger.schema.type) {","        case 'object':","        case 'array':","        case undefined:","          sendObject(req, res, next, serialized);","          break;","","        case 'file':","          sendFile(req, res, next, serialized);","          break;","","        default:","          sendText(req, res, next, serialized);","      }","    }","  }","  else {","    next();","  }","}","","/**"," * Sends the given object (or array) as JSON."," *"," * @param   {Request}       req"," * @param   {Response}      res"," * @param   {function}      next"," * @param   {object|array}  obj"," */","function sendObject(req, res, next, obj) {","  setContentType(req, res, ['json', '*/json', '+json']);","","  util.debug('Serializing the response as JSON');","  res.json(obj);","}","","/**"," * Sends the given data as plain-text."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {*}         data"," */","function sendText(req, res, next, data) {","  setContentType(req, res,","    ['text', 'html', 'text/*', 'application/*'],                // allow these types","    ['json', '*/json', '+json', 'application/octet-stream']);   // don't allow these types","","  util.debug('Serializing the response as a string');","  res.send(_(data).toString());","}","","/**"," * Sends the given file as the response."," * If the file doesn't exist, then an HTTP 410 (Gone) is thrown"," *"," * @param   {Request}           req"," * @param   {Response}          res"," * @param   {function}          next"," * @param   {object|Buffer}     file"," */","function sendFile(req, res, next, file) {","  if (file instanceof Buffer) {","    setContentType(req, res, ['application/octet-stream', '*/*']);","","    // `file` is the file's contents","    util.debug('Sending raw buffer data');","    res.send(file);","    return;","  }","","  // `file` is a file info object","  fs.exists(file.path || '', function(exists) {","    if (exists) {","      var isAttachment = _.some(res.swagger.headers, function(header, name) {","        return name.toLowerCase() === 'content-disposition';","      });","","      if (isAttachment) {","        // Get the filename from the \"Content-Disposition\" header,","        // or fallback to the request path","        var fileName = /filename\\=\\\"(.+)\\\"/.exec(res.get('content-disposition'));","        fileName = fileName ? fileName[1] : req.path;","","        util.debug('Sending \"%s\" as an attachment named \"%s\"', file.path, fileName);","        res.download(file.path, fileName);","      }","      else {","        util.debug('Sending \"%s\" contents', file.path);","        res.sendFile(file.path, {lastModified: false});","      }","    }","    else {","      // Throw an HTTP 410 (Gone)","      util.debug('Unable to find the file: \"%s\".  Sending an HTTP 410 (Gone)', file.path);","      next(util.newError(410, '%s no longer exists', file.path || req.path));","    }","  });","}","","/**"," * Sets the Content-Type HTTP header to one of the given options."," * The best option is chosen, based on the MIME types that this operation produces."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {string[]}  supported       A list of MIME types that are supported"," * @param   {string[]}  [excluded]      A list of MIME types to exclude from the supported list"," */","function setContentType(req, res, supported, excluded) {","  // Get the MIME types that this operation produces","  var produces = req.swagger.operation.produces || req.swagger.api.produces || [];","","  if (produces.length === 0) {","    // No MIME types were specified, so just use the first one","    util.debug('No \"produces\" MIME types are specified in the Swagger API, so defaulting to %s', supported[0]);","    res.type(supported[0]);","  }","  else {","    // Find the first MIME type that we support","    var match = _.find(produces, function(mimeType) {","      return typeIs.is(mimeType, supported) &&","        (!excluded || !typeIs.is(mimeType, excluded));","    });","","    if (match) {","      util.debug('Using %s MIME type, which is allowed by the Swagger API', match);","      res.type(match);","    }","    else {","      util.warn(","        'WARNING! %s %s produces the MIME types that are not supported (%s). Using \"%s\" instead',","        req.method, req.path, produces.join(', '), supported[0]","      );","      res.type(supported[0]);","    }","  }","}",""],"l":{"3":1,"5":1,"28":1,"29":2,"30":2,"31":2,"33":2,"35":2,"36":2,"40":2,"41":0,"45":2,"53":1,"54":0,"55":0,"58":0,"59":0,"60":0,"64":0,"65":0,"66":0,"69":0,"70":0,"71":0,"74":0,"75":0,"77":0,"78":0,"81":0,"83":0,"88":0,"89":0,"90":0,"91":0,"96":0,"99":0,"105":1,"106":0,"108":0,"111":0,"112":0,"113":0,"115":0,"119":0,"120":0,"123":0,"124":0,"127":0,"135":1,"136":0,"137":0,"139":0,"140":0,"143":0,"144":0,"146":0,"147":0,"148":0,"151":0,"153":0,"154":0,"156":0,"157":0,"159":0,"160":0,"163":0,"164":0,"167":0,"169":0,"172":0,"173":0,"174":0,"177":0,"180":0,"186":0,"192":1,"193":0,"194":0,"196":0,"197":0,"201":0,"202":0,"204":0,"208":0,"209":0,"212":0,"213":0,"216":0,"221":0,"233":1,"234":0,"236":0,"237":0,"248":1,"249":0,"253":0,"254":0,"266":1,"267":0,"268":0,"271":0,"272":0,"273":0,"277":0,"278":0,"279":0,"280":0,"283":0,"286":0,"287":0,"289":0,"290":0,"293":0,"294":0,"299":0,"300":0,"314":1,"316":0,"318":0,"320":0,"321":0,"325":0,"326":0,"330":0,"331":0,"332":0,"335":0,"339":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/memory-data-store.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/memory-data-store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0},"b":{},"f":{"1":2,"2":1,"3":1},"fnMap":{"1":{"name":"MemoryDataStore","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":44},"end":{"line":32,"column":75}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":44},"end":{"line":40,"column":86}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":56}},"5":{"start":{"line":17,"column":0},"end":{"line":26,"column":1}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":28}},"8":{"start":{"line":32,"column":0},"end":{"line":34,"column":2}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":53}},"10":{"start":{"line":40,"column":0},"end":{"line":48,"column":2}},"11":{"start":{"line":41,"column":2},"end":{"line":47,"column":3}},"12":{"start":{"line":42,"column":4},"end":{"line":42,"column":53}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}}},"branchMap":{},"code":["'use strict';","","module.exports = MemoryDataStore;","","var DataStore = require('./index'),","    Resource  = require('./resource');","","// Inheritance","MemoryDataStore.prototype = Object.create(DataStore.prototype);","MemoryDataStore.prototype.constructor = MemoryDataStore;","","/**"," * An in-memory data store for REST resources."," * @constructor"," * @extends DataStore"," */","function MemoryDataStore() {","  DataStore.call(this);","","  /**","   * This implementation of DataStore uses an in-memory array.","   * @type {Resource[]}","   * @private","   */","  this.__resourceStore = [];","}","","/**"," * Overrides {@link DataStore#__openDataStore} to return data from an in-memory array."," * @protected"," */","MemoryDataStore.prototype.__openDataStore = function(collection, callback) {","  setImmediate(callback, null, this.__resourceStore);","};","","/**"," * Overrides {@link DataStore#__saveDataStore} to store data in an in-memory array."," * @protected"," */","MemoryDataStore.prototype.__saveDataStore = function(collection, resources, callback) {","  try {","    this.__resourceStore = Resource.parse(resources);","    setImmediate(callback);","  }","  catch (e) {","    callback(e);","  }","};",""],"l":{"3":1,"5":1,"9":1,"10":1,"17":1,"18":2,"25":2,"32":1,"33":1,"40":1,"41":1,"42":1,"43":1,"46":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/semantic-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/semantic-request.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"SemanticRequest","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}}},"2":{"name":"isCollectionRequest","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"3":{"name":"responseIsCollection","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":35}}},"4":{"name":"lastPathSegmentIsAParameter","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":54}},"3":{"start":{"line":14,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":47}},"5":{"start":{"line":34,"column":0},"end":{"line":42,"column":1}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":47}},"7":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":53}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":22}},"10":{"start":{"line":52,"column":0},"end":{"line":63,"column":1}},"11":{"start":{"line":53,"column":2},"end":{"line":53,"column":61}},"12":{"start":{"line":54,"column":2},"end":{"line":62,"column":3}},"13":{"start":{"line":55,"column":4},"end":{"line":55,"column":63}},"14":{"start":{"line":56,"column":4},"end":{"line":61,"column":5}},"15":{"start":{"line":57,"column":6},"end":{"line":57,"column":78}},"16":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"17":{"start":{"line":59,"column":8},"end":{"line":59,"column":37}},"18":{"start":{"line":85,"column":0},"end":{"line":89,"column":1}},"19":{"start":{"line":86,"column":2},"end":{"line":86,"column":56}},"20":{"start":{"line":87,"column":2},"end":{"line":87,"column":56}},"21":{"start":{"line":88,"column":2},"end":{"line":88,"column":33}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":15},"end":{"line":53,"column":35}},{"start":{"line":53,"column":39},"end":{"line":53,"column":60}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]}},"code":["'use strict';","","module.exports = SemanticRequest;","","var util             = require('../helpers/util'),","    SemanticResponse = require('./semantic-response');","","/**"," * Describes the semantics of a Swagger request."," *"," * @param {Request} req"," * @constructor"," */","function SemanticRequest(req) {","  /**","   * Indicates whether this is a \"resource path\" or a \"collection path\".","   * Resource path operate on a single REST resource, whereas collection requests operate on","   * a collection of resources.","   * @type {boolean}","   */","  this.isCollection = isCollectionRequest(req);","}","","/**"," * Determines whether the given path is a \"resource path\" or a \"collection path\"."," * Resource paths operate on a single REST resource, whereas collection paths operate on"," * a collection of resources."," *"," * NOTE: This algorithm is subject to change. Over time, it should get smarter and better at determining request types."," *"," * @param   {Request} req"," * @returns {boolean}"," */","function isCollectionRequest(req) {","  var isCollection = responseIsCollection(req);","","  if (isCollection === undefined) {","    isCollection = !lastPathSegmentIsAParameter(req);","  }","","  return isCollection;","}","","/**"," * Examines the GET or HEAD operation for the path and determines whether it is a collection response."," *"," * @param   {Request} req"," *"," * @returns {boolean|undefined}"," * True if the response schema is a collection.  False if it's not a collection.  Undefined if there is not response schema."," */","function responseIsCollection(req) {","  var getter = req.swagger.path.get || req.swagger.path.head;","  if (getter) {","    var responses = util.getResponsesBetween(getter, 200, 299);","    if (responses.length > 0) {","      var response = new SemanticResponse(responses[0].api, req.swagger.path);","      if (!response.isEmpty) {","        return response.isCollection;","      }","    }","  }","}","","/**"," * Determines whether the last path segment is a Swagger parameter."," *"," * For example, the following paths are all considered to be resource requests,"," * because their final path segment contains a parameter:"," *"," * - /users/{username}"," * - /products/{productId}/reviews/review-{reviewId}"," * - /{country}/{state}/{city}"," *"," * Conversely, the following paths are all considered to be collection requests,"," * because their final path segment is NOT a parameter:"," *"," * - /users"," * - /products/{productId}/reviews"," * - /{country}/{state}/{city}/neighborhoods/streets"," *"," * @param req"," * @returns {boolean}"," */","function lastPathSegmentIsAParameter(req) {","  var lastSlash = req.swagger.pathName.lastIndexOf('/');","  var lastParam = req.swagger.pathName.lastIndexOf('{');","  return (lastParam > lastSlash);","}",""],"l":{"3":1,"5":1,"14":1,"21":0,"34":1,"35":0,"37":0,"38":0,"41":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"85":1,"86":0,"87":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/semantic-response.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/semantic-response.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"SemanticResponse","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}}},"2":{"name":"(anonymous_2)","line":87,"loc":{"start":{"line":87,"column":34},"end":{"line":87,"column":49}}},"3":{"name":"(anonymous_3)","line":104,"loc":{"start":{"line":104,"column":44},"end":{"line":104,"column":69}}},"4":{"name":"(anonymous_4)","line":118,"loc":{"start":{"line":118,"column":41},"end":{"line":118,"column":72}}},"5":{"name":"getResourceSchemas","line":147,"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":34}}},"6":{"name":"(anonymous_6)","line":150,"loc":{"start":{"line":150,"column":35},"end":{"line":150,"column":55}}},"7":{"name":"schemasMatch","line":166,"loc":{"start":{"line":166,"column":0},"end":{"line":166,"column":52}}},"8":{"name":"(anonymous_8)","line":172,"loc":{"start":{"line":172,"column":29},"end":{"line":172,"column":53}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":47},"end":{"line":181,"column":83}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":15,"column":0},"end":{"line":79,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":40}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":42}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":34}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"8":{"start":{"line":46,"column":2},"end":{"line":46,"column":25}},"9":{"start":{"line":53,"column":2},"end":{"line":53,"column":28}},"10":{"start":{"line":63,"column":2},"end":{"line":63,"column":27}},"11":{"start":{"line":74,"column":2},"end":{"line":74,"column":21}},"12":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"13":{"start":{"line":77,"column":4},"end":{"line":77,"column":40}},"14":{"start":{"line":87,"column":0},"end":{"line":96,"column":2}},"15":{"start":{"line":88,"column":2},"end":{"line":95,"column":3}},"16":{"start":{"line":89,"column":4},"end":{"line":89,"column":21}},"17":{"start":{"line":90,"column":4},"end":{"line":90,"column":41}},"18":{"start":{"line":91,"column":4},"end":{"line":91,"column":19}},"19":{"start":{"line":94,"column":4},"end":{"line":94,"column":16}},"20":{"start":{"line":104,"column":0},"end":{"line":138,"column":2}},"21":{"start":{"line":105,"column":2},"end":{"line":105,"column":18}},"22":{"start":{"line":107,"column":2},"end":{"line":137,"column":3}},"23":{"start":{"line":109,"column":4},"end":{"line":109,"column":29}},"24":{"start":{"line":111,"column":7},"end":{"line":137,"column":3}},"25":{"start":{"line":112,"column":4},"end":{"line":112,"column":51}},"26":{"start":{"line":115,"column":4},"end":{"line":136,"column":5}},"27":{"start":{"line":118,"column":6},"end":{"line":135,"column":9}},"28":{"start":{"line":119,"column":8},"end":{"line":119,"column":28}},"29":{"start":{"line":120,"column":8},"end":{"line":123,"column":9}},"30":{"start":{"line":121,"column":10},"end":{"line":121,"column":25}},"31":{"start":{"line":122,"column":10},"end":{"line":122,"column":40}},"32":{"start":{"line":125,"column":8},"end":{"line":134,"column":9}},"33":{"start":{"line":126,"column":10},"end":{"line":133,"column":11}},"34":{"start":{"line":129,"column":12},"end":{"line":129,"column":34}},"35":{"start":{"line":130,"column":12},"end":{"line":130,"column":44}},"36":{"start":{"line":131,"column":12},"end":{"line":131,"column":40}},"37":{"start":{"line":132,"column":12},"end":{"line":132,"column":24}},"38":{"start":{"line":147,"column":0},"end":{"line":157,"column":1}},"39":{"start":{"line":148,"column":2},"end":{"line":148,"column":19}},"40":{"start":{"line":150,"column":2},"end":{"line":154,"column":5}},"41":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"42":{"start":{"line":152,"column":6},"end":{"line":152,"column":65}},"43":{"start":{"line":156,"column":2},"end":{"line":156,"column":17}},"44":{"start":{"line":166,"column":0},"end":{"line":187,"column":1}},"45":{"start":{"line":167,"column":2},"end":{"line":167,"column":27}},"46":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"47":{"start":{"line":169,"column":4},"end":{"line":169,"column":67}},"48":{"start":{"line":172,"column":2},"end":{"line":186,"column":5}},"49":{"start":{"line":173,"column":4},"end":{"line":173,"column":30}},"50":{"start":{"line":174,"column":4},"end":{"line":176,"column":5}},"51":{"start":{"line":175,"column":6},"end":{"line":175,"column":71}},"52":{"start":{"line":179,"column":4},"end":{"line":185,"column":5}},"53":{"start":{"line":181,"column":6},"end":{"line":184,"column":9}},"54":{"start":{"line":182,"column":8},"end":{"line":182,"column":63}},"55":{"start":{"line":183,"column":8},"end":{"line":183,"column":78}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":31}},{"start":{"line":20,"column":35},"end":{"line":20,"column":39}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":17},"end":{"line":26,"column":33}},{"start":{"line":26,"column":37},"end":{"line":26,"column":41}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"4":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"5":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"6":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":7},"end":{"line":111,"column":7}},{"start":{"line":111,"column":7},"end":{"line":111,"column":7}}]},"7":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":11},"end":{"line":111,"column":44}},{"start":{"line":111,"column":48},"end":{"line":111,"column":82}}]},"8":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"9":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"10":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"11":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":40}},{"start":{"line":125,"column":44},"end":{"line":125,"column":73}}]},"12":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":10},"end":{"line":126,"column":10}},{"start":{"line":126,"column":10},"end":{"line":126,"column":10}}]},"13":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"14":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"15":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"16":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"17":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":48}},{"start":{"line":179,"column":52},"end":{"line":179,"column":90}}]},"18":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":15},"end":{"line":183,"column":29}},{"start":{"line":183,"column":33},"end":{"line":183,"column":77}}]}},"code":["'use strict';","","module.exports = SemanticResponse;","","var _    = require('lodash'),","    util = require('../helpers/util');","","/**"," * Describes the semantics of a Swagger response."," *"," * @param   {object}    response    The Response object, from the Swagger API"," * @param   {object}    path        The Path object that contains the response. Used for semantic analysis."," * @constructor"," */","function SemanticResponse(response, path) {","  /**","   * The JSON schema of the response","   * @type {object|null}","   */","  this.schema = response.schema || null;","","  /**","   * The response headers, from the Swagger API","   * @type {object|null}","   */","  this.headers = response.headers || null;","","  /**","   * If true, then an empty response should be sent.","   * @type {boolean}","   */","  this.isEmpty = !response.schema;","","  /**","   * Indicates whether the response should be a single resource, or a collection.","   * @type {boolean}","   */","  this.isCollection = false;","","  /**","   * Indicates whether the response schema is a wrapper around the actual resource data.","   * It's common for RESTful APIs to include a response wrapper with additional metadata,","   * and one of the properties of the wrapper is the actual resource data.","   * @type {boolean}","   */","  this.isWrapped = false;","","  /**","   * If the response is wrapped, then this is the name of the wrapper property that","   * contains the actual resource data.","   * @type {string}","   */","  this.wrapperProperty = '';","","  /**","   * The date/time that the response data was last modified.","   * This is used to set the Last-Modified HTTP header (if defined in the Swagger API)","   *","   * Each mock implementation sets this to the appropriate value.","   *","   * @type {Date}","   */","  this.lastModified = null;","","  /**","   * The location (URL) of the REST resource.","   * This is used to set the Location HTTP header (if defined in the Swagger API)","   *","   * Some mocks implementations set this value.  If left blank, then the Location header","   * will be set to the current path.","   *","   * @type {string}","   */","  this.location = '';","","  if (!this.isEmpty) {","    this.setWrapperInfo(response, path);","  }","}","","/**"," * Wraps the given data in the appropriate wrapper object, if applicable."," *"," * @param   {*}     data    The data to (possibly) be wrapped"," * @returns {*}             The (possibly) wrapped data"," */","SemanticResponse.prototype.wrap = function(data) {","  if (this.isWrapped) {","    var wrapper = {};","    wrapper[this.wrapperProperty] = data;","    return wrapper;","  }","  else {","    return data;","  }","};","","/**"," * Determines whether the response schema is a wrapper object, and sets the corresponding properties."," *"," * @param   {object}    response    The Response object, from the Swagger API"," * @param   {object}    path        The Path object that contains the response. Used for semantic analysis."," */","SemanticResponse.prototype.setWrapperInfo = function(response, path) {","  var self = this;","","  if (response.schema.type === 'array') {","    // Assume that it's a collection.  It's also NOT wrapped","    self.isCollection = true;","  }","  else if (response.schema.type === 'object' || response.schema.type === undefined) {","    var resourceSchemas = getResourceSchemas(path);","","    // If the response schema matches one of the resource schemas, then it's NOT wrapped","    if (!schemasMatch(resourceSchemas, response.schema)) {","      // The response schema doesn't match any of the resource schemas,","      // so check each of its properties to see if any of them match","      _.some(response.schema.properties, function(propSchema, propName) {","        var isArray = false;","        if (propSchema.type === 'array') {","          isArray = true;","          propSchema = propSchema.items;","        }","","        if (propSchema.type === 'object' || propSchema.type === undefined) {","          if (schemasMatch(resourceSchemas, propSchema)) {","            // The response schema is a wrapper object,","            // and this property contains the actual resource data","            self.isWrapped = true;","            self.wrapperProperty = propName;","            self.isCollection = isArray;","            return true;","          }","        }","      });","    }","  }","};","","/**"," * Returns the JSON schemas for the given path's PUT, POST, and PATCH operations."," * Usually these operations are not wrapped, so we can assume that they are the actual resource schema."," *"," * @param   {object}    path    A Path object, from the Swagger API."," * @returns {object[]}          An array of JSON schema objects"," */","function getResourceSchemas(path) {","  var schemas = [];","","  ['post', 'put', 'patch'].forEach(function(operation) {","    if (path[operation]) {","      schemas.push(util.getRequestSchema(path, path[operation]));","    }","  });","","  return schemas;","}","","/**"," * Determines whether the given JSON schema matches any of the given JSON schemas."," *"," * @param   {object[]}  schemasToMatch  An array of JSON schema objects"," * @param   {object}    schemaToTest    The JSON schema object to test against the other schemas"," * @returns {boolean}                   Returns true if the schema matches any of the other schemas"," */","function schemasMatch(schemasToMatch, schemaToTest) {","  var propertiesToTest = 0;","  if (schemaToTest.properties) {","    propertiesToTest = Object.keys(schemaToTest.properties).length;","  }","","  return schemasToMatch.some(function(schemaToMatch) {","    var propertiesToMatch = 0;","    if (schemaToMatch.properties) {","      propertiesToMatch = Object.keys(schemaToMatch.properties).length;","    }","","    // Make sure both schemas are the same type and have the same number of properties","    if (schemaToTest.type === schemaToMatch.type && propertiesToTest === propertiesToMatch) {","      // Compare each property in both schemas","      return _.every(schemaToMatch.properties, function(propertyToMatch, propName) {","        var propertyToTest = schemaToTest.properties[propName];","        return propertyToTest && propertyToMatch.type === propertyToTest.type;","      });","    }","  });","}",""],"l":{"3":1,"5":1,"15":1,"20":0,"26":0,"32":0,"38":0,"46":0,"53":0,"63":0,"74":0,"76":0,"77":0,"87":1,"88":0,"89":0,"90":0,"91":0,"94":0,"104":1,"105":0,"107":0,"109":0,"111":0,"112":0,"115":0,"118":0,"119":0,"120":0,"121":0,"122":0,"125":0,"126":0,"129":0,"130":0,"131":0,"132":0,"147":1,"148":0,"150":0,"151":0,"152":0,"156":0,"166":1,"167":0,"168":0,"169":0,"172":0,"173":0,"174":0,"175":0,"179":0,"181":0,"182":0,"183":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/edit-resource.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/edit-resource.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"mergeResource","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":50}}},"2":{"name":"overwriteResource","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":54}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":29},"end":{"line":48,"column":43}}},"4":{"name":"deleteResource","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":51}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":29},"end":{"line":73,"column":60}}},"6":{"name":"createResource","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":29}}},"7":{"name":"sendResponse","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":49}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":9},"end":{"line":108,"column":33}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":51},"end":{"line":120,"column":77}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":42}},"3":{"start":{"line":25,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":37}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":55}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"7":{"start":{"line":44,"column":0},"end":{"line":58,"column":1}},"8":{"start":{"line":45,"column":2},"end":{"line":45,"column":37}},"9":{"start":{"line":48,"column":2},"end":{"line":57,"column":5}},"10":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"11":{"start":{"line":50,"column":6},"end":{"line":50,"column":16}},"12":{"start":{"line":54,"column":6},"end":{"line":54,"column":59}},"13":{"start":{"line":55,"column":6},"end":{"line":55,"column":72}},"14":{"start":{"line":69,"column":0},"end":{"line":77,"column":1}},"15":{"start":{"line":70,"column":2},"end":{"line":70,"column":37}},"16":{"start":{"line":73,"column":2},"end":{"line":76,"column":5}},"17":{"start":{"line":75,"column":4},"end":{"line":75,"column":78}},"18":{"start":{"line":85,"column":0},"end":{"line":97,"column":1}},"19":{"start":{"line":86,"column":2},"end":{"line":86,"column":40}},"20":{"start":{"line":88,"column":2},"end":{"line":94,"column":3}},"21":{"start":{"line":90,"column":4},"end":{"line":90,"column":54}},"22":{"start":{"line":93,"column":4},"end":{"line":93,"column":29}},"23":{"start":{"line":96,"column":2},"end":{"line":96,"column":18}},"24":{"start":{"line":107,"column":0},"end":{"line":131,"column":1}},"25":{"start":{"line":108,"column":2},"end":{"line":130,"column":4}},"26":{"start":{"line":109,"column":4},"end":{"line":112,"column":5}},"27":{"start":{"line":110,"column":6},"end":{"line":110,"column":80}},"28":{"start":{"line":111,"column":6},"end":{"line":111,"column":53}},"29":{"start":{"line":115,"column":4},"end":{"line":129,"column":5}},"30":{"start":{"line":116,"column":6},"end":{"line":116,"column":16}},"31":{"start":{"line":118,"column":9},"end":{"line":129,"column":5}},"32":{"start":{"line":120,"column":6},"end":{"line":123,"column":9}},"33":{"start":{"line":121,"column":8},"end":{"line":121,"column":47}},"34":{"start":{"line":122,"column":8},"end":{"line":122,"column":18}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":31}},"36":{"start":{"line":128,"column":6},"end":{"line":128,"column":13}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"2":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":49},"end":{"line":75,"column":64}},{"start":{"line":75,"column":68},"end":{"line":75,"column":76}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"5":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"6":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":11}},{"start":{"line":115,"column":15},"end":{"line":115,"column":23}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":9},"end":{"line":118,"column":9}},{"start":{"line":118,"column":9},"end":{"line":118,"column":9}}]}},"code":["'use strict';","","module.exports = {","  POST: mergeResource,","  PATCH: mergeResource,","  PUT: overwriteResource,","  DELETE: deleteResource","};","","var _        = require('lodash'),","    Resource = require('../data-store/resource'),","    util     = require('../helpers/util');","","/**"," * Creates or updates the REST resource at the URL."," *"," * If the resource already exists, then the new data is merged with the existing data."," * To completely overwrite the existing data, use PUT instead of POST or PATCH."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function mergeResource(req, res, next, dataStore) {","  var resource = createResource(req);","","  // Save/Update the resource","  util.debug('Saving data at %s', resource.toString());","  dataStore.save(resource, sendResponse(req, res, next, dataStore));","}","","/**"," * Creates or overwrites the REST resource at the URL."," *"," * If the resource already exists, it is overwritten."," * To merge with the existing data, use POST or PATCH instead of PUT."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function overwriteResource(req, res, next, dataStore) {","  var resource = createResource(req);","","  // Delete the existing resource, if any","  dataStore.delete(resource, function(err) {","    if (err) {","      next(err);","    }","    else {","      // Save the new resource","      util.debug('Saving data at %s', resource.toString());","      dataStore.save(resource, sendResponse(req, res, next, dataStore));","    }","  });","}","","/**"," * Deletes the REST resource at the URL."," * If the resource does not exist, then nothing happens.  No error is thrown."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function deleteResource(req, res, next, dataStore) { // jshint ignore:line","  var resource = createResource(req);","","  // Delete the resource","  dataStore.delete(resource, function(err, deletedResource) {","    // Respond with the deleted resource, if possible; otherwise, use the empty resource we just created.","    sendResponse(req, res, next, dataStore)(err, deletedResource || resource);","  });","}","","/**"," * Creates a {@link Resource} objects from the request's data."," *"," * @param   {Request}   req"," * @returns {Resource}"," */","function createResource(req) {","  var resource = new Resource(req.path);","","  if (!_.isEmpty(req.files)) {","    // Save file data too","    resource.data = _.extend({}, req.body, req.files);","  }","  else {","    resource.data = req.body;","  }","","  return resource;","}","","/**"," * Returns a function that sends the correct response for the operation."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function sendResponse(req, res, next, dataStore) {","  return function(err, resource) {","    if (!err) {","      util.debug('%s successfully created/edited/deleted', resource.toString());","      res.swagger.lastModified = resource.modifiedOn;","    }","","    // Set the response body (unless it's already been set by other middleware)","    if (err || res.body) {","      next(err);","    }","    else if (res.swagger.isCollection) {","      // Response body is the entire collection","      dataStore.getCollection(resource.collection, function(err, collection) {","        res.body = _.pluck(collection, 'data');","        next(err);","      });","    }","    else {","      // Response body is the resource that was created/update/deleted","      res.body = resource.data;","      next();","    }","  };","}","",""],"l":{"3":1,"10":1,"25":1,"26":0,"29":0,"30":0,"44":1,"45":0,"48":0,"49":0,"50":0,"54":0,"55":0,"69":1,"70":0,"73":0,"75":0,"85":1,"86":0,"88":0,"90":0,"93":0,"96":0,"107":1,"108":0,"109":0,"110":0,"111":0,"115":0,"116":0,"118":0,"120":0,"121":0,"122":0,"127":0,"128":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/query-resource.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/query-resource.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"queryResource","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":50}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":26},"end":{"line":24,"column":48}}},"3":{"name":"getDefaultValue","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":9,"column":0},"end":{"line":10,"column":49}},"3":{"start":{"line":21,"column":0},"end":{"line":55,"column":1}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":40}},"5":{"start":{"line":24,"column":2},"end":{"line":54,"column":5}},"6":{"start":{"line":25,"column":4},"end":{"line":53,"column":5}},"7":{"start":{"line":26,"column":6},"end":{"line":26,"column":16}},"8":{"start":{"line":28,"column":9},"end":{"line":53,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":46}},"10":{"start":{"line":31,"column":6},"end":{"line":45,"column":7}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":78}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":70}},"13":{"start":{"line":34,"column":8},"end":{"line":34,"column":18}},"14":{"start":{"line":38,"column":8},"end":{"line":41,"column":10}},"15":{"start":{"line":42,"column":8},"end":{"line":42,"column":46}},"16":{"start":{"line":43,"column":8},"end":{"line":43,"column":32}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},"18":{"start":{"line":48,"column":6},"end":{"line":48,"column":51}},"19":{"start":{"line":51,"column":6},"end":{"line":51,"column":41}},"20":{"start":{"line":52,"column":6},"end":{"line":52,"column":13}},"21":{"start":{"line":60,"column":0},"end":{"line":67,"column":1}},"22":{"start":{"line":61,"column":2},"end":{"line":66,"column":3}},"23":{"start":{"line":62,"column":4},"end":{"line":62,"column":20}},"24":{"start":{"line":64,"column":7},"end":{"line":66,"column":3}},"25":{"start":{"line":65,"column":4},"end":{"line":65,"column":68}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":9}},{"start":{"line":28,"column":9},"end":{"line":28,"column":9}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":17},"end":{"line":51,"column":25}},{"start":{"line":51,"column":29},"end":{"line":51,"column":40}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":7},"end":{"line":64,"column":7}},{"start":{"line":64,"column":7},"end":{"line":64,"column":7}}]},"7":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":11},"end":{"line":65,"column":37}},{"start":{"line":65,"column":41},"end":{"line":65,"column":67}}]}},"code":["'use strict';","","module.exports = {","  GET: queryResource,","  HEAD: queryResource,","  OPTIONS: queryResource","};","","var util     = require('../helpers/util'),","    Resource = require('../data-store/resource');","","/**"," * Returns the REST resource at the URL."," * If there's no resource that matches the URL, then a 404 error is returned."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function queryResource(req, res, next, dataStore) {","  var resource = new Resource(req.path);","","  dataStore.get(resource, function(err, result) {","    if (err) {","      next(err);","    }","    else if (!result) {","      var defaultValue = getDefaultValue(res);","","      if (defaultValue === undefined) {","        util.debug('ERROR! 404 - %s %s does not exist', req.method, req.path);","        err = util.newError(404, '%s Not Found', resource.toString());","        next(err);","      }","      else {","        // There' a default value, so use it instead of sending a 404","        util.debug(","          '%s %s does not exist, but the response schema defines a fallback value.  So, using the fallback value',","          req.method, req.path","        );","        res.swagger.lastModified = new Date();","        res.body = defaultValue;","        next();","      }","    }","    else {","      res.swagger.lastModified = result.modifiedOn;","","      // Set the response body (unless it's already been set by other middleware)","      res.body = res.body || result.data;","      next();","    }","  });","}","","/**"," * Returns the default/example value for this request."," */","function getDefaultValue(res) {","  if (res.body) {","    return res.body;","  }","  else if (res.swagger.schema) {","    return res.swagger.schema.default || res.swagger.schema.example;","  }","}",""],"l":{"3":1,"9":1,"21":1,"22":0,"24":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"38":0,"42":0,"43":0,"44":0,"48":0,"51":0,"52":0,"60":1,"61":0,"62":0,"64":0,"65":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/edit-collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/edit-collection.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"mergeCollection","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}}},"2":{"name":"overwriteCollection","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":56}}},"3":{"name":"(anonymous_3)","line":77,"loc":{"start":{"line":77,"column":30},"end":{"line":77,"column":44}}},"4":{"name":"createResources","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":30}}},"5":{"name":"getResourceName","line":146,"loc":{"start":{"line":146,"column":0},"end":{"line":146,"column":39}}},"6":{"name":"getResourceNameByValue","line":182,"loc":{"start":{"line":182,"column":0},"end":{"line":182,"column":46}}},"7":{"name":"getResourceNameByName","line":200,"loc":{"start":{"line":200,"column":0},"end":{"line":200,"column":45}}},"8":{"name":"(anonymous_8)","line":214,"loc":{"start":{"line":214,"column":41},"end":{"line":214,"column":60}}},"9":{"name":"(anonymous_9)","line":219,"loc":{"start":{"line":219,"column":39},"end":{"line":219,"column":67}}},"10":{"name":"getResourceNameByRequired","line":255,"loc":{"start":{"line":255,"column":0},"end":{"line":255,"column":49}}},"11":{"name":"(anonymous_11)","line":264,"loc":{"start":{"line":264,"column":43},"end":{"line":264,"column":62}}},"12":{"name":"getResourceNameByFile","line":284,"loc":{"start":{"line":284,"column":0},"end":{"line":284,"column":45}}},"13":{"name":"isValidResourceName","line":313,"loc":{"start":{"line":313,"column":0},"end":{"line":313,"column":39}}},"14":{"name":"sendResponse","line":326,"loc":{"start":{"line":326,"column":0},"end":{"line":326,"column":49}}},"15":{"name":"(anonymous_15)","line":327,"loc":{"start":{"line":327,"column":9},"end":{"line":327,"column":34}}},"16":{"name":"(anonymous_16)","line":355,"loc":{"start":{"line":355,"column":40},"end":{"line":355,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":51}},"3":{"start":{"line":34,"column":0},"end":{"line":46,"column":1}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":28}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":39}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":84}},"7":{"start":{"line":44,"column":2},"end":{"line":44,"column":56}},"8":{"start":{"line":45,"column":2},"end":{"line":45,"column":69}},"9":{"start":{"line":67,"column":0},"end":{"line":87,"column":1}},"10":{"start":{"line":68,"column":2},"end":{"line":68,"column":28}},"11":{"start":{"line":69,"column":2},"end":{"line":69,"column":39}},"12":{"start":{"line":74,"column":2},"end":{"line":74,"column":84}},"13":{"start":{"line":77,"column":2},"end":{"line":86,"column":5}},"14":{"start":{"line":78,"column":4},"end":{"line":85,"column":5}},"15":{"start":{"line":79,"column":6},"end":{"line":79,"column":16}},"16":{"start":{"line":83,"column":6},"end":{"line":83,"column":60}},"17":{"start":{"line":84,"column":6},"end":{"line":84,"column":73}},"18":{"start":{"line":95,"column":0},"end":{"line":137,"column":1}},"19":{"start":{"line":96,"column":2},"end":{"line":98,"column":81}},"20":{"start":{"line":100,"column":2},"end":{"line":108,"column":3}},"21":{"start":{"line":101,"column":4},"end":{"line":104,"column":5}},"22":{"start":{"line":103,"column":6},"end":{"line":103,"column":47}},"23":{"start":{"line":107,"column":4},"end":{"line":107,"column":18}},"24":{"start":{"line":111,"column":2},"end":{"line":134,"column":3}},"25":{"start":{"line":112,"column":4},"end":{"line":112,"column":23}},"26":{"start":{"line":115,"column":4},"end":{"line":115,"column":49}},"27":{"start":{"line":117,"column":4},"end":{"line":124,"column":5}},"28":{"start":{"line":119,"column":6},"end":{"line":119,"column":24}},"29":{"start":{"line":120,"column":6},"end":{"line":123,"column":7}},"30":{"start":{"line":121,"column":8},"end":{"line":121,"column":45}},"31":{"start":{"line":122,"column":8},"end":{"line":122,"column":23}},"32":{"start":{"line":127,"column":4},"end":{"line":127,"column":81}},"33":{"start":{"line":128,"column":4},"end":{"line":128,"column":65}},"34":{"start":{"line":129,"column":4},"end":{"line":129,"column":52}},"35":{"start":{"line":132,"column":4},"end":{"line":132,"column":62}},"36":{"start":{"line":133,"column":4},"end":{"line":133,"column":29}},"37":{"start":{"line":136,"column":2},"end":{"line":136,"column":19}},"38":{"start":{"line":146,"column":0},"end":{"line":172,"column":1}},"39":{"start":{"line":148,"column":2},"end":{"line":152,"column":44}},"40":{"start":{"line":154,"column":2},"end":{"line":171,"column":3}},"41":{"start":{"line":155,"column":4},"end":{"line":155,"column":112}},"42":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"43":{"start":{"line":158,"column":6},"end":{"line":158,"column":64}},"44":{"start":{"line":159,"column":6},"end":{"line":159,"column":98}},"45":{"start":{"line":162,"column":4},"end":{"line":162,"column":20}},"46":{"start":{"line":165,"column":4},"end":{"line":165,"column":111}},"47":{"start":{"line":166,"column":4},"end":{"line":170,"column":6}},"48":{"start":{"line":182,"column":0},"end":{"line":191,"column":1}},"49":{"start":{"line":183,"column":2},"end":{"line":190,"column":3}},"50":{"start":{"line":185,"column":4},"end":{"line":189,"column":6}},"51":{"start":{"line":200,"column":0},"end":{"line":245,"column":1}},"52":{"start":{"line":202,"column":2},"end":{"line":208,"column":4}},"53":{"start":{"line":211,"column":2},"end":{"line":211,"column":67}},"54":{"start":{"line":214,"column":2},"end":{"line":214,"column":96}},"55":{"start":{"line":214,"column":62},"end":{"line":214,"column":92}},"56":{"start":{"line":218,"column":2},"end":{"line":218,"column":97}},"57":{"start":{"line":219,"column":2},"end":{"line":242,"column":5}},"58":{"start":{"line":220,"column":4},"end":{"line":220,"column":62}},"59":{"start":{"line":221,"column":4},"end":{"line":241,"column":5}},"60":{"start":{"line":223,"column":6},"end":{"line":223,"column":39}},"61":{"start":{"line":224,"column":6},"end":{"line":224,"column":62}},"62":{"start":{"line":226,"column":6},"end":{"line":237,"column":7}},"63":{"start":{"line":227,"column":8},"end":{"line":227,"column":59}},"64":{"start":{"line":229,"column":11},"end":{"line":237,"column":7}},"65":{"start":{"line":230,"column":8},"end":{"line":233,"column":10}},"66":{"start":{"line":236,"column":8},"end":{"line":236,"column":59}},"67":{"start":{"line":240,"column":6},"end":{"line":240,"column":43}},"68":{"start":{"line":244,"column":2},"end":{"line":244,"column":43}},"69":{"start":{"line":255,"column":0},"end":{"line":274,"column":1}},"70":{"start":{"line":256,"column":2},"end":{"line":262,"column":4}},"71":{"start":{"line":264,"column":2},"end":{"line":271,"column":5}},"72":{"start":{"line":265,"column":4},"end":{"line":265,"column":29}},"73":{"start":{"line":266,"column":4},"end":{"line":266,"column":50}},"74":{"start":{"line":267,"column":4},"end":{"line":267,"column":36}},"75":{"start":{"line":270,"column":4},"end":{"line":270,"column":41}},"76":{"start":{"line":273,"column":2},"end":{"line":273,"column":43}},"77":{"start":{"line":284,"column":0},"end":{"line":303,"column":1}},"78":{"start":{"line":286,"column":2},"end":{"line":286,"column":57}},"79":{"start":{"line":289,"column":2},"end":{"line":302,"column":3}},"80":{"start":{"line":290,"column":4},"end":{"line":290,"column":35}},"81":{"start":{"line":291,"column":4},"end":{"line":301,"column":5}},"82":{"start":{"line":292,"column":6},"end":{"line":300,"column":8}},"83":{"start":{"line":313,"column":0},"end":{"line":316,"column":1}},"84":{"start":{"line":314,"column":2},"end":{"line":314,"column":62}},"85":{"start":{"line":315,"column":2},"end":{"line":315,"column":75}},"86":{"start":{"line":326,"column":0},"end":{"line":361,"column":1}},"87":{"start":{"line":327,"column":2},"end":{"line":360,"column":4}},"88":{"start":{"line":328,"column":4},"end":{"line":342,"column":5}},"89":{"start":{"line":329,"column":6},"end":{"line":329,"column":66}},"90":{"start":{"line":331,"column":6},"end":{"line":338,"column":7}},"91":{"start":{"line":333,"column":8},"end":{"line":333,"column":77}},"92":{"start":{"line":337,"column":8},"end":{"line":337,"column":46}},"93":{"start":{"line":341,"column":6},"end":{"line":341,"column":45}},"94":{"start":{"line":345,"column":4},"end":{"line":359,"column":5}},"95":{"start":{"line":346,"column":6},"end":{"line":346,"column":16}},"96":{"start":{"line":348,"column":9},"end":{"line":359,"column":5}},"97":{"start":{"line":350,"column":6},"end":{"line":350,"column":36}},"98":{"start":{"line":351,"column":6},"end":{"line":351,"column":13}},"99":{"start":{"line":355,"column":6},"end":{"line":358,"column":9}},"100":{"start":{"line":356,"column":8},"end":{"line":356,"column":47}},"101":{"start":{"line":357,"column":8},"end":{"line":357,"column":18}}},"branchMap":{"1":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":47},"end":{"line":41,"column":57}},{"start":{"line":41,"column":60},"end":{"line":41,"column":83}}]},"2":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":47},"end":{"line":74,"column":57}},{"start":{"line":74,"column":60},"end":{"line":74,"column":83}}]},"3":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"4":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"5":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"7":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":13},"end":{"line":119,"column":17}},{"start":{"line":119,"column":21},"end":{"line":119,"column":23}}]},"8":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"9":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":44}},{"start":{"line":150,"column":8},"end":{"line":150,"column":43}},{"start":{"line":151,"column":8},"end":{"line":151,"column":47}},{"start":{"line":152,"column":8},"end":{"line":152,"column":43}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"11":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"12":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"13":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":30}},{"start":{"line":183,"column":34},"end":{"line":183,"column":59}}]},"14":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"15":{"line":224,"type":"cond-expr","locations":[{"start":{"line":224,"column":30},"end":{"line":224,"column":49}},{"start":{"line":224,"column":52},"end":{"line":224,"column":61}}]},"16":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"17":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":11},"end":{"line":229,"column":11}},{"start":{"line":229,"column":11},"end":{"line":229,"column":11}}]},"18":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":22},"end":{"line":244,"column":30}},{"start":{"line":244,"column":33},"end":{"line":244,"column":42}}]},"19":{"line":273,"type":"cond-expr","locations":[{"start":{"line":273,"column":22},"end":{"line":273,"column":30}},{"start":{"line":273,"column":33},"end":{"line":273,"column":42}}]},"20":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"21":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"22":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":12}},{"start":{"line":291,"column":17},"end":{"line":291,"column":34}},{"start":{"line":291,"column":38},"end":{"line":291,"column":47}}]},"23":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":15},"end":{"line":299,"column":32}},{"start":{"line":299,"column":36},"end":{"line":299,"column":60}}]},"24":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"25":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":6},"end":{"line":331,"column":6}},{"start":{"line":331,"column":6},"end":{"line":331,"column":6}}]},"26":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"27":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":8},"end":{"line":345,"column":11}},{"start":{"line":345,"column":15},"end":{"line":345,"column":23}}]},"28":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":9},"end":{"line":348,"column":9}},{"start":{"line":348,"column":9},"end":{"line":348,"column":9}}]}},"code":["'use strict';","","module.exports = {","  POST: mergeCollection,","  PATCH: mergeCollection,","  PUT: overwriteCollection","};","","var _          = require('lodash'),","    path       = require('path'),","    util       = require('../helpers/util'),","    Resource   = require('../data-store/resource'),","    JsonSchema = require('../helpers/json-schema');","","/**"," * Adds one or more REST resources to the collection, or updates them if they already exist."," * A unique URL is generated for each new resource, based on the schema definition in the Swagger API,"," * and this URL is used to determine whether a given resource is being created or updated."," *"," * For example, if you POST the data {id: 123, name: 'John Doe'} to /api/users,"," * then the \"id\" property will be used to construct the new REST URL: /api/users/123"," *"," * Similarly, if you POST the data {name: 'John Doe', age: 42} to /api/users,"," * then the \"name\" property will be used to construct the new URL: /api/users/John%20Doe"," *"," * If the data doesn't contain any properties that seem like unique IDs, then a unique ID is generated,"," * which means new resources will always be created, and never updated."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function mergeCollection(req, res, next, dataStore) {","  var collection = req.path;","  var resources = createResources(req);","","  // Set the \"Location\" HTTP header.","  // If the operation allows saving multiple resources, then use the collection path.","  // If the operation only saves a single resource, then use the resource's path.","  res.swagger.location = _.isArray(req.body) ? collection : resources[0].toString();","","  // Save/Update the resources","  util.debug('Saving data at %s', res.swagger.location);","  dataStore.save(resources, sendResponse(req, res, next, dataStore));","}","","/**"," * Adds one or more REST resources to the collection, or overwrites them if they already exist."," * A unique URL is generated for each new resource, based on the schema definition in the Swagger API,"," * and this URL is used to determine whether a given resource is being created or overwritten."," *"," * For example, if you POST the data {id: 123, name: 'John Doe'} to /api/users,"," * then the \"id\" property will be used to construct the new REST URL: /api/users/123"," *"," * Similarly, if you POST the data {name: 'John Doe', age: 42} to /api/users,"," * then the \"name\" property will be used to construct the new URL: /api/users/John%20Doe"," *"," * If the data doesn't contain any properties that seem like unique IDs, then a unique ID is generated,"," * which means new resources will always be created, and never overwritten."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function overwriteCollection(req, res, next, dataStore) {","  var collection = req.path;","  var resources = createResources(req);","","  // Set the \"Location\" HTTP header.","  // If the operation allows saving multiple resources, then use the collection path.","  // If the operation only saves a single resource, then use the resource's path.","  res.swagger.location = _.isArray(req.body) ? collection : resources[0].toString();","","  // Delete the existing resources","  dataStore.delete(resources, function(err) {","    if (err) {","      next(err);","    }","    else {","      // Save the new resources","      util.debug('Saving data at %s', res.swagger.location);","      dataStore.save(resources, sendResponse(req, res, next, dataStore));","    }","  });","}","","/**"," * Creates {@link Resource} objects for each resource in the request"," *"," * @param   {Request}   req"," * @returns {Resource[]}"," */","function createResources(req) {","  var resources = [],","      body      = req.body,","      schema    = util.getRequestSchema(req.swagger.path, req.swagger.operation);","","  if (!_.isArray(body)) {","    if (!_.isEmpty(req.files)) {","      // Save file data too","      body = _.extend({}, req.body, req.files);","    }","","    // Normalize to an array","    body = [body];","  }","","  // Create a REST resource for each item in the array","  for (var i = 0; i < body.length; i++) {","    var data = body[i];","","    // Determine the resource's \"Name\" property","    var propInfo = getResourceName(data, schema);","","    if (propInfo.name) {","      // Update the data, so the new name is saved with the resource data","      data = data || {};","      if (data[propInfo.name] === undefined) {","        data[propInfo.name] = propInfo.value;","        body[i] = data;","      }","    }","","    // Create a resource name that is a safe URL string (2000 character max)","    var resourceName = new JsonSchema(propInfo.schema).serialize(propInfo.value);","    resourceName = _(resourceName).toString().substring(0, 2000);","    resourceName = encodeURIComponent(resourceName);","","    // Create a REST resource","    var resource = new Resource(req.path, resourceName, data);","    resources.push(resource);","  }","","  return resources;","}","","/**"," * Returns the property that is the REST resource's \"unique\" name."," *"," * @param   {*}         data        The parsed resource data."," * @param   {object}    schema      The JSON schema for the data."," * @returns {PropertyInfo}          The resource's name."," */","function getResourceName(data, schema) {","  // Try to find the \"name\" property using several different methods","  var propInfo =","        getResourceNameByValue(data, schema) ||","        getResourceNameByName(data, schema) ||","        getResourceNameByRequired(data, schema) ||","        getResourceNameByFile(data, schema);","","  if (propInfo) {","    util.debug('The \"%s\" property (%j) appears to be the REST resource\\'s name', propInfo.name, propInfo.value);","","    if (propInfo.value === undefined) {","      propInfo.value = new JsonSchema(propInfo.schema).sample();","      util.debug('Generated new value (%j) for the \"%s\" property', propInfo.value, propInfo.name);","    }","","    return propInfo;","  }","  else {","    util.debug('Unable to determine the unique name for the REST resource. Generating a unique value instead');","    return {","      name: '',","      schema: {type: 'string'},","      value: _.uniqueId()","    };","  }","}","","/**"," * If the REST resource is a simple value (number, string, date, etc.),"," * then the value is returned as the resource's name."," *"," * @param   {*}         data        The parsed resource data."," * @param   {object}    schema      The JSON schema for the data."," * @returns {PropertyInfo|undefined}"," */","function getResourceNameByValue(data, schema) {","  if (schema.type !== 'object' && schema.type !== undefined) {","    // The resource is a simple value, so just return the raw data as the \"name\"","    return {","      name: '',","      schema: schema,","      value: data","    };","  }","}","","/**"," * Tries to find the REST resource's name by searching for commonly-used property names like \"id\", \"key\", etc."," *"," * @param   {*}         data        The parsed resource data."," * @param   {object}    schema      The JSON schema for the data."," * @returns {PropertyInfo|undefined}"," */","function getResourceNameByName(data, schema) {","  /** @name PropertyInfo */","  var propInfo = {","    name: '',","    schema: {","      type: ''","    },","    value: undefined","  };","","  // Get a list of all existing and possible properties of the resource","  var propNames = _.union(_.keys(schema.properties), _.keys(data));","","  // Lowercase property names, for comparison","  var lowercasePropNames = propNames.map(function(propName) { return propName.toLowerCase(); });","","  // These properties are assumed to be unique IDs.","  // If we find any of them in the schema, then use it as the REST resource's name.","  var nameProperties = ['id', 'key', 'slug', 'code', 'number', 'num', 'nbr', 'username', 'name'];","  var foundMatch = nameProperties.some(function(lowercasePropName) {","    var index = lowercasePropNames.indexOf(lowercasePropName);","    if (index >= 0) {","      // We found a property that appears to be the resource's name. Get its info.","      propInfo.name = propNames[index];","      propInfo.value = data ? data[propInfo.name] : undefined;","","      if (schema.properties[propInfo.name]) {","        propInfo.schema = schema.properties[propInfo.name];","      }","      else if (_.isDate(data[propInfo.name])) {","        propInfo.schema = {","          type: 'string',","          format: 'date-time'","        };","      }","      else {","        propInfo.schema.type = typeof(data[propInfo.name]);","      }","","      // If the property is valid, then we're done","      return isValidResourceName(propInfo);","    }","  });","","  return foundMatch ? propInfo : undefined;","}","","/**"," * Tries to find the REST resource's name using the required properties in the JSON schema."," * We're assuming that if the resource has a name, it'll be a required property."," *"," * @param   {*}         data        The parsed resource data."," * @param   {object}    schema      The JSON schema for the data."," * @returns {PropertyInfo|undefined}"," */","function getResourceNameByRequired(data, schema) {","  var propInfo = {","    name: '',","    schema: {","      type: ''","    },","    value: undefined","  };","","  var foundMatch = _.some(schema.required, function(propName) {","    propInfo.name = propName;","    propInfo.schema = schema.properties[propName];","    propInfo.value = data[propName];","","    // If the property is valid, then we're done","    return isValidResourceName(propInfo);","  });","","  return foundMatch ? propInfo : undefined;","}","","/**"," * If the REST resource contains a file (e.g. multipart/form-data or application/x-www-form-urlencoded),"," * then we'll use the file name as the resource name."," *"," * @param   {*}         data        The parsed resource data."," * @param   {object}    schema      The JSON schema for the data."," * @returns {PropertyInfo|undefined}"," */","function getResourceNameByFile(data, schema) {","  // Find all file parameters","  var files = _.where(schema.properties, {type: 'file'});","","  // If there is exactly ONE file parameter, then we'll use its file name","  if (files.length === 1) {","    var file = data[files[0].name];","    if (file && (file.originalname || file.path)) {","      return {","        name: file.fieldname,","        schema: {","          type: 'string'","        },","","        // Use the original file name, if provided. Otherwise, fallback to the server-side file name","        value: file.originalname || path.basename(file.path)","      };","    }","  }","}","","/**"," * Determines whether the given property is a valid REST resource name."," * Only simple types (strings, numbers, booleans) are used as keys."," * Complex types (arrays, objects, files) are ignored."," *"," * @param   {PropertyInfo}    propInfo"," * @returns {boolean}"," */","function isValidResourceName(propInfo) {","  var validTypes = ['string', 'number', 'integer', 'boolean'];","  return validTypes.indexOf(propInfo.schema.type.toLocaleLowerCase()) >= 0;","}","","/**"," * Returns a function that sends the correct response for the operation."," *"," * @param   {Request}       req"," * @param   {Response}      res"," * @param   {function}      next"," * @param   {DataStore}     dataStore"," */","function sendResponse(req, res, next, dataStore) {","  return function(err, resources) {","    if (!err) {","      util.debug('%s successfully updated', res.swagger.location);","","      if (resources.length > 0) {","        // Determine the max \"modifiedOn\" date of the resources","        res.swagger.lastModified = _.max(resources, 'modifiedOn').modifiedOn;","      }","      else {","        // There is no data, so use the current date/time as the \"last-modified\" header","        res.swagger.lastModified = new Date();","      }","","      // Extract the \"data\" of each Resource","      resources = _.pluck(resources, 'data');","    }","","    // Set the response body (unless it's already been set by other middleware)","    if (err || res.body) {","      next(err);","    }","    else if (!res.swagger.isCollection) {","      // Response body is a single value, so only return the first item that was edited","      res.body = _.first(resources);","      next();","    }","    else {","      // Response body is the entire collection (new, edited, and old)","      dataStore.getCollection(req.path, function(err, collection) {","        res.body = _.pluck(collection, 'data');","        next(err);","      });","    }","  };","}","",""],"l":{"3":1,"9":1,"34":1,"35":0,"36":0,"41":0,"44":0,"45":0,"67":1,"68":0,"69":0,"74":0,"77":0,"78":0,"79":0,"83":0,"84":0,"95":1,"96":0,"100":0,"101":0,"103":0,"107":0,"111":0,"112":0,"115":0,"117":0,"119":0,"120":0,"121":0,"122":0,"127":0,"128":0,"129":0,"132":0,"133":0,"136":0,"146":1,"148":0,"154":0,"155":0,"157":0,"158":0,"159":0,"162":0,"165":0,"166":0,"182":1,"183":0,"185":0,"200":1,"202":0,"211":0,"214":0,"218":0,"219":0,"220":0,"221":0,"223":0,"224":0,"226":0,"227":0,"229":0,"230":0,"236":0,"240":0,"244":0,"255":1,"256":0,"264":0,"265":0,"266":0,"267":0,"270":0,"273":0,"284":1,"286":0,"289":0,"290":0,"291":0,"292":0,"313":1,"314":0,"315":0,"326":1,"327":0,"328":0,"329":0,"331":0,"333":0,"337":0,"341":0,"345":0,"346":0,"348":0,"350":0,"351":0,"355":0,"356":0,"357":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/query-collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/mock/query-collection.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"queryCollection","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":61}}},"3":{"name":"deleteCollection","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":53}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":36},"end":{"line":65,"column":61}}},"5":{"name":"sendResponse","line":88,"loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":40}}},"6":{"name":"filter","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":32}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":26},"end":{"line":128,"column":42}}},"8":{"name":"setDeepProperty","line":153,"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":10,"column":0},"end":{"line":11,"column":38}},"3":{"start":{"line":26,"column":0},"end":{"line":49,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":48,"column":5}},"5":{"start":{"line":28,"column":4},"end":{"line":45,"column":5}},"6":{"start":{"line":29,"column":6},"end":{"line":29,"column":41}},"7":{"start":{"line":31,"column":6},"end":{"line":41,"column":7}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":77}},"9":{"start":{"line":36,"column":8},"end":{"line":36,"column":47}},"10":{"start":{"line":40,"column":8},"end":{"line":40,"column":46}},"11":{"start":{"line":44,"column":6},"end":{"line":44,"column":39}},"12":{"start":{"line":47,"column":4},"end":{"line":47,"column":14}},"13":{"start":{"line":64,"column":0},"end":{"line":110,"column":1}},"14":{"start":{"line":65,"column":2},"end":{"line":85,"column":5}},"15":{"start":{"line":66,"column":4},"end":{"line":84,"column":5}},"16":{"start":{"line":67,"column":6},"end":{"line":67,"column":16}},"17":{"start":{"line":71,"column":6},"end":{"line":71,"column":53}},"18":{"start":{"line":73,"column":6},"end":{"line":83,"column":7}},"19":{"start":{"line":74,"column":8},"end":{"line":74,"column":31}},"20":{"start":{"line":76,"column":11},"end":{"line":83,"column":7}},"21":{"start":{"line":78,"column":8},"end":{"line":78,"column":59}},"22":{"start":{"line":82,"column":8},"end":{"line":82,"column":58}},"23":{"start":{"line":88,"column":2},"end":{"line":109,"column":3}},"24":{"start":{"line":90,"column":4},"end":{"line":90,"column":43}},"25":{"start":{"line":93,"column":4},"end":{"line":93,"column":42}},"26":{"start":{"line":96,"column":4},"end":{"line":108,"column":5}},"27":{"start":{"line":97,"column":6},"end":{"line":97,"column":16}},"28":{"start":{"line":99,"column":9},"end":{"line":108,"column":5}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":36}},"30":{"start":{"line":102,"column":6},"end":{"line":102,"column":13}},"31":{"start":{"line":106,"column":6},"end":{"line":106,"column":27}},"32":{"start":{"line":107,"column":6},"end":{"line":107,"column":13}},"33":{"start":{"line":119,"column":0},"end":{"line":144,"column":1}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":73}},"35":{"start":{"line":122,"column":2},"end":{"line":141,"column":3}},"36":{"start":{"line":124,"column":4},"end":{"line":124,"column":65}},"37":{"start":{"line":125,"column":4},"end":{"line":140,"column":5}},"38":{"start":{"line":127,"column":6},"end":{"line":127,"column":38}},"39":{"start":{"line":128,"column":6},"end":{"line":132,"column":9}},"40":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"41":{"start":{"line":130,"column":10},"end":{"line":130,"column":82}},"42":{"start":{"line":134,"column":6},"end":{"line":139,"column":7}},"43":{"start":{"line":136,"column":8},"end":{"line":136,"column":69}},"44":{"start":{"line":137,"column":8},"end":{"line":137,"column":55}},"45":{"start":{"line":138,"column":8},"end":{"line":138,"column":81}},"46":{"start":{"line":143,"column":2},"end":{"line":143,"column":19}},"47":{"start":{"line":153,"column":0},"end":{"line":159,"column":1}},"48":{"start":{"line":154,"column":2},"end":{"line":154,"column":33}},"49":{"start":{"line":155,"column":2},"end":{"line":157,"column":3}},"50":{"start":{"line":156,"column":4},"end":{"line":156,"column":52}},"51":{"start":{"line":158,"column":2},"end":{"line":158,"column":49}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":17},"end":{"line":44,"column":25}},{"start":{"line":44,"column":29},"end":{"line":44,"column":38}}]},"4":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":11}},{"start":{"line":76,"column":11},"end":{"line":76,"column":11}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"8":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":11}},{"start":{"line":96,"column":15},"end":{"line":96,"column":23}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":9},"end":{"line":99,"column":9}},{"start":{"line":99,"column":9},"end":{"line":99,"column":9}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"11":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"12":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":8}},{"start":{"line":129,"column":8},"end":{"line":129,"column":8}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"14":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":29},"end":{"line":156,"column":45}},{"start":{"line":156,"column":49},"end":{"line":156,"column":51}}]}},"code":["'use strict';","","module.exports = {","  GET: queryCollection,","  HEAD: queryCollection,","  OPTIONS: queryCollection,","  DELETE: deleteCollection","};","","var _    = require('lodash'),","    util = require('../helpers/util');","","/**"," * Returns an array of all resources in the collection."," * If there are no resources, then an empty array is returned.  No 404 error is thrown."," *"," * If the Swagger API includes \"query\" parameters, they can be used to filter the results."," * Deep property names are allowed (e.g. \"?address.city=New+York\")."," * Query string params that are not defined in the Swagger API are ignored."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function queryCollection(req, res, next, dataStore) {","  dataStore.getCollection(req.path, function(err, resources) {","    if (!err) {","      resources = filter(resources, req);","","      if (resources.length > 0) {","        // Determine the max \"modifiedOn\" date of the remaining items","        res.swagger.lastModified = _.max(resources, 'modifiedOn').modifiedOn;","","        // Extract the \"data\" of each Resource","        resources = _.pluck(resources, 'data');","      }","      else {","        // There is no data, so use the current date/time as the \"last-modified\" header","        res.swagger.lastModified = new Date();","      }","","      // Set the response body (unless it's already been set by other middleware)","      res.body = res.body || resources;","    }","","    next(err);","  });","}","","/**"," * Deletes all resources in the collection."," * If there are no resources, then nothing happens.  No error is thrown."," *"," * If the Swagger API includes \"query\" parameters, they can be used to filter what gets deleted."," * Deep property names are allowed (e.g. \"?address.city=New+York\")."," * Query string params that are not defined in the Swagger API are ignored."," *"," * @param   {Request}   req"," * @param   {Response}  res"," * @param   {function}  next"," * @param   {DataStore} dataStore"," */","function deleteCollection(req, res, next, dataStore) {","  dataStore.getCollection(req.path, function(err, resources) {","    if (err) {","      next(err);","    }","    else {","      // Determine which resources to delete, based on query params","      var resourcesToDelete = filter(resources, req);","","      if (resourcesToDelete.length === 0) {","        sendResponse(null, []);","      }","      else if (resourcesToDelete.length === resources.length) {","        // Delete the whole collection","        dataStore.deleteCollection(req.path, sendResponse);","      }","      else {","        // Only delete the matching resources","        dataStore.delete(resourcesToDelete, sendResponse);","      }","    }","  });","","  // Responds with the deleted resources","  function sendResponse(err, resources) {","    // Extract the \"data\" of each Resource","    resources = _.pluck(resources, 'data');","","    // Use the current date/time as the \"last-modified\" header","    res.swagger.lastModified = new Date();","","    // Set the response body (unless it's already been set by other middleware)","    if (err || res.body) {","      next(err);","    }","    else if (!res.swagger.isCollection) {","      // Response body is a single value, so only return the first item in the collection","      res.body = _.first(resources);","      next();","    }","    else {","      // Response body is the resource that was created/update/deleted","      res.body = resources;","      next();","    }","  }","}","","/**"," * Filters the given {@link Resource} array, using the \"query\" params defined in the Swagger API."," *"," * @param   {Resource[]}    resources"," * @param   {Request}       req"," * @returns {Resource[]}"," */","function filter(resources, req) {","  util.debug('There are %d resources in %s', resources.length, req.path);","","  if (resources.length > 0) {","    // If there are query params, then filter the collection by them","    var queryParams = _.where(req.swagger.params, {in: 'query'});","    if (queryParams.length > 0) {","      // Build the filter object","      var filterCriteria = {data: {}};","      queryParams.forEach(function(param) {","        if (req.query[param.name] !== undefined) {","          setDeepProperty(filterCriteria.data, param.name, req.query[param.name]);","        }","      });","","      if (!_.isEmpty(filterCriteria.data)) {","        // Filter the collection","        util.debug('Filtering resources by %j', filterCriteria.data);","        resources = _.where(resources, filterCriteria);","        util.debug('%d resources matched the filter criteria', resources.length);","      }","    }","  }","","  return resources;","}","","/**"," * Sets a deep property of the given object."," *"," * @param   {object}    obj         The object whose property is to be set."," * @param   {string}    propName    The deep property name (e.g. \"Vet.Address.State\")"," * @param   {*}         propValue   The value to set"," */","function setDeepProperty(obj, propName, propValue) {","  propName = propName.split('.');","  for (var i = 0; i < propName.length - 1; i++) {","    obj = obj[propName[i]] = obj[propName[i]] || {};","  }","  obj[propName[propName.length - 1]] = propValue;","}",""],"l":{"3":1,"10":1,"26":1,"27":0,"28":0,"29":0,"31":0,"33":0,"36":0,"40":0,"44":0,"47":0,"64":1,"65":0,"66":0,"67":0,"71":0,"73":0,"74":0,"76":0,"78":0,"82":0,"88":1,"90":0,"93":0,"96":0,"97":0,"99":0,"101":0,"102":0,"106":0,"107":0,"119":1,"120":0,"122":0,"124":0,"125":0,"127":0,"128":0,"129":0,"130":0,"134":0,"136":0,"137":0,"138":0,"143":0,"153":1,"154":0,"155":0,"156":0,"158":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/file-data-store.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/lib/data-store/file-data-store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"FileDataStore","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":42},"end":{"line":31,"column":73}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":75},"end":{"line":32,"column":95}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":42},"end":{"line":64,"column":84}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":51},"end":{"line":68,"column":65}}},"6":{"name":"getDirectory","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":43}}},"7":{"name":"getFilePath","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":34}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":61}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"5":{"start":{"line":22,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":44}},"8":{"start":{"line":31,"column":0},"end":{"line":58,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":57,"column":5}},"10":{"start":{"line":33,"column":4},"end":{"line":56,"column":5}},"11":{"start":{"line":34,"column":6},"end":{"line":40,"column":7}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":27}},"13":{"start":{"line":39,"column":8},"end":{"line":39,"column":22}},"14":{"start":{"line":43,"column":6},"end":{"line":43,"column":20}},"15":{"start":{"line":44,"column":6},"end":{"line":51,"column":7}},"16":{"start":{"line":46,"column":8},"end":{"line":46,"column":41}},"17":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"18":{"start":{"line":50,"column":8},"end":{"line":50,"column":15}},"19":{"start":{"line":55,"column":6},"end":{"line":55,"column":32}},"20":{"start":{"line":64,"column":0},"end":{"line":77,"column":2}},"21":{"start":{"line":65,"column":2},"end":{"line":65,"column":18}},"22":{"start":{"line":68,"column":2},"end":{"line":76,"column":5}},"23":{"start":{"line":69,"column":4},"end":{"line":75,"column":5}},"24":{"start":{"line":70,"column":6},"end":{"line":70,"column":20}},"25":{"start":{"line":74,"column":6},"end":{"line":74,"column":106}},"26":{"start":{"line":86,"column":0},"end":{"line":90,"column":1}},"27":{"start":{"line":87,"column":2},"end":{"line":87,"column":65}},"28":{"start":{"line":88,"column":2},"end":{"line":88,"column":26}},"29":{"start":{"line":89,"column":2},"end":{"line":89,"column":49}},"30":{"start":{"line":99,"column":0},"end":{"line":104,"column":1}},"31":{"start":{"line":100,"column":2},"end":{"line":100,"column":52}},"32":{"start":{"line":101,"column":2},"end":{"line":101,"column":81}},"33":{"start":{"line":102,"column":2},"end":{"line":102,"column":36}},"34":{"start":{"line":103,"column":2},"end":{"line":103,"column":40}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":26}},{"start":{"line":24,"column":30},"end":{"line":24,"column":43}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]}},"code":["'use strict';","","module.exports = FileDataStore;","","var DataStore = require('./index'),","    Resource  = require('./resource'),","    fs        = require('fs'),","    path      = require('path'),","    mkdirp    = require('mkdirp');","","// Inheritance","FileDataStore.prototype = Object.create(DataStore.prototype);","FileDataStore.prototype.constructor = FileDataStore;","","/**"," * A JSON file data store for REST resources. Each collection is stored as a separate file."," *"," * @param   {string}    baseDir     The base directory where the JSON files will be saved."," * @constructor"," * @extends DataStore"," */","function FileDataStore(baseDir) {","  DataStore.call(this);","  this.__baseDir = baseDir || process.cwd();","}","","/**"," * Overrides {@link DataStore#__openDataStore} to return data from a JSON file."," * @protected"," */","FileDataStore.prototype.__openDataStore = function(collection, callback) {","  fs.readFile(getFilePath(this.__baseDir, collection), {encoding: 'utf8'}, function(err, data) {","    if (err) {","      if (err.code === 'ENOENT') {","        // The file doesn't exist yet, so just return an empty array","        callback(null, []);","      }","      else {","        callback(err);","      }","    }","    else {","      var resources;","      try {","        // Parse the JSON data into an array of Resource objects","        resources = Resource.parse(data);","      }","      catch (e) {","        callback(e);","        return;","      }","","      // Call the callback outside of the try..catch block,","      // so we don't catch any errors that happen in third-party code","      callback(null, resources);","    }","  });","};","","/**"," * Overrides {@link DataStore#__saveDataStore} to store data in a a JSON file."," * @protected"," */","FileDataStore.prototype.__saveDataStore = function(collection, resources, callback) {","  var self = this;","","  // Create the directory path","  mkdirp(getDirectory(this.__baseDir, collection), function(err) {","    if (err) {","      callback(err);","    }","    else {","      // Write the JSON data to the file","      fs.writeFile(getFilePath(self.__baseDir, collection), JSON.stringify(resources, null, 2), callback);","    }","  });","};","","/**"," * Returns the directory where the given collection's JSON file is stored."," *"," * @param   {string}    baseDir         (e.g. \"/some/base/path\")"," * @param   {string}    collection      (e.g. \"/users/jdoe/orders\")"," * @returns {string}                    (e.g. \"/some/base/path/users/jdoe\")"," */","function getDirectory(baseDir, collection) {","  var dir = collection.substring(0, collection.lastIndexOf('/'));","  dir = dir.toLowerCase();","  return path.normalize(path.join(baseDir, dir));","}","","/**"," * Returns the full path of the JSON file for the given collection."," *"," * @param   {string}    baseDir         (e.g. \"/some/base/path\")"," * @param   {string}    collection      (e.g. \"/users/jdoe/orders\")"," * @returns {string}                    (e.g. \"/some/base/path/users/jdoe/orders.json\")"," */","function getFilePath(baseDir, collection) {","  var directory = getDirectory(baseDir, collection);","  var fileName = collection.substring(collection.lastIndexOf('/') + 1) + '.json';","  fileName = fileName.toLowerCase();","  return path.join(directory, fileName);","}",""],"l":{"3":1,"5":1,"12":1,"13":1,"22":1,"23":0,"24":0,"31":1,"32":0,"33":0,"34":0,"36":0,"39":0,"43":0,"44":0,"46":0,"49":0,"50":0,"55":0,"64":1,"65":0,"68":0,"69":0,"70":0,"74":0,"86":1,"87":0,"88":0,"89":0,"99":1,"100":0,"101":0,"102":0,"103":0}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/sample1.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/sample1.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{"1":1,"2":1},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":33},"end":{"line":16,"column":59}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":30}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"5":{"start":{"line":16,"column":0},"end":{"line":31,"column":3}},"6":{"start":{"line":19,"column":2},"end":{"line":26,"column":4}},"7":{"start":{"line":28,"column":2},"end":{"line":30,"column":5}},"8":{"start":{"line":29,"column":4},"end":{"line":29,"column":81}}},"branchMap":{},"code":["'use strict';","/**************************************************************************************************"," * This sample demonstrates the most simplistic usage of Swagger-Express-Middleware."," * It simply creates a new Express Application and adds all of the Swagger middleware"," * without changing any options, and without adding any custom middleware."," **************************************************************************************************/","","// Set the DEBUG environment variable to enable debug output","process.env.DEBUG = 'swagger:middleware';","","var express = require('express');","var middleware = require('swagger-express-middleware');","","var app = express();","","middleware('PetStore.yaml', app, function(err, middleware) {","  // Add all the Swagger Express Middleware, or just the ones you need.","  // NOTE: Some of these accept optional options (omitted here for brevity)","  app.use(","    middleware.metadata(),","    middleware.CORS(),","    middleware.files(),","    middleware.parseRequest(),","    middleware.validateRequest(),","    middleware.mock()","  );","","  app.listen(8000, function() {","    console.log('The Swagger Pet Store is now running at http://localhost:8000');","  });","});",""],"l":{"9":1,"11":1,"12":1,"14":1,"16":1,"19":1,"28":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/node_modules/swagger-express-middleware/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/node_modules/swagger-express-middleware/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}}},"branchMap":{},"code":["module.exports = require('../../../');",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/sample2.js":{"path":"/home/travis/build/npmtest/node-npmtest-swagger-express-middleware/node_modules/swagger-express-middleware/samples/sample2.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":33},"end":{"line":21,"column":47}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":30},"end":{"line":80,"column":55}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":42},"end":{"line":84,"column":61}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":61},"end":{"line":94,"column":80}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":10},"end":{"line":110,"column":40}}},"6":{"name":"(anonymous_6)","line":116,"loc":{"start":{"line":116,"column":19},"end":{"line":116,"column":30}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"2":{"start":{"line":10,"column":0},"end":{"line":16,"column":39}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":20}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"5":{"start":{"line":21,"column":0},"end":{"line":119,"column":3}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":35}},"7":{"start":{"line":24,"column":2},"end":{"line":30,"column":4}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":31}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":33}},"11":{"start":{"line":38,"column":2},"end":{"line":52,"column":5}},"12":{"start":{"line":54,"column":2},"end":{"line":71,"column":5}},"13":{"start":{"line":74,"column":2},"end":{"line":77,"column":4}},"14":{"start":{"line":80,"column":2},"end":{"line":103,"column":5}},"15":{"start":{"line":81,"column":4},"end":{"line":102,"column":5}},"16":{"start":{"line":84,"column":6},"end":{"line":98,"column":9}},"17":{"start":{"line":85,"column":8},"end":{"line":91,"column":9}},"18":{"start":{"line":87,"column":10},"end":{"line":87,"column":30}},"19":{"start":{"line":90,"column":10},"end":{"line":90,"column":25}},"20":{"start":{"line":94,"column":8},"end":{"line":97,"column":11}},"21":{"start":{"line":96,"column":10},"end":{"line":96,"column":29}},"22":{"start":{"line":101,"column":6},"end":{"line":101,"column":13}},"23":{"start":{"line":107,"column":2},"end":{"line":107,"column":33}},"24":{"start":{"line":110,"column":2},"end":{"line":114,"column":5}},"25":{"start":{"line":111,"column":4},"end":{"line":111,"column":27}},"26":{"start":{"line":112,"column":4},"end":{"line":112,"column":21}},"27":{"start":{"line":113,"column":4},"end":{"line":113,"column":108}},"28":{"start":{"line":116,"column":2},"end":{"line":118,"column":5}},"29":{"start":{"line":117,"column":4},"end":{"line":117,"column":81}}},"branchMap":{"1":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"2":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]}},"code":["'use strict';","/**************************************************************************************************"," * This sample demonstrates a few more advanced features of Swagger-Express-Middleware,"," * such as setting a few options, initializing the mock data store, and adding custom middleware logic."," **************************************************************************************************/","","// Set the DEBUG environment variable to enable debug output of Swagger Middleware AND Swagger Parser","process.env.DEBUG = 'swagger:*';","","var util            = require('util'),","    path            = require('path'),","    express         = require('express'),","    swagger         = require('swagger-express-middleware'),","    Middleware      = swagger.Middleware,","    MemoryDataStore = swagger.MemoryDataStore,","    Resource        = swagger.Resource;","","var app = express();","var middleware = new Middleware(app);","","middleware.init('PetStore.yaml', function(err) {","  // Create a custom data store with some initial mock data","  var myDB = new MemoryDataStore();","  myDB.save(","    new Resource('/pets/Lassie', {name: 'Lassie', type: 'dog', tags: ['brown', 'white']}),","    new Resource('/pets/Clifford', {name: 'Clifford', type: 'dog', tags: ['red', 'big']}),","    new Resource('/pets/Garfield', {name: 'Garfield', type: 'cat', tags: ['orange']}),","    new Resource('/pets/Snoopy', {name: 'Snoopy', type: 'dog', tags: ['black', 'white']}),","    new Resource('/pets/Hello%20Kitty', {name: 'Hello Kitty', type: 'cat', tags: ['white']})","  );","","  // Enable Express' case-sensitive and strict options","  // (so \"/pets/Fido\", \"/pets/fido\", and \"/pets/fido/\" are all different)","  app.enable('case sensitive routing');","  app.enable('strict routing');","","  app.use(middleware.metadata());","  app.use(middleware.files(","    {","      // Override the Express App's case-sensitive and strict-routing settings","      // for the Files middleware.","      caseSensitive: false,","      strict: false","    },","    {","      // Serve the Swagger API from \"/swagger/api\" instead of \"/api-docs\"","      apiPath: '/swagger/api',","","      // Disable serving the \"PetStore.yaml\" file","      rawFilesPath: false","    }","  ));","","  app.use(middleware.parseRequest(","    {","      // Configure the cookie parser to use secure cookies","      cookie: {","        secret: 'MySuperSecureSecretKey'","      },","","      // Don't allow JSON content over 100kb (default is 1mb)","      json: {","        limit: '100kb'","      },","","      // Change the location for uploaded pet photos (default is the system's temp directory)","      multipart: {","        dest: path.join(__dirname, 'photos')","      }","    }","  ));","","  // These two middleware don't have any options (yet)","  app.use(","    middleware.CORS(),","    middleware.validateRequest()","  );","","  // Add custom middleware","  app.patch('/pets/:petName', function(req, res, next) {","    if (req.body.name !== req.params.petName) {","      // The pet's name has changed, so change its URL.","      // Start by deleting the old resource","      myDB.delete(new Resource(req.path), function(err, pet) {","        if (pet) {","          // Merge the new data with the old data","          pet.merge(req.body);","        }","        else {","          pet = req.body;","        }","","        // Save the pet with the new URL","        myDB.save(new Resource('/pets', req.body.name, pet), function(err, pet) {","          // Send the response","          res.json(pet.data);","        });","      });","    }","    else {","      next();","    }","  });","","  // The mock middleware will use our custom data store,","  // which we already pre-populated with mock data","  app.use(middleware.mock(myDB));","","  // Add a custom error handler that returns errors as HTML","  app.use(function(err, req, res, next) {","    res.status(err.status);","    res.type('html');","    res.send(util.format('<html><body><h1>%d Error!</h1><p>%s</p></body></html>', err.status, err.message));","  });","","  app.listen(8000, function() {","    console.log('The Swagger Pet Store is now running at http://localhost:8000');","  });","});",""],"l":{"8":1,"10":1,"18":1,"19":1,"21":1,"23":1,"24":1,"34":1,"35":1,"37":1,"38":1,"54":1,"74":1,"80":1,"81":0,"84":0,"85":0,"87":0,"90":0,"94":0,"96":0,"101":0,"107":1,"110":1,"111":0,"112":0,"113":0,"116":1,"117":0}}}